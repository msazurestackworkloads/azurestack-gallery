{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "adminUsername": {
            "type": "string",
            "defaultValue": "azureuser",
            "metadata": {
                "description": "The linux user name."
            }
        },
        "adminPublicKey": {
            "type": "string",
            "metadata": {
                "description": "User's RSA public key."
            }
        },
        "virtualMachineSize": {
            "type": "string",
            "defaultValue": "Standard_F8s_v2",
            "metadata": {
                "description": "The VM size."
            }
        },
        "virtualMachinePublisher": {
            "type": "string",
            "defaultValue": "microsoft-aks",
            "metadata": {
                "description": "The guest OS image publisher."
            }
        },
        "virtualMachineOffer": {
            "type": "string",
            "defaultValue": "aks",
            "metadata": {
                "description": "The guest OS image offer."
            }
        },
        "virtualMachineSku": {
            "type": "string",
            "defaultValue": "aks-ubuntu-1604-201909",
            "metadata": {
                "description": "The guest OS image SKU."
            }
        },
        "virtualMachineVersion": {
            "type": "string",
            "defaultValue": "latest",
            "metadata": {
                "description": "The guest OS image version."
            }
        },
        "pipName": {
            "type": "string",
            "metadata": {
                "description": "The public IP resource name."
            }
        },
        "pipDomainNameLabel": {
            "type": "string",
            "metadata": {
                "description": "The public IP DNS label."
            }
        },
        "pipAllocationMethod": {
            "type": "string",
            "defaultValue": "dynamic",
            "metadata": {
                "description": "The public IP allocation method."
            }
        },
        "storageAccountResourceId": {
            "type": "string",
            "metadata": {
                "description": "An already existing storage account resource identifier."
            }
        },
        "storageAccountContainer": {
            "type": "string",
            "metadata": {
                "description": "An already existing storage account container name."
            }
        },
        "pfxKeyVaultResourceId": {
            "type": "string",
            "metadata": {
                "description": "The Key Vault resource identifier."
            }
        },
        "pfxKeyVaultSecretUrl": {
            "type": "string",
            "metadata": {
                "description": "Absolute URL to the Key Vault secret that stores the pfx certificate."
            }
        },
        "pfxThumbprint": {
            "type": "string",
            "metadata": {
                "description": "The certificate thumbprint."
            }
        },
        "registryTag": {
            "type": "string",
            "defaultValue": "2.7.1",
            "metadata": {
                "description": "Docker registry version (image tag)."
            }
        },
        "registryReplicas": {
            "type": "string",
            "defaultValue": "20",
            "metadata": {
                "description": "Docker registry replicas."
            }
        },
        "servicePrincipalClientId": {
            "type": "securestring",
            "metadata": {
                "description": "Client ID with access to list and get secrets from the credentials Key Vault instance"
            }
        },
        "servicePrincipalClientSecret": {
            "type": "securestring",
            "metadata": {
                "description": "Secret of the client with access to list and get secrets from the credentials Key Vault instance"
            }
        },
        "enableValidations": {
            "type": "string",
            "defaultValue": "false",
            "metadata": {
                "description": "Docker registry validation flag."
            }
        }
    },
    "variables": {
        "rgname": "[resourceGroup().name]",
        "nsgName": "[concat(variables('rgname'), '-nsg')]",
        "nicName": "[concat(variables('rgname'), '-nic')]",
        "vnetName": "[concat(variables('rgname'), '-vnet')]",
        "vnetId": "[resourceId('Microsoft.Network/virtualNetworks',variables('vnetName'))]",
        "subnetRef": "[concat(variables('vnetId'), '/subnets/default')]",
        "tenantId": "[subscription().tenantId]",
        "location": "[resourceGroup().location]",
        "provisionScriptParameters": "[concat('ADMIN_USER_NAME=', parameters('adminUsername'),' SA_RESOURCE_ID=', parameters('storageAccountResourceId'),' SA_CONTAINER=', parameters('storageAccountContainer'),' KV_RESOURCE_ID=', parameters('pfxKeyVaultResourceId'),' CERT_THUMBPRINT=', parameters('pfxThumbprint'),' PIP_LABEL=', parameters('pipDomainNameLabel'),' REGISTRY_TAG=', parameters('registryTag'),' SPN_CLIENT_ID=',parameters('servicePrincipalClientId'),' SPN_CLIENT_SECRET=',parameters('servicePrincipalClientSecret'),' ENABLE_VALIDATIONS=',parameters('enableValidations'),' REGISTRY_REPLICAS=', parameters('registryReplicas'))]"
    },
    "resources": [
        {
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[concat(variables('rgname'),'-vm')]",
            "apiVersion": "2017-03-30",
            "location": "[resourceGroup().location]",
            "properties": {
                "osProfile": {
                    "computerName": "[concat(variables('rgname'),'-vm')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "customData": "[base64(concat('#cloud-config\n\nwrite_files:\n- path: /opt/azure/containers/script.sh\n  permissions: \"0744\"\n  encoding: gzip\n  owner: root:root\n  content: !!binary |\n    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'))]",
                    "linuxConfiguration": {
                        "disablePasswordAuthentication": true,
                        "ssh": {
                            "publicKeys": [
                                {
                                    "path": "[concat('/home/', parameters('adminUsername'), '/.ssh/authorized_keys')]",
                                    "keyData": "[parameters('adminPublicKey')]"
                                }
                            ]
                        }
                    },
                    "secrets": [
                        {
                            "sourceVault": {
                                "id": "[parameters('pfxKeyVaultResourceId')]"
                            },
                            "vaultCertificates": [
                                {
                                    "certificateUrl": "[parameters('pfxKeyVaultSecretUrl')]"
                                }
                            ]
                        }
                    ]
                },
                "hardwareProfile": {
                    "vmSize": "[parameters('virtualMachineSize')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[parameters('virtualMachinePublisher')]",
                        "offer": "[parameters('virtualMachineOffer')]",
                        "sku": "[parameters('virtualMachineSku')]",
                        "version": "[parameters('virtualMachineVersion')]"
                    },
                    "osDisk": {
                        "createOption": "FromImage",
                        "diskSizeGB": 30,
                        "managedDisk": {
                            "storageAccountType": "Premium_LRS"
                        }
                    },
                    "dataDisks": []
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
                        }
                    ]
                }
            },
            "dependsOn": [
                "[concat('Microsoft.Network/networkInterfaces/',variables('nicName'))]"
            ]
        },
        {
            "apiVersion": "2017-03-30",
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/',variables('rgname'),'-vm')]"
            ],
            "location": "[resourceGroup().location]",
            "name": "[concat(variables('rgname'),'-vm/cse')]",
            "properties": {
                "protectedSettings": {
                    "commandToExecute": "[concat(variables('provisionScriptParameters'),' LOCATION=',variables('location'),' TENANT_ID=',variables('tenantId'),' PIP_FQDN=', '\"', reference(resourceId('Microsoft.Network/publicIPAddresses',parameters('pipName')),'2017-10-01').dnsSettings.fqdn,'\"',' /opt/azure/containers/script.sh >> /var/log/azure/docker-registry.log 2>&1')]"
                },
                "publisher": "Microsoft.Azure.Extensions",
                "settings": {},
                "type": "CustomScript",
                "typeHandlerVersion": "2.0",
                "autoUpgradeMinorVersion": true
            },
            "type": "Microsoft.Compute/virtualMachines/extensions"
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[concat(variables('rgname'),'-vnet')]",
            "apiVersion": "2017-10-01",
            "location": "[resourceGroup().location]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "172.16.0.0/24"
                    ]
                },
                "subnets": [
                    {
                        "name": "default",
                        "properties": {
                            "addressPrefix": "172.16.0.0/24"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[variables('nicName')]",
            "apiVersion": "2017-10-01",
            "location": "[resourceGroup().location]",
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "subnet": {
                                "id": "[variables('subnetRef')]"
                            },
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIpAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIpAddresses',parameters('pipName'))]"
                            }
                        }
                    }
                ],
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups',variables('nsgName'))]"
                }
            },
            "dependsOn": [
                "[concat('Microsoft.Network/virtualNetworks/',variables('rgname'),'-vnet')]",
                "[concat('Microsoft.Network/publicIpAddresses/',parameters('pipName'))]",
                "[concat('Microsoft.Network/networkSecurityGroups/',variables('nsgName'))]"
            ]
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "sku": {
                "name": "Basic"
            },
            "name": "[parameters('pipName')]",
            "apiVersion": "2017-10-01",
            "location": "[resourceGroup().location]",
            "properties": {
                "publicIpAllocationMethod": "[parameters('pipAllocationMethod')]",
                "dnsSettings": {
                    "domainNameLabel": "[parameters('pipDomainNameLabel')]"
                }
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[variables('nsgName')]",
            "apiVersion": "2017-10-01",
            "location": "[resourceGroup().location]",
            "properties": {
                "securityRules": [
                    {
                        "name": "HTTPS",
                        "properties": {
                            "priority": 320,
                            "protocol": "Tcp",
                            "access": "Allow",
                            "direction": "Inbound",
                            "sourceApplicationSecurityGroups": [],
                            "destinationApplicationSecurityGroups": [],
                            "sourceAddressPrefix": "*",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "*",
                            "destinationPortRange": "443"
                        }
                    }
                ]
            }
        }
    ],
    "outputs": {
        "adminUsername": {
            "type": "string",
            "value": "[parameters('adminUsername')]"
        },
        "virtualMachineSku": {
            "type": "string",
            "value": "[parameters('virtualMachineSku')]"
        },
        "registryTag": {
            "type": "string",
            "value": "[parameters('registryTag')]"
        },
        "registryReplicas": {
            "type": "string",
            "value": "[parameters('registryReplicas')]"
        }
    }
}