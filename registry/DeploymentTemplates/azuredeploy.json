{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "adminUsername": {
            "type": "string",
            "defaultValue": "azureuser",
            "metadata": {
                "description": "The linux user name."
            }
        },
        "adminPublicKey": {
            "type": "string",
            "metadata": {
                "description": "User's RSA public key."
            }
        },
        "virtualMachineSize": {
            "type": "string",
            "defaultValue": "Standard_F8s_v2",
            "metadata": {
                "description": "The VM size."
            }
        },
        "virtualMachinePublisher": {
            "type": "string",
            "defaultValue": "microsoft-aks",
            "metadata": {
                "description": "The guest OS image publisher."
            }
        },
        "virtualMachineOffer": {
            "type": "string",
            "defaultValue": "aks",
            "metadata": {
                "description": "The guest OS image offer."
            }
        },
        "virtualMachineSku": {
            "type": "string",
            "defaultValue": "aks-ubuntu-1604-201909",
            "metadata": {
                "description": "The guest OS image SKU."
            }
        },
        "virtualMachineVersion": {
            "type": "string",
            "defaultValue": "latest",
            "metadata": {
                "description": "The guest OS image version."
            }
        },
        "pipName": {
            "type": "string",
            "metadata": {
                "description": "The public IP resource name."
            }
        },
        "pipDomainNameLabel": {
            "type": "string",
            "metadata": {
                "description": "The public IP DNS label."
            }
        },
        "pipAllocationMethod": {
            "type": "string",
            "defaultValue": "dynamic",
            "metadata": {
                "description": "The public IP allocation method."
            }
        },
        "storageAccountResourceId": {
            "type": "string",
            "metadata": {
                "description": "An already existing storage account resource identifier."
            }
        },
        "storageAccountContainer": {
            "type": "string",
            "metadata": {
                "description": "An already existing storage account container name."
            }
        },
        "pfxKeyVaultResourceId": {
            "type": "string",
            "metadata": {
                "description": "The Key Vault resource identifier."
            }
        },
        "pfxKeyVaultSecretUrl": {
            "type": "string",
            "metadata": {
                "description": "Absolute URL to the Key Vault secret that stores the pfx certificate."
            }
        },
        "pfxThumbprint": {
            "type": "string",
            "metadata": {
                "description": "The certificate thumbprint."
            }
        },        
        "registryReplicas": {
            "type": "string",
            "defaultValue": "20",
            "metadata": {
                "description": "Docker registry replicas."
            }
        },
        "servicePrincipalClientId": {
            "type": "securestring",
            "metadata": {
                "description": "Client ID with access to list and get secrets from the credentials Key Vault instance"
            }
        },
        "servicePrincipalClientSecret": {
            "type": "securestring",
            "metadata": {
                "description": "Secret of the client with access to list and get secrets from the credentials Key Vault instance"
            }
        },
        "enableValidations": {
            "type": "string",
            "defaultValue": "false",
            "metadata": {
                "description": "Docker registry validation flag."
            }
        }
    },
    "variables": {
        "rgname": "[resourceGroup().name]",
        "nsgName": "[concat(variables('rgname'), '-nsg')]",
        "nicName": "[concat(variables('rgname'), '-nic')]",
        "vnetName": "[concat(variables('rgname'), '-vnet')]",
        "vnetId": "[resourceId('Microsoft.Network/virtualNetworks',variables('vnetName'))]",
        "subnetRef": "[concat(variables('vnetId'), '/subnets/default')]",
        "tenantId": "[subscription().tenantId]",
        "location": "[resourceGroup().location]",
        "marketplaceVersion": "1.0.1",
        "registryTag": "2.7.1",
        "containerStatusWaitTimeInSeconds": "900",
        "provisionScriptParameters": "[concat('MARKETPLACE_VERSION=', variables('marketplaceVersion'),' CONTAINER_STATUS_WAIT_TIME=', variables('containerStatusWaitTimeInSeconds'),' ADMIN_USER_NAME=', parameters('adminUsername'),' SA_RESOURCE_ID=', parameters('storageAccountResourceId'),' SA_CONTAINER=', parameters('storageAccountContainer'),' KV_RESOURCE_ID=', parameters('pfxKeyVaultResourceId'),' CERT_THUMBPRINT=', parameters('pfxThumbprint'),' PIP_LABEL=', parameters('pipDomainNameLabel'),' REGISTRY_TAG=', variables('registryTag'),' SPN_CLIENT_ID=',parameters('servicePrincipalClientId'),' SPN_CLIENT_SECRET=',parameters('servicePrincipalClientSecret'),' ENABLE_VALIDATIONS=',parameters('enableValidations'),' REGISTRY_REPLICAS=', parameters('registryReplicas'))]"
    },
    "resources": [
        {
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[concat(variables('rgname'),'-vm')]",
            "apiVersion": "2017-03-30",
            "location": "[resourceGroup().location]",
            "properties": {
                "osProfile": {
                    "computerName": "[concat(variables('rgname'),'-vm')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "customData": "[base64(concat('#cloud-config\n\nwrite_files:\n- path: \"/opt/azure/containers/script.sh\"\n  permissions: \"0744\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    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'))]",
                    "linuxConfiguration": {
                        "disablePasswordAuthentication": true,
                        "ssh": {
                            "publicKeys": [
                                {
                                    "path": "[concat('/home/', parameters('adminUsername'), '/.ssh/authorized_keys')]",
                                    "keyData": "[parameters('adminPublicKey')]"
                                }
                            ]
                        }
                    },
                    "secrets": [
                        {
                            "sourceVault": {
                                "id": "[parameters('pfxKeyVaultResourceId')]"
                            },
                            "vaultCertificates": [
                                {
                                    "certificateUrl": "[parameters('pfxKeyVaultSecretUrl')]"
                                }
                            ]
                        }
                    ]
                },
                "hardwareProfile": {
                    "vmSize": "[parameters('virtualMachineSize')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[parameters('virtualMachinePublisher')]",
                        "offer": "[parameters('virtualMachineOffer')]",
                        "sku": "[parameters('virtualMachineSku')]",
                        "version": "[parameters('virtualMachineVersion')]"
                    },
                    "osDisk": {
                        "createOption": "FromImage",
                        "diskSizeGB": 30,
                        "managedDisk": {
                            "storageAccountType": "Premium_LRS"
                        }
                    },
                    "dataDisks": []
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
                        }
                    ]
                }
            },
            "dependsOn": [
                "[concat('Microsoft.Network/networkInterfaces/',variables('nicName'))]"
            ]
        },
        {
            "apiVersion": "2017-03-30",
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/',variables('rgname'),'-vm')]"
            ],
            "location": "[resourceGroup().location]",
            "name": "[concat(variables('rgname'),'-vm/cse')]",
            "properties": {
                "protectedSettings": {
                    "commandToExecute": "[concat(variables('provisionScriptParameters'),' LOCATION=',variables('location'),' TENANT_ID=',variables('tenantId'),' PIP_FQDN=', '\"', reference(resourceId('Microsoft.Network/publicIPAddresses',parameters('pipName')),'2017-10-01').dnsSettings.fqdn,'\"',' /opt/azure/containers/script.sh >> /var/log/azure/docker-registry.log 2>&1')]"
                },
                "publisher": "Microsoft.Azure.Extensions",
                "settings": {},
                "type": "CustomScript",
                "typeHandlerVersion": "2.0",
                "autoUpgradeMinorVersion": true
            },
            "type": "Microsoft.Compute/virtualMachines/extensions"
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[concat(variables('rgname'),'-vnet')]",
            "apiVersion": "2017-10-01",
            "location": "[resourceGroup().location]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "172.16.0.0/24"
                    ]
                },
                "subnets": [
                    {
                        "name": "default",
                        "properties": {
                            "addressPrefix": "172.16.0.0/24"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[variables('nicName')]",
            "apiVersion": "2017-10-01",
            "location": "[resourceGroup().location]",
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "subnet": {
                                "id": "[variables('subnetRef')]"
                            },
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIpAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIpAddresses',parameters('pipName'))]"
                            }
                        }
                    }
                ],
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups',variables('nsgName'))]"
                }
            },
            "dependsOn": [
                "[concat('Microsoft.Network/virtualNetworks/',variables('rgname'),'-vnet')]",
                "[concat('Microsoft.Network/publicIpAddresses/',parameters('pipName'))]",
                "[concat('Microsoft.Network/networkSecurityGroups/',variables('nsgName'))]"
            ]
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "sku": {
                "name": "Basic"
            },
            "name": "[parameters('pipName')]",
            "apiVersion": "2017-10-01",
            "location": "[resourceGroup().location]",
            "properties": {
                "publicIpAllocationMethod": "[parameters('pipAllocationMethod')]",
                "dnsSettings": {
                    "domainNameLabel": "[parameters('pipDomainNameLabel')]"
                }
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[variables('nsgName')]",
            "apiVersion": "2017-10-01",
            "location": "[resourceGroup().location]",
            "properties": {
                "securityRules": [
                    {
                        "name": "HTTPS",
                        "properties": {
                            "priority": 320,
                            "protocol": "Tcp",
                            "access": "Allow",
                            "direction": "Inbound",
                            "sourceApplicationSecurityGroups": [],
                            "destinationApplicationSecurityGroups": [],
                            "sourceAddressPrefix": "*",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "*",
                            "destinationPortRange": "443"
                        }
                    }
                ]
            }
        }
    ],
    "outputs": {
        "adminUsername": {
            "type": "string",
            "value": "[parameters('adminUsername')]"
        },
        "virtualMachineSku": {
            "type": "string",
            "value": "[parameters('virtualMachineSku')]"
        }
    }
}