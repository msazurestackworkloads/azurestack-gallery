{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "adminUsername": {
            "type": "string",
            "defaultValue": "azureuser",
            "metadata": {
                "description": "The linux user name."
            }
        },
        "adminPublicKey": {
            "type": "string",
            "metadata": {
                "description": "User's RSA public key."
            }
        },
        "virtualMachineSize": {
            "type": "string",
            "defaultValue": "Standard_F8s_v2",
            "metadata": {
                "description": "The VM size."
            }
        },
        "virtualMachinePublisher": {
            "type": "string",
            "defaultValue": "microsoft-aks",
            "metadata": {
                "description": "The guest OS image publisher."
            }
        },
        "virtualMachineOffer": {
            "type": "string",
            "defaultValue": "aks",
            "metadata": {
                "description": "The guest OS image offer."
            }
        },
        "virtualMachineSku": {
            "type": "string",
            "defaultValue": "aks-ubuntu-1604-201909",
            "metadata": {
                "description": "The guest OS image SKU."
            }
        },
        "virtualMachineVersion": {
            "type": "string",
            "defaultValue": "latest",
            "metadata": {
                "description": "The guest OS image version."
            }
        },
        "pipName": {
            "type": "string",
            "metadata": {
                "description": "The public IP resource name."
            }
        },
        "pipDomainNameLabel": {
            "type": "string",
            "metadata": {
                "description": "The public IP DNS label."
            }
        },
        "pipAllocationMethod": {
            "type": "string",
            "defaultValue": "dynamic",
            "metadata": {
                "description": "The public IP allocation method."
            }
        },
        "storageAccountResourceId": {
            "type": "string",
            "metadata": {
                "description": "An already existing storage account resource identifier."
            }
        },
        "storageAccountContainer": {
            "type": "string",
            "metadata": {
                "description": "An already existing storage account container name."
            }
        },
        "pfxKeyVaultResourceId": {
            "type": "string",
            "metadata": {
                "description": "The Key Vault resource identifier."
            }
        },
        "pfxKeyVaultSecretUrl": {
            "type": "string",
            "metadata": {
                "description": "Absolute URL to the Key Vault secret that stores the pfx certificate."
            }
        },
        "pfxThumbprint": {
            "type": "string",
            "metadata": {
                "description": "The certificate thumbprint."
            }
        },        
        "registryReplicas": {
            "type": "string",
            "defaultValue": "20",
            "metadata": {
                "description": "Docker registry replicas."
            }
        },
        "servicePrincipalClientId": {
            "type": "securestring",
            "metadata": {
                "description": "Client ID with access to list and get secrets from the credentials Key Vault instance"
            }
        },
        "servicePrincipalClientSecret": {
            "type": "securestring",
            "metadata": {
                "description": "Secret of the client with access to list and get secrets from the credentials Key Vault instance"
            }
        },
        "enableValidations": {
            "type": "string",
            "defaultValue": "false",
            "metadata": {
                "description": "Docker registry validation flag."
            }
        }
    },
    "variables": {
        "rgname": "[resourceGroup().name]",
        "nsgName": "[concat(variables('rgname'), '-nsg')]",
        "nicName": "[concat(variables('rgname'), '-nic')]",
        "vnetName": "[concat(variables('rgname'), '-vnet')]",
        "vnetId": "[resourceId('Microsoft.Network/virtualNetworks',variables('vnetName'))]",
        "subnetRef": "[concat(variables('vnetId'), '/subnets/default')]",
        "tenantId": "[subscription().tenantId]",
        "location": "[resourceGroup().location]",
        "marketplaceVersion": "1.0.0",
        "registryTag": "2.7.1",
        "provisionScriptParameters": "[concat('MARKETPLACE_VERSION=', variables('marketplaceVersion'),' ADMIN_USER_NAME=', parameters('adminUsername'),' SA_RESOURCE_ID=', parameters('storageAccountResourceId'),' SA_CONTAINER=', parameters('storageAccountContainer'),' KV_RESOURCE_ID=', parameters('pfxKeyVaultResourceId'),' CERT_THUMBPRINT=', parameters('pfxThumbprint'),' PIP_LABEL=', parameters('pipDomainNameLabel'),' REGISTRY_TAG=', variables('registryTag'),' SPN_CLIENT_ID=',parameters('servicePrincipalClientId'),' SPN_CLIENT_SECRET=',parameters('servicePrincipalClientSecret'),' ENABLE_VALIDATIONS=',parameters('enableValidations'),' REGISTRY_REPLICAS=', parameters('registryReplicas'))]"
    },
    "resources": [
        {
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[concat(variables('rgname'),'-vm')]",
            "apiVersion": "2017-03-30",
            "location": "[resourceGroup().location]",
            "properties": {
                "osProfile": {
                    "computerName": "[concat(variables('rgname'),'-vm')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "customData": "[base64(concat('#cloud-config\n\nwrite_files:\n- path: \"/opt/azure/containers/script.sh\"\n  permissions: \"0744\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    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'))]",
                    "linuxConfiguration": {
                        "disablePasswordAuthentication": true,
                        "ssh": {
                            "publicKeys": [
                                {
                                    "path": "[concat('/home/', parameters('adminUsername'), '/.ssh/authorized_keys')]",
                                    "keyData": "[parameters('adminPublicKey')]"
                                }
                            ]
                        }
                    },
                    "secrets": [
                        {
                            "sourceVault": {
                                "id": "[parameters('pfxKeyVaultResourceId')]"
                            },
                            "vaultCertificates": [
                                {
                                    "certificateUrl": "[parameters('pfxKeyVaultSecretUrl')]"
                                }
                            ]
                        }
                    ]
                },
                "hardwareProfile": {
                    "vmSize": "[parameters('virtualMachineSize')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[parameters('virtualMachinePublisher')]",
                        "offer": "[parameters('virtualMachineOffer')]",
                        "sku": "[parameters('virtualMachineSku')]",
                        "version": "[parameters('virtualMachineVersion')]"
                    },
                    "osDisk": {
                        "createOption": "FromImage",
                        "diskSizeGB": 30,
                        "managedDisk": {
                            "storageAccountType": "Premium_LRS"
                        }
                    },
                    "dataDisks": []
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
                        }
                    ]
                }
            },
            "dependsOn": [
                "[concat('Microsoft.Network/networkInterfaces/',variables('nicName'))]"
            ]
        },
        {
            "apiVersion": "2017-03-30",
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/',variables('rgname'),'-vm')]"
            ],
            "location": "[resourceGroup().location]",
            "name": "[concat(variables('rgname'),'-vm/cse')]",
            "properties": {
                "protectedSettings": {
                    "commandToExecute": "[concat(variables('provisionScriptParameters'),' LOCATION=',variables('location'),' TENANT_ID=',variables('tenantId'),' PIP_FQDN=', '\"', reference(resourceId('Microsoft.Network/publicIPAddresses',parameters('pipName')),'2017-10-01').dnsSettings.fqdn,'\"',' /opt/azure/containers/script.sh >> /var/log/azure/docker-registry.log 2>&1')]"
                },
                "publisher": "Microsoft.Azure.Extensions",
                "settings": {},
                "type": "CustomScript",
                "typeHandlerVersion": "2.0",
                "autoUpgradeMinorVersion": true
            },
            "type": "Microsoft.Compute/virtualMachines/extensions"
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[concat(variables('rgname'),'-vnet')]",
            "apiVersion": "2017-10-01",
            "location": "[resourceGroup().location]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "172.16.0.0/24"
                    ]
                },
                "subnets": [
                    {
                        "name": "default",
                        "properties": {
                            "addressPrefix": "172.16.0.0/24"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[variables('nicName')]",
            "apiVersion": "2017-10-01",
            "location": "[resourceGroup().location]",
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "subnet": {
                                "id": "[variables('subnetRef')]"
                            },
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIpAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIpAddresses',parameters('pipName'))]"
                            }
                        }
                    }
                ],
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups',variables('nsgName'))]"
                }
            },
            "dependsOn": [
                "[concat('Microsoft.Network/virtualNetworks/',variables('rgname'),'-vnet')]",
                "[concat('Microsoft.Network/publicIpAddresses/',parameters('pipName'))]",
                "[concat('Microsoft.Network/networkSecurityGroups/',variables('nsgName'))]"
            ]
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "sku": {
                "name": "Basic"
            },
            "name": "[parameters('pipName')]",
            "apiVersion": "2017-10-01",
            "location": "[resourceGroup().location]",
            "properties": {
                "publicIpAllocationMethod": "[parameters('pipAllocationMethod')]",
                "dnsSettings": {
                    "domainNameLabel": "[parameters('pipDomainNameLabel')]"
                }
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[variables('nsgName')]",
            "apiVersion": "2017-10-01",
            "location": "[resourceGroup().location]",
            "properties": {
                "securityRules": [
                    {
                        "name": "HTTPS",
                        "properties": {
                            "priority": 320,
                            "protocol": "Tcp",
                            "access": "Allow",
                            "direction": "Inbound",
                            "sourceApplicationSecurityGroups": [],
                            "destinationApplicationSecurityGroups": [],
                            "sourceAddressPrefix": "*",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "*",
                            "destinationPortRange": "443"
                        }
                    }
                ]
            }
        }
    ],
    "outputs": {
        "adminUsername": {
            "type": "string",
            "value": "[parameters('adminUsername')]"
        },
        "virtualMachineSku": {
            "type": "string",
            "value": "[parameters('virtualMachineSku')]"
        }
    }
}