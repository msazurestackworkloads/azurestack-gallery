{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "adminUsername": {
            "type": "string",
            "defaultValue": "azureuser",
            "metadata": {
                "description": "The linux user name."
            }
        },
        "adminPublicKey": {
            "type": "string",
            "metadata": {
                "description": "User's RSA public key."
            }
        },
        "virtualMachineSize": {
            "type": "string",
            "defaultValue": "Standard_F8s_v2",
            "metadata": {
                "description": "The VM size."
            }
        },
        "virtualMachinePublisher": {
            "type": "string",
            "defaultValue": "Canonical",
            "metadata": {
                "description": "The guest OS image publisher."
            }
        },
        "virtualMachineOffer": {
            "type": "string",
            "defaultValue": "UbuntuServer",
            "metadata": {
                "description": "The guest OS image offer."
            }
        },
        "virtualMachineSku": {
            "type": "string",
            "defaultValue": "16.04-LTS",
            "metadata": {
                "description": "The guest OS image SKU."
            }
        },
        "virtualMachineVersion": {
            "type": "string",
            "defaultValue": "latest",
            "metadata": {
                "description": "The guest OS image version."
            }
        },
        "pipName": {
            "type": "string",
            "metadata": {
                "description": "The public IP resource name."
            }
        },
        "pipDomainNameLabel": {
            "type": "string",
            "metadata": {
                "description": "The public IP DNS label."
            }
        },
        "pipAllocationMethod": {
            "type": "string",
            "defaultValue": "dynamic",
            "metadata": {
                "description": "The public IP allocation method."
            }
        },
        "storageAccountResourceId": {
            "type": "string",
            "metadata": {
                "description": "An already existing storage account resource identifier."
            }
        },
        "storageAccountContainer": {
            "type": "string",
            "metadata": {
                "description": "An already existing storage account container name."
            }
        },
        "pfxKeyVaultResourceId": {
            "type": "string",
            "metadata": {
                "description": "The Key Vault resource identifier."
            }
        },
        "pfxKeyVaultSecretUrl": {
            "type": "string",
            "metadata": {
                "description": "Absolute URL to the Key Vault secret that stores the pfx certificate."
            }
        },
        "pfxThumbprint": {
            "type": "string",
            "metadata": {
                "description": "The certificate thumbprint."
            }
        },
        "registryTag": {
            "type": "string",
            "defaultValue": "2.7.1",
            "metadata": {
                "description": "Docker registry version (image tag)."
            }
        },
        "registryReplicas": {
            "type": "string",
            "defaultValue": "20",
            "metadata": {
                "description": "Docker registry replicas."
            }
        },
        "servicePrincipalClientId": {
            "type": "securestring",
            "metadata": {
                "description": "Client ID with access to list and get secrets from the credentials Key Vault instance"
            }
        },
        "servicePrincipalClientSecret": {
            "type": "securestring",
            "metadata": {
                "description": "Secret of the client with access to list and get secrets from the credentials Key Vault instance"
            }
        }
    },
    "variables": {
        "rgname": "[resourceGroup().name]",
        "nsgName": "[concat(variables('rgname'), '-nsg')]",
        "nicName": "[concat(variables('rgname'), '-nic')]",
        "vnetName": "[concat(variables('rgname'), '-vnet')]",
        "vnetId": "[resourceId('Microsoft.Network/virtualNetworks',variables('vnetName'))]",
        "subnetRef": "[concat(variables('vnetId'), '/subnets/default')]",
        "tenantId": "[subscription().tenantId]",
        "location": "[resourceGroup().location]",
        "provisionScriptParameters": "[concat('ADMIN_USER_NAME=', parameters('adminUsername'),' SA_RESOURCE_ID=', parameters('storageAccountResourceId'),' SA_CONTAINER=', parameters('storageAccountContainer'),' KV_RESOURCE_ID=', parameters('pfxKeyVaultResourceId'),' CERT_THUMBPRINT=', parameters('pfxThumbprint'),' PIP_LABEL=', parameters('pipDomainNameLabel'),' REGISTRY_TAG=', parameters('registryTag'),' SPN_CLIENT_ID=',parameters('servicePrincipalClientId'),' SPN_CLIENT_SECRET=',parameters('servicePrincipalClientSecret'),' REGISTRY_REPLICAS=', parameters('registryReplicas'))]"
    },
    "resources": [
        {
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[concat(variables('rgname'),'-vm')]",
            "apiVersion": "2017-03-30",
            "location": "[resourceGroup().location]",
            "properties": {
                "osProfile": {
                    "computerName": "[concat(variables('rgname'),'-vm')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "customData": "[base64(concat('#cloud-config\n\nwrite_files:\n- path: \"/opt/azure/registry/script.sh\"\n  permissions: \"0744\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    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'))]",
                    "linuxConfiguration": {
                        "disablePasswordAuthentication": true,
                        "ssh": {
                            "publicKeys": [
                                {
                                    "path": "[concat('/home/', parameters('adminUsername'), '/.ssh/authorized_keys')]",
                                    "keyData": "[parameters('adminPublicKey')]"
                                }
                            ]
                        }
                    },
                    "secrets": [
                        {
                            "sourceVault": {
                                "id": "[parameters('pfxKeyVaultResourceId')]"
                            },
                            "vaultCertificates": [
                                {
                                    "certificateUrl": "[parameters('pfxKeyVaultSecretUrl')]"
                                }
                            ]
                        }
                    ]
                },
                "hardwareProfile": {
                    "vmSize": "[parameters('virtualMachineSize')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[parameters('virtualMachinePublisher')]",
                        "offer": "[parameters('virtualMachineOffer')]",
                        "sku": "[parameters('virtualMachineSku')]",
                        "version": "[parameters('virtualMachineVersion')]"
                    },
                    "osDisk": {
                        "createOption": "FromImage",
                        "diskSizeGB": 30,
                        "managedDisk": {
                            "storageAccountType": "Premium_LRS"
                        }
                    },
                    "dataDisks": []
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
                        }
                    ]
                }
            },
            "dependsOn": [
                "[concat('Microsoft.Network/networkInterfaces/',variables('nicName'))]"
            ]
        },
        {
            "apiVersion": "2017-03-30",
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/',variables('rgname'),'-vm')]"
            ],
            "location": "[resourceGroup().location]",
            "name": "[concat(variables('rgname'),'-vm/cse')]",
            "properties": {
                "protectedSettings": {
                    "commandToExecute": "[concat(variables('provisionScriptParameters'),' LOCATION=',variables('location'),' TENANT_ID=',variables('tenantId'),' PIP_FQDN=', '\"', reference(resourceId('Microsoft.Network/publicIPAddresses',parameters('pipName')),'2017-10-01').dnsSettings.fqdn,'\"',' /opt/azure/registry/script.sh >> /var/log/azure/docker-registry.log 2>&1')]"
                },
                "publisher": "Microsoft.Azure.Extensions",
                "settings": {},
                "type": "CustomScript",
                "typeHandlerVersion": "2.0",
                "autoUpgradeMinorVersion": true
            },
            "type": "Microsoft.Compute/virtualMachines/extensions"
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[concat(variables('rgname'),'-vnet')]",
            "apiVersion": "2017-10-01",
            "location": "[resourceGroup().location]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "172.16.0.0/24"
                    ]
                },
                "subnets": [
                    {
                        "name": "default",
                        "properties": {
                            "addressPrefix": "172.16.0.0/24"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[variables('nicName')]",
            "apiVersion": "2017-10-01",
            "location": "[resourceGroup().location]",
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "subnet": {
                                "id": "[variables('subnetRef')]"
                            },
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIpAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIpAddresses',parameters('pipName'))]"
                            }
                        }
                    }
                ],
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups',variables('nsgName'))]"
                }
            },
            "dependsOn": [
                "[concat('Microsoft.Network/virtualNetworks/',variables('rgname'),'-vnet')]",
                "[concat('Microsoft.Network/publicIpAddresses/',parameters('pipName'))]",
                "[concat('Microsoft.Network/networkSecurityGroups/',variables('nsgName'))]"
            ]
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "sku": {
                "name": "Basic"
            },
            "name": "[parameters('pipName')]",
            "apiVersion": "2017-10-01",
            "location": "[resourceGroup().location]",
            "properties": {
                "publicIpAllocationMethod": "[parameters('pipAllocationMethod')]",
                "dnsSettings": {
                    "domainNameLabel": "[parameters('pipDomainNameLabel')]"
                }
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[variables('nsgName')]",
            "apiVersion": "2017-10-01",
            "location": "[resourceGroup().location]",
            "properties": {
                "securityRules": [
                    {
                        "name": "HTTPS",
                        "properties": {
                            "priority": 320,
                            "protocol": "Tcp",
                            "access": "Allow",
                            "direction": "Inbound",
                            "sourceApplicationSecurityGroups": [],
                            "destinationApplicationSecurityGroups": [],
                            "sourceAddressPrefix": "*",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "*",
                            "destinationPortRange": "443"
                        }
                    }
                ]
            }
        }
    ],
    "outputs": {
        "adminUsername": {
            "type": "string",
            "value": "[parameters('adminUsername')]"
        }
    }
}