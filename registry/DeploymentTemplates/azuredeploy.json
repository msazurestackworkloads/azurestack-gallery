{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "adminUsername": {
            "type": "string",
            "defaultValue": "azureuser",
            "metadata": {
                "description": "The linux user name."
            }
        },
        "adminPublicKey": {
            "type": "string",
            "metadata": {
                "description": "User's RSA public key."
            }
        },
        "virtualMachineSize": {
            "type": "string",
            "defaultValue": "Standard_F8s_v2",
            "metadata": {
                "description": "The VM size."
            }
        },
        "virtualMachinePublisher": {
            "type": "string",
            "defaultValue": "Canonical",
            "metadata": {
                "description": "The guest OS image publisher."
            }
        },
        "virtualMachineOffer": {
            "type": "string",
            "defaultValue": "UbuntuServer",
            "metadata": {
                "description": "The guest OS image offer."
            }
        },
        "virtualMachineSku": {
            "type": "string",
            "defaultValue": "16.04-LTS",
            "metadata": {
                "description": "The guest OS image SKU."
            }
        },
        "virtualMachineVersion": {
            "type": "string",
            "defaultValue": "latest",
            "metadata": {
                "description": "The guest OS image version."
            }
        },
        "pipName": {
            "type": "string",
            "metadata": {
                "description": "The public IP resource name."
            }
        },
        "pipDomainNameLabel": {
            "type": "string",
            "metadata": {
                "description": "The public IP DNS label."
            }
        },
        "pipAllocationMethod": {
            "type": "string",
            "defaultValue": "dynamic",
            "metadata": {
                "description": "The public IP allocation method."
            }
        },
        "storageAccountResourceId": {
            "type": "string",
            "metadata": {
                "description": "An already existing storage account resource identifier."
            }
        },
        "storageAccountContainer": {
            "type": "string",
            "metadata": {
                "description": "An already existing storage account container name."
            }
        },
        "pfxKeyVaultResourceId": {
            "type": "string",
            "metadata": {
                "description": "The Key Vault resource identifier."
            }
        },
        "pfxKeyVaultSecretUrl": {
            "type": "string",
            "metadata": {
                "description": "Absolute URL to the Key Vault secret that stores the pfx certificate."
            }
        },
        "pfxThumbprint": {
            "type": "string",
            "metadata": {
                "description": "The certificate thumbprint."
            }
        },
        "registryTag": {
            "type": "string",
            "defaultValue": "2.7.1",
            "metadata": {
                "description": "Docker registry version (image tag)."
            }
        },
        "registryReplicas": {
            "type": "string",
            "defaultValue": "20",
            "metadata": {
                "description": "Docker registry replicas."
            }
        },
        "servicePrincipalClientId": {
            "type": "securestring",
            "metadata": {
                "description": "Client ID with access to list and get secrets from the credentials Key Vault instance"
            }
        },
        "servicePrincipalClientSecret": {
            "type": "securestring",
            "metadata": {
                "description": "Secret of the client with access to list and get secrets from the credentials Key Vault instance"
            }
        }
    },
    "variables": {
        "rgname": "[resourceGroup().name]",
        "nsgName": "[concat(variables('rgname'), '-nsg')]",
        "nicName": "[concat(variables('rgname'), '-nic')]",
        "vnetName": "[concat(variables('rgname'), '-vnet')]",
        "vnetId": "[resourceId('Microsoft.Network/virtualNetworks',variables('vnetName'))]",
        "subnetRef": "[concat(variables('vnetId'), '/subnets/default')]",
        "tenantId": "[subscription().tenantId]",
        "location": "[resourceGroup().location]",
        "provisionScriptParameters": "[concat('ADMIN_USER_NAME=', parameters('adminUsername'),' SA_RESOURCE_ID=', parameters('storageAccountResourceId'),' SA_CONTAINER=', parameters('storageAccountContainer'),' KV_RESOURCE_ID=', parameters('pfxKeyVaultResourceId'),' CERT_THUMBPRINT=', parameters('pfxThumbprint'),' PIP_LABEL=', parameters('pipDomainNameLabel'),' REGISTRY_TAG=', parameters('registryTag'),' SPN_CLIENT_ID=',parameters('servicePrincipalClientId'),' SPN_CLIENT_SECRET=',parameters('servicePrincipalClientSecret'),' REGISTRY_REPLICAS=', parameters('registryReplicas'))]"
    },
    "resources": [
        {
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[concat(variables('rgname'),'-vm')]",
            "apiVersion": "2017-03-30",
            "location": "[resourceGroup().location]",
            "properties": {
                "osProfile": {
                    "computerName": "[concat(variables('rgname'),'-vm')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "customData": "[base64(concat('#cloud-config\n\nwrite_files:\n- path: \"/opt/azure/registry/script.sh\"\n  permissions: \"0744\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    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'))]",
                    "linuxConfiguration": {
                        "disablePasswordAuthentication": true,
                        "ssh": {
                            "publicKeys": [
                                {
                                    "path": "[concat('/home/', parameters('adminUsername'), '/.ssh/authorized_keys')]",
                                    "keyData": "[parameters('adminPublicKey')]"
                                }
                            ]
                        }
                    },
                    "secrets": [
                        {
                            "sourceVault": {
                                "id": "[parameters('pfxKeyVaultResourceId')]"
                            },
                            "vaultCertificates": [
                                {
                                    "certificateUrl": "[parameters('pfxKeyVaultSecretUrl')]"
                                }
                            ]
                        }
                    ]
                },
                "hardwareProfile": {
                    "vmSize": "[parameters('virtualMachineSize')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[parameters('virtualMachinePublisher')]",
                        "offer": "[parameters('virtualMachineOffer')]",
                        "sku": "[parameters('virtualMachineSku')]",
                        "version": "[parameters('virtualMachineVersion')]"
                    },
                    "osDisk": {
                        "createOption": "FromImage",
                        "diskSizeGB": 30,
                        "managedDisk": {
                            "storageAccountType": "Premium_LRS"
                        }
                    },
                    "dataDisks": []
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
                        }
                    ]
                }
            },
            "dependsOn": [
                "[concat('Microsoft.Network/networkInterfaces/',variables('nicName'))]"
            ]
        },
        {
            "apiVersion": "2017-03-30",
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/',variables('rgname'),'-vm')]"
            ],
            "location": "[resourceGroup().location]",
            "name": "[concat(variables('rgname'),'-vm/cse')]",
            "properties": {
                "protectedSettings": {
                    "commandToExecute": "[concat(variables('provisionScriptParameters'),' LOCATION=',variables('location'),' TENANT_ID=',variables('tenantId'),' PIP_FQDN=', '\"', reference(resourceId('Microsoft.Network/publicIPAddresses',parameters('pipName')),'2017-10-01').dnsSettings.fqdn,'\"',' /opt/azure/registry/script.sh >> /var/log/azure/docker-registry.log 2>&1')]"
                },
                "publisher": "Microsoft.Azure.Extensions",
                "settings": {},
                "type": "CustomScript",
                "typeHandlerVersion": "2.0",
                "autoUpgradeMinorVersion": true
            },
            "type": "Microsoft.Compute/virtualMachines/extensions"
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[concat(variables('rgname'),'-vnet')]",
            "apiVersion": "2017-10-01",
            "location": "[resourceGroup().location]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "172.16.0.0/24"
                    ]
                },
                "subnets": [
                    {
                        "name": "default",
                        "properties": {
                            "addressPrefix": "172.16.0.0/24"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[variables('nicName')]",
            "apiVersion": "2017-10-01",
            "location": "[resourceGroup().location]",
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "subnet": {
                                "id": "[variables('subnetRef')]"
                            },
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIpAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIpAddresses',parameters('pipName'))]"
                            }
                        }
                    }
                ],
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups',variables('nsgName'))]"
                }
            },
            "dependsOn": [
                "[concat('Microsoft.Network/virtualNetworks/',variables('rgname'),'-vnet')]",
                "[concat('Microsoft.Network/publicIpAddresses/',parameters('pipName'))]",
                "[concat('Microsoft.Network/networkSecurityGroups/',variables('nsgName'))]"
            ]
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "sku": {
                "name": "Basic"
            },
            "name": "[parameters('pipName')]",
            "apiVersion": "2017-10-01",
            "location": "[resourceGroup().location]",
            "properties": {
                "publicIpAllocationMethod": "[parameters('pipAllocationMethod')]",
                "dnsSettings": {
                    "domainNameLabel": "[parameters('pipDomainNameLabel')]"
                }
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[variables('nsgName')]",
            "apiVersion": "2017-10-01",
            "location": "[resourceGroup().location]",
            "properties": {
                "securityRules": [
                    {
                        "name": "HTTPS",
                        "properties": {
                            "priority": 320,
                            "protocol": "Tcp",
                            "access": "Allow",
                            "direction": "Inbound",
                            "sourceApplicationSecurityGroups": [],
                            "destinationApplicationSecurityGroups": [],
                            "sourceAddressPrefix": "*",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "*",
                            "destinationPortRange": "443"
                        }
                    }
                ]
            }
        }
    ],
    "outputs": {
        "adminUsername": {
            "type": "string",
            "value": "[parameters('adminUsername')]"
        }
    }
}