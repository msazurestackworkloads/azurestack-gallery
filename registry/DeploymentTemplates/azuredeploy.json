{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "adminUsername": {
            "type": "string",
            "defaultValue": "azureuser",
            "metadata": {
                "description": "The linux user name."
            }
        },
        "adminPublicKey": {
            "type": "string",
            "metadata": {
                "description": "User's RSA public key."
            }
        },
        "virtualMachineSize": {
            "type": "string",
            "defaultValue": "Standard_F8s_v2",
            "metadata": {
                "description": "The VM size."
            }
        },
        "virtualMachinePublisher": {
            "type": "string",
            "defaultValue": "microsoft-aks",
            "metadata": {
                "description": "The guest OS image publisher."
            }
        },
        "virtualMachineOffer": {
            "type": "string",
            "defaultValue": "aks",
            "metadata": {
                "description": "The guest OS image offer."
            }
        },
        "virtualMachineSku": {
            "type": "string",
            "defaultValue": "aks-ubuntu-1604-201909",
            "metadata": {
                "description": "The guest OS image SKU."
            }
        },
        "virtualMachineVersion": {
            "type": "string",
            "defaultValue": "latest",
            "metadata": {
                "description": "The guest OS image version."
            }
        },
        "pipName": {
            "type": "string",
            "metadata": {
                "description": "The public IP resource name."
            }
        },
        "pipDomainNameLabel": {
            "type": "string",
            "metadata": {
                "description": "The public IP DNS label."
            }
        },
        "pipAllocationMethod": {
            "type": "string",
            "defaultValue": "dynamic",
            "metadata": {
                "description": "The public IP allocation method."
            }
        },
        "storageAccountResourceId": {
            "type": "string",
            "metadata": {
                "description": "An already existing storage account resource identifier."
            }
        },
        "storageAccountContainer": {
            "type": "string",
            "metadata": {
                "description": "An already existing storage account container name."
            }
        },
        "pfxKeyVaultResourceId": {
            "type": "string",
            "metadata": {
                "description": "The Key Vault resource identifier."
            }
        },
        "pfxKeyVaultSecretUrl": {
            "type": "string",
            "metadata": {
                "description": "Absolute URL to the Key Vault secret that stores the pfx certificate."
            }
        },
        "pfxThumbprint": {
            "type": "string",
            "metadata": {
                "description": "The certificate thumbprint."
            }
        },        
        "registryReplicas": {
            "type": "string",
            "defaultValue": "20",
            "metadata": {
                "description": "Docker registry replicas."
            }
        },
        "servicePrincipalClientId": {
            "type": "securestring",
            "metadata": {
                "description": "Client ID with access to list and get secrets from the credentials Key Vault instance"
            }
        },
        "servicePrincipalClientSecret": {
            "type": "securestring",
            "metadata": {
                "description": "Secret of the client with access to list and get secrets from the credentials Key Vault instance"
            }
        },
        "enableValidations": {
            "type": "string",
            "defaultValue": "false",
            "metadata": {
                "description": "Docker registry validation flag."
            }
        }
    },
    "variables": {
        "rgname": "[resourceGroup().name]",
        "nsgName": "[concat(variables('rgname'), '-nsg')]",
        "nicName": "[concat(variables('rgname'), '-nic')]",
        "vnetName": "[concat(variables('rgname'), '-vnet')]",
        "vnetId": "[resourceId('Microsoft.Network/virtualNetworks',variables('vnetName'))]",
        "subnetRef": "[concat(variables('vnetId'), '/subnets/default')]",
        "tenantId": "[subscription().tenantId]",
        "location": "[resourceGroup().location]",
        "marketplaceVersion": "1.0.0",
        "registryTag": "2.7.1",
        "containerStatusWaitTimeInSeconds": "900",
        "provisionScriptParameters": "[concat('MARKETPLACE_VERSION=', variables('marketplaceVersion'),' CONTAINER_STATUS_WAIT_TIME=', variables('containerStatusWaitTimeInSeconds'),' ADMIN_USER_NAME=', parameters('adminUsername'),' SA_RESOURCE_ID=', parameters('storageAccountResourceId'),' SA_CONTAINER=', parameters('storageAccountContainer'),' KV_RESOURCE_ID=', parameters('pfxKeyVaultResourceId'),' CERT_THUMBPRINT=', parameters('pfxThumbprint'),' PIP_LABEL=', parameters('pipDomainNameLabel'),' REGISTRY_TAG=', variables('registryTag'),' SPN_CLIENT_ID=',parameters('servicePrincipalClientId'),' SPN_CLIENT_SECRET=',parameters('servicePrincipalClientSecret'),' ENABLE_VALIDATIONS=',parameters('enableValidations'),' REGISTRY_REPLICAS=', parameters('registryReplicas'))]"
    },
    "resources": [
        {
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[concat(variables('rgname'),'-vm')]",
            "apiVersion": "2017-03-30",
            "location": "[resourceGroup().location]",
            "properties": {
                "osProfile": {
                    "computerName": "[concat(variables('rgname'),'-vm')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "customData": "[base64(concat('#cloud-config\n\nwrite_files:\n- path: \"/opt/azure/containers/script.sh\"\n  permissions: \"0744\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    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'))]",
                    "linuxConfiguration": {
                        "disablePasswordAuthentication": true,
                        "ssh": {
                            "publicKeys": [
                                {
                                    "path": "[concat('/home/', parameters('adminUsername'), '/.ssh/authorized_keys')]",
                                    "keyData": "[parameters('adminPublicKey')]"
                                }
                            ]
                        }
                    },
                    "secrets": [
                        {
                            "sourceVault": {
                                "id": "[parameters('pfxKeyVaultResourceId')]"
                            },
                            "vaultCertificates": [
                                {
                                    "certificateUrl": "[parameters('pfxKeyVaultSecretUrl')]"
                                }
                            ]
                        }
                    ]
                },
                "hardwareProfile": {
                    "vmSize": "[parameters('virtualMachineSize')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[parameters('virtualMachinePublisher')]",
                        "offer": "[parameters('virtualMachineOffer')]",
                        "sku": "[parameters('virtualMachineSku')]",
                        "version": "[parameters('virtualMachineVersion')]"
                    },
                    "osDisk": {
                        "createOption": "FromImage",
                        "diskSizeGB": 30,
                        "managedDisk": {
                            "storageAccountType": "Premium_LRS"
                        }
                    },
                    "dataDisks": []
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
                        }
                    ]
                }
            },
            "dependsOn": [
                "[concat('Microsoft.Network/networkInterfaces/',variables('nicName'))]"
            ]
        },
        {
            "apiVersion": "2017-03-30",
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/',variables('rgname'),'-vm')]"
            ],
            "location": "[resourceGroup().location]",
            "name": "[concat(variables('rgname'),'-vm/cse')]",
            "properties": {
                "protectedSettings": {
                    "commandToExecute": "[concat(variables('provisionScriptParameters'),' LOCATION=',variables('location'),' TENANT_ID=',variables('tenantId'),' PIP_FQDN=', '\"', reference(resourceId('Microsoft.Network/publicIPAddresses',parameters('pipName')),'2017-10-01').dnsSettings.fqdn,'\"',' /opt/azure/containers/script.sh >> /var/log/azure/docker-registry.log 2>&1')]"
                },
                "publisher": "Microsoft.Azure.Extensions",
                "settings": {},
                "type": "CustomScript",
                "typeHandlerVersion": "2.0",
                "autoUpgradeMinorVersion": true
            },
            "type": "Microsoft.Compute/virtualMachines/extensions"
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[concat(variables('rgname'),'-vnet')]",
            "apiVersion": "2017-10-01",
            "location": "[resourceGroup().location]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "172.16.0.0/24"
                    ]
                },
                "subnets": [
                    {
                        "name": "default",
                        "properties": {
                            "addressPrefix": "172.16.0.0/24"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[variables('nicName')]",
            "apiVersion": "2017-10-01",
            "location": "[resourceGroup().location]",
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "subnet": {
                                "id": "[variables('subnetRef')]"
                            },
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIpAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIpAddresses',parameters('pipName'))]"
                            }
                        }
                    }
                ],
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups',variables('nsgName'))]"
                }
            },
            "dependsOn": [
                "[concat('Microsoft.Network/virtualNetworks/',variables('rgname'),'-vnet')]",
                "[concat('Microsoft.Network/publicIpAddresses/',parameters('pipName'))]",
                "[concat('Microsoft.Network/networkSecurityGroups/',variables('nsgName'))]"
            ]
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "sku": {
                "name": "Basic"
            },
            "name": "[parameters('pipName')]",
            "apiVersion": "2017-10-01",
            "location": "[resourceGroup().location]",
            "properties": {
                "publicIpAllocationMethod": "[parameters('pipAllocationMethod')]",
                "dnsSettings": {
                    "domainNameLabel": "[parameters('pipDomainNameLabel')]"
                }
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[variables('nsgName')]",
            "apiVersion": "2017-10-01",
            "location": "[resourceGroup().location]",
            "properties": {
                "securityRules": [
                    {
                        "name": "HTTPS",
                        "properties": {
                            "priority": 320,
                            "protocol": "Tcp",
                            "access": "Allow",
                            "direction": "Inbound",
                            "sourceApplicationSecurityGroups": [],
                            "destinationApplicationSecurityGroups": [],
                            "sourceAddressPrefix": "*",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "*",
                            "destinationPortRange": "443"
                        }
                    }
                ]
            }
        }
    ],
    "outputs": {
        "adminUsername": {
            "type": "string",
            "value": "[parameters('adminUsername')]"
        },
        "virtualMachineSku": {
            "type": "string",
            "value": "[parameters('virtualMachineSku')]"
        }
    }
}