{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "adminUsername": {
            "type": "string",
            "defaultValue": "azureuser",
            "metadata": {
                "description": "The linux user name."
            }
        },
        "adminPublicKey": {
            "type": "string",
            "metadata": {
                "description": "User's RSA public key."
            }
        },
        "virtualMachineSize": {
            "type": "string",
            "defaultValue": "Standard_F8s_v2",
            "metadata": {
                "description": "The VM size."
            }
        },
        "virtualMachinePublisher": {
            "type": "string",
            "defaultValue": "microsoft-aks",
            "metadata": {
                "description": "The guest OS image publisher."
            }
        },
        "virtualMachineOffer": {
            "type": "string",
            "defaultValue": "aks",
            "metadata": {
                "description": "The guest OS image offer."
            }
        },
        "virtualMachineSku": {
            "type": "string",
            "defaultValue": "aks-ubuntu-1604-201909",
            "metadata": {
                "description": "The guest OS image SKU."
            }
        },
        "virtualMachineVersion": {
            "type": "string",
            "defaultValue": "latest",
            "metadata": {
                "description": "The guest OS image version."
            }
        },
        "pipName": {
            "type": "string",
            "metadata": {
                "description": "The public IP resource name."
            }
        },
        "pipDomainNameLabel": {
            "type": "string",
            "metadata": {
                "description": "The public IP DNS label."
            }
        },
        "pipAllocationMethod": {
            "type": "string",
            "defaultValue": "dynamic",
            "metadata": {
                "description": "The public IP allocation method."
            }
        },
        "storageAccountResourceId": {
            "type": "string",
            "metadata": {
                "description": "An already existing storage account resource identifier."
            }
        },
        "storageAccountContainer": {
            "type": "string",
            "metadata": {
                "description": "An already existing storage account container name."
            }
        },
        "pfxKeyVaultResourceId": {
            "type": "string",
            "metadata": {
                "description": "The Key Vault resource identifier."
            }
        },
        "pfxKeyVaultSecretUrl": {
            "type": "string",
            "metadata": {
                "description": "Absolute URL to the Key Vault secret that stores the pfx certificate."
            }
        },
        "pfxThumbprint": {
            "type": "string",
            "metadata": {
                "description": "The certificate thumbprint."
            }
        },        
        "registryReplicas": {
            "type": "string",
            "defaultValue": "20",
            "metadata": {
                "description": "Docker registry replicas."
            }
        },
        "servicePrincipalClientId": {
            "type": "securestring",
            "metadata": {
                "description": "Client ID with access to list and get secrets from the credentials Key Vault instance"
            }
        },
        "servicePrincipalClientSecret": {
            "type": "securestring",
            "metadata": {
                "description": "Secret of the client with access to list and get secrets from the credentials Key Vault instance"
            }
        },
        "enableValidations": {
            "type": "string",
            "defaultValue": "false",
            "metadata": {
                "description": "Docker registry validation flag."
            }
        }
    },
    "variables": {
        "rgname": "[resourceGroup().name]",
        "nsgName": "[concat(variables('rgname'), '-nsg')]",
        "nicName": "[concat(variables('rgname'), '-nic')]",
        "vnetName": "[concat(variables('rgname'), '-vnet')]",
        "vnetId": "[resourceId('Microsoft.Network/virtualNetworks',variables('vnetName'))]",
        "subnetRef": "[concat(variables('vnetId'), '/subnets/default')]",
        "tenantId": "[subscription().tenantId]",
        "location": "[resourceGroup().location]",
        "marketplaceVersion": "1.0.0",
        "registryTag": "2.7.1",
        "provisionScriptParameters": "[concat('MARKETPLACE_VERSION=', variables('marketplaceVersion'),' ADMIN_USER_NAME=', parameters('adminUsername'),' SA_RESOURCE_ID=', parameters('storageAccountResourceId'),' SA_CONTAINER=', parameters('storageAccountContainer'),' KV_RESOURCE_ID=', parameters('pfxKeyVaultResourceId'),' CERT_THUMBPRINT=', parameters('pfxThumbprint'),' PIP_LABEL=', parameters('pipDomainNameLabel'),' REGISTRY_TAG=', variables('registryTag'),' SPN_CLIENT_ID=',parameters('servicePrincipalClientId'),' SPN_CLIENT_SECRET=',parameters('servicePrincipalClientSecret'),' ENABLE_VALIDATIONS=',parameters('enableValidations'),' REGISTRY_REPLICAS=', parameters('registryReplicas'))]"
    },
    "resources": [
        {
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[concat(variables('rgname'),'-vm')]",
            "apiVersion": "2017-03-30",
            "location": "[resourceGroup().location]",
            "properties": {
                "osProfile": {
                    "computerName": "[concat(variables('rgname'),'-vm')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "customData": "[base64(concat('#cloud-config\n\nwrite_files:\n- path: \"/opt/azure/containers/script.sh\"\n  permissions: \"0744\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    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'))]",
                    "linuxConfiguration": {
                        "disablePasswordAuthentication": true,
                        "ssh": {
                            "publicKeys": [
                                {
                                    "path": "[concat('/home/', parameters('adminUsername'), '/.ssh/authorized_keys')]",
                                    "keyData": "[parameters('adminPublicKey')]"
                                }
                            ]
                        }
                    },
                    "secrets": [
                        {
                            "sourceVault": {
                                "id": "[parameters('pfxKeyVaultResourceId')]"
                            },
                            "vaultCertificates": [
                                {
                                    "certificateUrl": "[parameters('pfxKeyVaultSecretUrl')]"
                                }
                            ]
                        }
                    ]
                },
                "hardwareProfile": {
                    "vmSize": "[parameters('virtualMachineSize')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[parameters('virtualMachinePublisher')]",
                        "offer": "[parameters('virtualMachineOffer')]",
                        "sku": "[parameters('virtualMachineSku')]",
                        "version": "[parameters('virtualMachineVersion')]"
                    },
                    "osDisk": {
                        "createOption": "FromImage",
                        "diskSizeGB": 30,
                        "managedDisk": {
                            "storageAccountType": "Premium_LRS"
                        }
                    },
                    "dataDisks": []
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
                        }
                    ]
                }
            },
            "dependsOn": [
                "[concat('Microsoft.Network/networkInterfaces/',variables('nicName'))]"
            ]
        },
        {
            "apiVersion": "2017-03-30",
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/',variables('rgname'),'-vm')]"
            ],
            "location": "[resourceGroup().location]",
            "name": "[concat(variables('rgname'),'-vm/cse')]",
            "properties": {
                "protectedSettings": {
                    "commandToExecute": "[concat(variables('provisionScriptParameters'),' LOCATION=',variables('location'),' TENANT_ID=',variables('tenantId'),' PIP_FQDN=', '\"', reference(resourceId('Microsoft.Network/publicIPAddresses',parameters('pipName')),'2017-10-01').dnsSettings.fqdn,'\"',' /opt/azure/containers/script.sh >> /var/log/azure/docker-registry.log 2>&1')]"
                },
                "publisher": "Microsoft.Azure.Extensions",
                "settings": {},
                "type": "CustomScript",
                "typeHandlerVersion": "2.0",
                "autoUpgradeMinorVersion": true
            },
            "type": "Microsoft.Compute/virtualMachines/extensions"
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[concat(variables('rgname'),'-vnet')]",
            "apiVersion": "2017-10-01",
            "location": "[resourceGroup().location]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "172.16.0.0/24"
                    ]
                },
                "subnets": [
                    {
                        "name": "default",
                        "properties": {
                            "addressPrefix": "172.16.0.0/24"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[variables('nicName')]",
            "apiVersion": "2017-10-01",
            "location": "[resourceGroup().location]",
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "subnet": {
                                "id": "[variables('subnetRef')]"
                            },
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIpAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIpAddresses',parameters('pipName'))]"
                            }
                        }
                    }
                ],
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups',variables('nsgName'))]"
                }
            },
            "dependsOn": [
                "[concat('Microsoft.Network/virtualNetworks/',variables('rgname'),'-vnet')]",
                "[concat('Microsoft.Network/publicIpAddresses/',parameters('pipName'))]",
                "[concat('Microsoft.Network/networkSecurityGroups/',variables('nsgName'))]"
            ]
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "sku": {
                "name": "Basic"
            },
            "name": "[parameters('pipName')]",
            "apiVersion": "2017-10-01",
            "location": "[resourceGroup().location]",
            "properties": {
                "publicIpAllocationMethod": "[parameters('pipAllocationMethod')]",
                "dnsSettings": {
                    "domainNameLabel": "[parameters('pipDomainNameLabel')]"
                }
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[variables('nsgName')]",
            "apiVersion": "2017-10-01",
            "location": "[resourceGroup().location]",
            "properties": {
                "securityRules": [
                    {
                        "name": "HTTPS",
                        "properties": {
                            "priority": 320,
                            "protocol": "Tcp",
                            "access": "Allow",
                            "direction": "Inbound",
                            "sourceApplicationSecurityGroups": [],
                            "destinationApplicationSecurityGroups": [],
                            "sourceAddressPrefix": "*",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "*",
                            "destinationPortRange": "443"
                        }
                    }
                ]
            }
        }
    ],
    "outputs": {
        "adminUsername": {
            "type": "string",
            "value": "[parameters('adminUsername')]"
        },
        "virtualMachineSku": {
            "type": "string",
            "value": "[parameters('virtualMachineSku')]"
        }
    }
}