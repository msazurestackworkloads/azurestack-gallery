{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "adminUsername": {
            "type": "string",
            "defaultValue": "azureuser",
            "metadata": {
                "description": "The linux user name."
            }
        },
        "adminPublicKey": {
            "type": "string",
            "metadata": {
                "description": "User's RSA public key."
            }
        },
        "virtualMachineSize": {
            "type": "string",
            "defaultValue": "Standard_F8s_v2",
            "metadata": {
                "description": "The VM size."
            }
        },
        "virtualMachinePublisher": {
            "type": "string",
            "defaultValue": "microsoft-aks",
            "metadata": {
                "description": "The guest OS image publisher."
            }
        },
        "virtualMachineOffer": {
            "type": "string",
            "defaultValue": "aks",
            "metadata": {
                "description": "The guest OS image offer."
            }
        },
        "virtualMachineSku": {
            "type": "string",
            "defaultValue": "aks-ubuntu-1604-201909",
            "metadata": {
                "description": "The guest OS image SKU."
            }
        },
        "virtualMachineVersion": {
            "type": "string",
            "defaultValue": "latest",
            "metadata": {
                "description": "The guest OS image version."
            }
        },
        "pipName": {
            "type": "string",
            "metadata": {
                "description": "The public IP resource name."
            }
        },
        "pipDomainNameLabel": {
            "type": "string",
            "metadata": {
                "description": "The public IP DNS label."
            }
        },
        "pipAllocationMethod": {
            "type": "string",
            "defaultValue": "dynamic",
            "metadata": {
                "description": "The public IP allocation method."
            }
        },
        "storageAccountResourceId": {
            "type": "string",
            "metadata": {
                "description": "An already existing storage account resource identifier."
            }
        },
        "storageAccountContainer": {
            "type": "string",
            "metadata": {
                "description": "An already existing storage account container name."
            }
        },
        "pfxKeyVaultResourceId": {
            "type": "string",
            "metadata": {
                "description": "The Key Vault resource identifier."
            }
        },
        "pfxKeyVaultSecretUrl": {
            "type": "string",
            "metadata": {
                "description": "Absolute URL to the Key Vault secret that stores the pfx certificate."
            }
        },
        "pfxThumbprint": {
            "type": "string",
            "metadata": {
                "description": "The certificate thumbprint."
            }
        },        
        "registryReplicas": {
            "type": "string",
            "defaultValue": "20",
            "metadata": {
                "description": "Docker registry replicas."
            }
        },
        "servicePrincipalClientId": {
            "type": "securestring",
            "metadata": {
                "description": "Client ID with access to list and get secrets from the credentials Key Vault instance"
            }
        },
        "servicePrincipalClientSecret": {
            "type": "securestring",
            "metadata": {
                "description": "Secret of the client with access to list and get secrets from the credentials Key Vault instance"
            }
        },
        "enableValidations": {
            "type": "string",
            "defaultValue": "false",
            "metadata": {
                "description": "Docker registry validation flag."
            }
        }
    },
    "variables": {
        "rgname": "[resourceGroup().name]",
        "nsgName": "[concat(variables('rgname'), '-nsg')]",
        "nicName": "[concat(variables('rgname'), '-nic')]",
        "vnetName": "[concat(variables('rgname'), '-vnet')]",
        "vnetId": "[resourceId('Microsoft.Network/virtualNetworks',variables('vnetName'))]",
        "subnetRef": "[concat(variables('vnetId'), '/subnets/default')]",
        "tenantId": "[subscription().tenantId]",
        "location": "[resourceGroup().location]",
        "marketplaceVersion": "1.0.0",
        "registryTag": "2.7.1",
        "provisionScriptParameters": "[concat('MARKETPLACE_VERSION=', variables('marketplaceVersion'),' ADMIN_USER_NAME=', parameters('adminUsername'),' SA_RESOURCE_ID=', parameters('storageAccountResourceId'),' SA_CONTAINER=', parameters('storageAccountContainer'),' KV_RESOURCE_ID=', parameters('pfxKeyVaultResourceId'),' CERT_THUMBPRINT=', parameters('pfxThumbprint'),' PIP_LABEL=', parameters('pipDomainNameLabel'),' REGISTRY_TAG=', variables('registryTag'),' SPN_CLIENT_ID=',parameters('servicePrincipalClientId'),' SPN_CLIENT_SECRET=',parameters('servicePrincipalClientSecret'),' ENABLE_VALIDATIONS=',parameters('enableValidations'),' REGISTRY_REPLICAS=', parameters('registryReplicas'))]"
    },
    "resources": [
        {
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[concat(variables('rgname'),'-vm')]",
            "apiVersion": "2017-03-30",
            "location": "[resourceGroup().location]",
            "properties": {
                "osProfile": {
                    "computerName": "[concat(variables('rgname'),'-vm')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "customData": "[base64(concat('#cloud-config\n\nwrite_files:\n- path: \"/opt/azure/containers/script.sh\"\n  permissions: \"0744\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    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'))]",
                    "linuxConfiguration": {
                        "disablePasswordAuthentication": true,
                        "ssh": {
                            "publicKeys": [
                                {
                                    "path": "[concat('/home/', parameters('adminUsername'), '/.ssh/authorized_keys')]",
                                    "keyData": "[parameters('adminPublicKey')]"
                                }
                            ]
                        }
                    },
                    "secrets": [
                        {
                            "sourceVault": {
                                "id": "[parameters('pfxKeyVaultResourceId')]"
                            },
                            "vaultCertificates": [
                                {
                                    "certificateUrl": "[parameters('pfxKeyVaultSecretUrl')]"
                                }
                            ]
                        }
                    ]
                },
                "hardwareProfile": {
                    "vmSize": "[parameters('virtualMachineSize')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[parameters('virtualMachinePublisher')]",
                        "offer": "[parameters('virtualMachineOffer')]",
                        "sku": "[parameters('virtualMachineSku')]",
                        "version": "[parameters('virtualMachineVersion')]"
                    },
                    "osDisk": {
                        "createOption": "FromImage",
                        "diskSizeGB": 30,
                        "managedDisk": {
                            "storageAccountType": "Premium_LRS"
                        }
                    },
                    "dataDisks": []
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
                        }
                    ]
                }
            },
            "dependsOn": [
                "[concat('Microsoft.Network/networkInterfaces/',variables('nicName'))]"
            ]
        },
        {
            "apiVersion": "2017-03-30",
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/',variables('rgname'),'-vm')]"
            ],
            "location": "[resourceGroup().location]",
            "name": "[concat(variables('rgname'),'-vm/cse')]",
            "properties": {
                "protectedSettings": {
                    "commandToExecute": "[concat(variables('provisionScriptParameters'),' LOCATION=',variables('location'),' TENANT_ID=',variables('tenantId'),' PIP_FQDN=', '\"', reference(resourceId('Microsoft.Network/publicIPAddresses',parameters('pipName')),'2017-10-01').dnsSettings.fqdn,'\"',' /opt/azure/containers/script.sh >> /var/log/azure/docker-registry.log 2>&1')]"
                },
                "publisher": "Microsoft.Azure.Extensions",
                "settings": {},
                "type": "CustomScript",
                "typeHandlerVersion": "2.0",
                "autoUpgradeMinorVersion": true
            },
            "type": "Microsoft.Compute/virtualMachines/extensions"
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[concat(variables('rgname'),'-vnet')]",
            "apiVersion": "2017-10-01",
            "location": "[resourceGroup().location]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "172.16.0.0/24"
                    ]
                },
                "subnets": [
                    {
                        "name": "default",
                        "properties": {
                            "addressPrefix": "172.16.0.0/24"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[variables('nicName')]",
            "apiVersion": "2017-10-01",
            "location": "[resourceGroup().location]",
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "subnet": {
                                "id": "[variables('subnetRef')]"
                            },
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIpAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIpAddresses',parameters('pipName'))]"
                            }
                        }
                    }
                ],
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups',variables('nsgName'))]"
                }
            },
            "dependsOn": [
                "[concat('Microsoft.Network/virtualNetworks/',variables('rgname'),'-vnet')]",
                "[concat('Microsoft.Network/publicIpAddresses/',parameters('pipName'))]",
                "[concat('Microsoft.Network/networkSecurityGroups/',variables('nsgName'))]"
            ]
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "sku": {
                "name": "Basic"
            },
            "name": "[parameters('pipName')]",
            "apiVersion": "2017-10-01",
            "location": "[resourceGroup().location]",
            "properties": {
                "publicIpAllocationMethod": "[parameters('pipAllocationMethod')]",
                "dnsSettings": {
                    "domainNameLabel": "[parameters('pipDomainNameLabel')]"
                }
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[variables('nsgName')]",
            "apiVersion": "2017-10-01",
            "location": "[resourceGroup().location]",
            "properties": {
                "securityRules": [
                    {
                        "name": "HTTPS",
                        "properties": {
                            "priority": 320,
                            "protocol": "Tcp",
                            "access": "Allow",
                            "direction": "Inbound",
                            "sourceApplicationSecurityGroups": [],
                            "destinationApplicationSecurityGroups": [],
                            "sourceAddressPrefix": "*",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "*",
                            "destinationPortRange": "443"
                        }
                    }
                ]
            }
        }
    ],
    "outputs": {
        "adminUsername": {
            "type": "string",
            "value": "[parameters('adminUsername')]"
        },
        "virtualMachineSku": {
            "type": "string",
            "value": "[parameters('virtualMachineSku')]"
        }
    }
}