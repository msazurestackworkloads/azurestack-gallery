{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "adminUsername": {
            "type": "string",
            "defaultValue": "azureuser",
            "metadata": {
                "description": "The linux user name."
            }
        },
        "adminPublicKey": {
            "type": "string",
            "metadata": {
                "description": "User's RSA public key."
            }
        },
        "virtualMachineSize": {
            "type": "string",
            "defaultValue": "Standard_F8s_v2",
            "metadata": {
                "description": "The VM size."
            }
        },
        "virtualMachinePublisher": {
            "type": "string",
            "defaultValue": "microsoft-aks",
            "metadata": {
                "description": "The guest OS image publisher."
            }
        },
        "virtualMachineOffer": {
            "type": "string",
            "defaultValue": "aks",
            "metadata": {
                "description": "The guest OS image offer."
            }
        },
        "virtualMachineSku": {
            "type": "string",
            "defaultValue": "aks-ubuntu-1604-201909",
            "metadata": {
                "description": "The guest OS image SKU."
            }
        },
        "virtualMachineVersion": {
            "type": "string",
            "defaultValue": "latest",
            "metadata": {
                "description": "The guest OS image version."
            }
        },
        "pipName": {
            "type": "string",
            "metadata": {
                "description": "The public IP resource name."
            }
        },
        "pipDomainNameLabel": {
            "type": "string",
            "metadata": {
                "description": "The public IP DNS label."
            }
        },
        "pipAllocationMethod": {
            "type": "string",
            "defaultValue": "dynamic",
            "metadata": {
                "description": "The public IP allocation method."
            }
        },
        "storageAccountResourceId": {
            "type": "string",
            "metadata": {
                "description": "An already existing storage account resource identifier."
            }
        },
        "storageAccountContainer": {
            "type": "string",
            "metadata": {
                "description": "An already existing storage account container name."
            }
        },
        "pfxKeyVaultResourceId": {
            "type": "string",
            "metadata": {
                "description": "The Key Vault resource identifier."
            }
        },
        "pfxKeyVaultSecretUrl": {
            "type": "string",
            "metadata": {
                "description": "Absolute URL to the Key Vault secret that stores the pfx certificate."
            }
        },
        "pfxThumbprint": {
            "type": "string",
            "metadata": {
                "description": "The certificate thumbprint."
            }
        },        
        "registryReplicas": {
            "type": "string",
            "defaultValue": "20",
            "metadata": {
                "description": "Docker registry replicas."
            }
        },
        "servicePrincipalClientId": {
            "type": "securestring",
            "metadata": {
                "description": "Client ID with access to list and get secrets from the credentials Key Vault instance"
            }
        },
        "servicePrincipalClientSecret": {
            "type": "securestring",
            "metadata": {
                "description": "Secret of the client with access to list and get secrets from the credentials Key Vault instance"
            }
        },
        "enableValidations": {
            "type": "string",
            "defaultValue": "false",
            "metadata": {
                "description": "Docker registry validation flag."
            }
        }
    },
    "variables": {
        "rgname": "[resourceGroup().name]",
        "nsgName": "[concat(variables('rgname'), '-nsg')]",
        "nicName": "[concat(variables('rgname'), '-nic')]",
        "vnetName": "[concat(variables('rgname'), '-vnet')]",
        "vnetId": "[resourceId('Microsoft.Network/virtualNetworks',variables('vnetName'))]",
        "subnetRef": "[concat(variables('vnetId'), '/subnets/default')]",
        "tenantId": "[subscription().tenantId]",
        "location": "[resourceGroup().location]",
        "marketplaceVersion": "1.0.0",
        "registryTag": "2.7.1",
        "provisionScriptParameters": "[concat('MARKETPLACE_VERSION=', variables('marketplaceVersion'),' ADMIN_USER_NAME=', parameters('adminUsername'),' SA_RESOURCE_ID=', parameters('storageAccountResourceId'),' SA_CONTAINER=', parameters('storageAccountContainer'),' KV_RESOURCE_ID=', parameters('pfxKeyVaultResourceId'),' CERT_THUMBPRINT=', parameters('pfxThumbprint'),' PIP_LABEL=', parameters('pipDomainNameLabel'),' REGISTRY_TAG=', variables('registryTag'),' SPN_CLIENT_ID=',parameters('servicePrincipalClientId'),' SPN_CLIENT_SECRET=',parameters('servicePrincipalClientSecret'),' ENABLE_VALIDATIONS=',parameters('enableValidations'),' REGISTRY_REPLICAS=', parameters('registryReplicas'))]"
    },
    "resources": [
        {
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[concat(variables('rgname'),'-vm')]",
            "apiVersion": "2017-03-30",
            "location": "[resourceGroup().location]",
            "properties": {
                "osProfile": {
                    "computerName": "[concat(variables('rgname'),'-vm')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "customData": "[base64(concat('#cloud-config\n\nwrite_files:\n- path: \"/opt/azure/containers/script.sh\"\n  permissions: \"0744\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    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'))]",
                    "linuxConfiguration": {
                        "disablePasswordAuthentication": true,
                        "ssh": {
                            "publicKeys": [
                                {
                                    "path": "[concat('/home/', parameters('adminUsername'), '/.ssh/authorized_keys')]",
                                    "keyData": "[parameters('adminPublicKey')]"
                                }
                            ]
                        }
                    },
                    "secrets": [
                        {
                            "sourceVault": {
                                "id": "[parameters('pfxKeyVaultResourceId')]"
                            },
                            "vaultCertificates": [
                                {
                                    "certificateUrl": "[parameters('pfxKeyVaultSecretUrl')]"
                                }
                            ]
                        }
                    ]
                },
                "hardwareProfile": {
                    "vmSize": "[parameters('virtualMachineSize')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[parameters('virtualMachinePublisher')]",
                        "offer": "[parameters('virtualMachineOffer')]",
                        "sku": "[parameters('virtualMachineSku')]",
                        "version": "[parameters('virtualMachineVersion')]"
                    },
                    "osDisk": {
                        "createOption": "FromImage",
                        "diskSizeGB": 30,
                        "managedDisk": {
                            "storageAccountType": "Premium_LRS"
                        }
                    },
                    "dataDisks": []
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
                        }
                    ]
                }
            },
            "dependsOn": [
                "[concat('Microsoft.Network/networkInterfaces/',variables('nicName'))]"
            ]
        },
        {
            "apiVersion": "2017-03-30",
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/',variables('rgname'),'-vm')]"
            ],
            "location": "[resourceGroup().location]",
            "name": "[concat(variables('rgname'),'-vm/cse')]",
            "properties": {
                "protectedSettings": {
                    "commandToExecute": "[concat(variables('provisionScriptParameters'),' LOCATION=',variables('location'),' TENANT_ID=',variables('tenantId'),' PIP_FQDN=', '\"', reference(resourceId('Microsoft.Network/publicIPAddresses',parameters('pipName')),'2017-10-01').dnsSettings.fqdn,'\"',' /opt/azure/containers/script.sh >> /var/log/azure/docker-registry.log 2>&1')]"
                },
                "publisher": "Microsoft.Azure.Extensions",
                "settings": {},
                "type": "CustomScript",
                "typeHandlerVersion": "2.0",
                "autoUpgradeMinorVersion": true
            },
            "type": "Microsoft.Compute/virtualMachines/extensions"
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[concat(variables('rgname'),'-vnet')]",
            "apiVersion": "2017-10-01",
            "location": "[resourceGroup().location]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "172.16.0.0/24"
                    ]
                },
                "subnets": [
                    {
                        "name": "default",
                        "properties": {
                            "addressPrefix": "172.16.0.0/24"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[variables('nicName')]",
            "apiVersion": "2017-10-01",
            "location": "[resourceGroup().location]",
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "subnet": {
                                "id": "[variables('subnetRef')]"
                            },
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIpAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIpAddresses',parameters('pipName'))]"
                            }
                        }
                    }
                ],
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups',variables('nsgName'))]"
                }
            },
            "dependsOn": [
                "[concat('Microsoft.Network/virtualNetworks/',variables('rgname'),'-vnet')]",
                "[concat('Microsoft.Network/publicIpAddresses/',parameters('pipName'))]",
                "[concat('Microsoft.Network/networkSecurityGroups/',variables('nsgName'))]"
            ]
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "sku": {
                "name": "Basic"
            },
            "name": "[parameters('pipName')]",
            "apiVersion": "2017-10-01",
            "location": "[resourceGroup().location]",
            "properties": {
                "publicIpAllocationMethod": "[parameters('pipAllocationMethod')]",
                "dnsSettings": {
                    "domainNameLabel": "[parameters('pipDomainNameLabel')]"
                }
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[variables('nsgName')]",
            "apiVersion": "2017-10-01",
            "location": "[resourceGroup().location]",
            "properties": {
                "securityRules": [
                    {
                        "name": "HTTPS",
                        "properties": {
                            "priority": 320,
                            "protocol": "Tcp",
                            "access": "Allow",
                            "direction": "Inbound",
                            "sourceApplicationSecurityGroups": [],
                            "destinationApplicationSecurityGroups": [],
                            "sourceAddressPrefix": "*",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "*",
                            "destinationPortRange": "443"
                        }
                    }
                ]
            }
        }
    ],
    "outputs": {
        "adminUsername": {
            "type": "string",
            "value": "[parameters('adminUsername')]"
        },
        "virtualMachineSku": {
            "type": "string",
            "value": "[parameters('virtualMachineSku')]"
        }
    }
}