{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "adminUsername": {
            "type": "string",
            "defaultValue": "azureuser",
            "metadata": {
                "description": "The linux user name."
            }
        },
        "adminPublicKey": {
            "type": "string",
            "metadata": {
                "description": "User's RSA public key."
            }
        },
        "virtualMachineSize": {
            "type": "string",
            "defaultValue": "Standard_F8s_v2",
            "metadata": {
                "description": "The VM size."
            }
        },
        "virtualMachinePublisher": {
            "type": "string",
            "defaultValue": "microsoft-aks",
            "metadata": {
                "description": "The guest OS image publisher."
            }
        },
        "virtualMachineOffer": {
            "type": "string",
            "defaultValue": "aks",
            "metadata": {
                "description": "The guest OS image offer."
            }
        },
        "virtualMachineSku": {
            "type": "string",
            "defaultValue": "aks-ubuntu-1604-201909",
            "metadata": {
                "description": "The guest OS image SKU."
            }
        },
        "virtualMachineVersion": {
            "type": "string",
            "defaultValue": "latest",
            "metadata": {
                "description": "The guest OS image version."
            }
        },
        "pipName": {
            "type": "string",
            "metadata": {
                "description": "The public IP resource name."
            }
        },
        "pipDomainNameLabel": {
            "type": "string",
            "metadata": {
                "description": "The public IP DNS label."
            }
        },
        "pipAllocationMethod": {
            "type": "string",
            "defaultValue": "dynamic",
            "metadata": {
                "description": "The public IP allocation method."
            }
        },
        "storageAccountResourceId": {
            "type": "string",
            "metadata": {
                "description": "An already existing storage account resource identifier."
            }
        },
        "storageAccountContainer": {
            "type": "string",
            "metadata": {
                "description": "An already existing storage account container name."
            }
        },
        "pfxKeyVaultResourceId": {
            "type": "string",
            "metadata": {
                "description": "The Key Vault resource identifier."
            }
        },
        "pfxKeyVaultSecretUrl": {
            "type": "string",
            "metadata": {
                "description": "Absolute URL to the Key Vault secret that stores the pfx certificate."
            }
        },
        "pfxThumbprint": {
            "type": "string",
            "metadata": {
                "description": "The certificate thumbprint."
            }
        },
        "registryTag": {
            "type": "string",
            "defaultValue": "2.7.1",
            "metadata": {
                "description": "Docker registry version (image tag)."
            }
        },
        "registryReplicas": {
            "type": "string",
            "defaultValue": "20",
            "metadata": {
                "description": "Docker registry replicas."
            }
        },
        "servicePrincipalClientId": {
            "type": "securestring",
            "metadata": {
                "description": "Client ID with access to list and get secrets from the credentials Key Vault instance"
            }
        },
        "servicePrincipalClientSecret": {
            "type": "securestring",
            "metadata": {
                "description": "Secret of the client with access to list and get secrets from the credentials Key Vault instance"
            }
        },
        "enableValidations": {
            "type": "string",
            "defaultValue": "false",
            "metadata": {
                "description": "Docker registry validation flag."
            }
        }
    },
    "variables": {
        "rgname": "[resourceGroup().name]",
        "nsgName": "[concat(variables('rgname'), '-nsg')]",
        "nicName": "[concat(variables('rgname'), '-nic')]",
        "vnetName": "[concat(variables('rgname'), '-vnet')]",
        "vnetId": "[resourceId('Microsoft.Network/virtualNetworks',variables('vnetName'))]",
        "subnetRef": "[concat(variables('vnetId'), '/subnets/default')]",
        "tenantId": "[subscription().tenantId]",
        "location": "[resourceGroup().location]",
        "marketplaceVersion": "1.0.0",
        "provisionScriptParameters": "[concat('MARKETPLACE_VERSION=', variables('marketplaceVersion'),' ADMIN_USER_NAME=', parameters('adminUsername'),' SA_RESOURCE_ID=', parameters('storageAccountResourceId'),' SA_CONTAINER=', parameters('storageAccountContainer'),' KV_RESOURCE_ID=', parameters('pfxKeyVaultResourceId'),' CERT_THUMBPRINT=', parameters('pfxThumbprint'),' PIP_LABEL=', parameters('pipDomainNameLabel'),' REGISTRY_TAG=', parameters('registryTag'),' SPN_CLIENT_ID=',parameters('servicePrincipalClientId'),' SPN_CLIENT_SECRET=',parameters('servicePrincipalClientSecret'),' ENABLE_VALIDATIONS=',parameters('enableValidations'),' REGISTRY_REPLICAS=', parameters('registryReplicas'))]"
    },
    "resources": [
        {
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[concat(variables('rgname'),'-vm')]",
            "apiVersion": "2017-03-30",
            "location": "[resourceGroup().location]",
            "properties": {
                "osProfile": {
                    "computerName": "[concat(variables('rgname'),'-vm')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "customData": "[base64(concat('#cloud-config\n\nwrite_files:\n- path: \"/opt/azure/containers/script.sh\"\n  permissions: \"0744\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    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'))]",
                    "linuxConfiguration": {
                        "disablePasswordAuthentication": true,
                        "ssh": {
                            "publicKeys": [
                                {
                                    "path": "[concat('/home/', parameters('adminUsername'), '/.ssh/authorized_keys')]",
                                    "keyData": "[parameters('adminPublicKey')]"
                                }
                            ]
                        }
                    },
                    "secrets": [
                        {
                            "sourceVault": {
                                "id": "[parameters('pfxKeyVaultResourceId')]"
                            },
                            "vaultCertificates": [
                                {
                                    "certificateUrl": "[parameters('pfxKeyVaultSecretUrl')]"
                                }
                            ]
                        }
                    ]
                },
                "hardwareProfile": {
                    "vmSize": "[parameters('virtualMachineSize')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[parameters('virtualMachinePublisher')]",
                        "offer": "[parameters('virtualMachineOffer')]",
                        "sku": "[parameters('virtualMachineSku')]",
                        "version": "[parameters('virtualMachineVersion')]"
                    },
                    "osDisk": {
                        "createOption": "FromImage",
                        "diskSizeGB": 30,
                        "managedDisk": {
                            "storageAccountType": "Premium_LRS"
                        }
                    },
                    "dataDisks": []
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
                        }
                    ]
                }
            },
            "dependsOn": [
                "[concat('Microsoft.Network/networkInterfaces/',variables('nicName'))]"
            ]
        },
        {
            "apiVersion": "2017-03-30",
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/',variables('rgname'),'-vm')]"
            ],
            "location": "[resourceGroup().location]",
            "name": "[concat(variables('rgname'),'-vm/cse')]",
            "properties": {
                "protectedSettings": {
                    "commandToExecute": "[concat(variables('provisionScriptParameters'),' LOCATION=',variables('location'),' TENANT_ID=',variables('tenantId'),' PIP_FQDN=', '\"', reference(resourceId('Microsoft.Network/publicIPAddresses',parameters('pipName')),'2017-10-01').dnsSettings.fqdn,'\"',' /opt/azure/containers/script.sh >> /var/log/azure/docker-registry.log 2>&1')]"
                },
                "publisher": "Microsoft.Azure.Extensions",
                "settings": {},
                "type": "CustomScript",
                "typeHandlerVersion": "2.0",
                "autoUpgradeMinorVersion": true
            },
            "type": "Microsoft.Compute/virtualMachines/extensions"
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[concat(variables('rgname'),'-vnet')]",
            "apiVersion": "2017-10-01",
            "location": "[resourceGroup().location]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "172.16.0.0/24"
                    ]
                },
                "subnets": [
                    {
                        "name": "default",
                        "properties": {
                            "addressPrefix": "172.16.0.0/24"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[variables('nicName')]",
            "apiVersion": "2017-10-01",
            "location": "[resourceGroup().location]",
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "subnet": {
                                "id": "[variables('subnetRef')]"
                            },
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIpAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIpAddresses',parameters('pipName'))]"
                            }
                        }
                    }
                ],
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups',variables('nsgName'))]"
                }
            },
            "dependsOn": [
                "[concat('Microsoft.Network/virtualNetworks/',variables('rgname'),'-vnet')]",
                "[concat('Microsoft.Network/publicIpAddresses/',parameters('pipName'))]",
                "[concat('Microsoft.Network/networkSecurityGroups/',variables('nsgName'))]"
            ]
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "sku": {
                "name": "Basic"
            },
            "name": "[parameters('pipName')]",
            "apiVersion": "2017-10-01",
            "location": "[resourceGroup().location]",
            "properties": {
                "publicIpAllocationMethod": "[parameters('pipAllocationMethod')]",
                "dnsSettings": {
                    "domainNameLabel": "[parameters('pipDomainNameLabel')]"
                }
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[variables('nsgName')]",
            "apiVersion": "2017-10-01",
            "location": "[resourceGroup().location]",
            "properties": {
                "securityRules": [
                    {
                        "name": "HTTPS",
                        "properties": {
                            "priority": 320,
                            "protocol": "Tcp",
                            "access": "Allow",
                            "direction": "Inbound",
                            "sourceApplicationSecurityGroups": [],
                            "destinationApplicationSecurityGroups": [],
                            "sourceAddressPrefix": "*",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "*",
                            "destinationPortRange": "443"
                        }
                    }
                ]
            }
        }
    ],
    "outputs": {
        "adminUsername": {
            "type": "string",
            "value": "[parameters('adminUsername')]"
        },
        "virtualMachineSku": {
            "type": "string",
            "value": "[parameters('virtualMachineSku')]"
        }
    }
}