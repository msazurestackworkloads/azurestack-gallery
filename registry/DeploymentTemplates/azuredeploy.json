{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "adminUsername": {
            "type": "string",
            "defaultValue": "azureuser",
            "metadata": {
                "description": "The linux user name."
            }
        },
        "adminPublicKey": {
            "type": "string",
            "metadata": {
                "description": "User's RSA public key."
            }
        },
        "virtualMachineSize": {
            "type": "string",
            "defaultValue": "Standard_F8s_v2",
            "metadata": {
                "description": "The VM size."
            }
        },
        "virtualMachinePublisher": {
            "type": "string",
            "defaultValue": "Canonical",
            "metadata": {
                "description": "The guest OS image publisher."
            }
        },
        "virtualMachineOffer": {
            "type": "string",
            "defaultValue": "UbuntuServer",
            "metadata": {
                "description": "The guest OS image offer."
            }
        },
        "virtualMachineSku": {
            "type": "string",
            "defaultValue": "16.04-LTS",
            "metadata": {
                "description": "The guest OS image SKU."
            }
        },
        "virtualMachineVersion": {
            "type": "string",
            "defaultValue": "latest",
            "metadata": {
                "description": "The guest OS image version."
            }
        },
        "pipName": {
            "type": "string",
            "metadata": {
                "description": "The public IP resource name."
            }
        },
        "pipDomainNameLabel": {
            "type": "string",
            "metadata": {
                "description": "The public IP DNS label."
            }
        },
        "pipAllocationMethod": {
            "type": "string",
            "defaultValue": "dynamic",
            "metadata": {
                "description": "The public IP allocation method."
            }
        },
        "storageAccountResourceId": {
            "type": "string",
            "metadata": {
                "description": "An already existing storage account resource identifier."
            }
        },
        "storageAccountContainer": {
            "type": "string",
            "metadata": {
                "description": "An already existing storage account container name."
            }
        },
        "pfxKeyVaultResourceId": {
            "type": "string",
            "metadata": {
                "description": "The Key Vault resource identifier."
            }
        },
        "pfxKeyVaultSecretUrl": {
            "type": "string",
            "metadata": {
                "description": "Absolute URL to the Key Vault secret that stores the pfx certificate."
            }
        },
        "pfxThumbprint": {
            "type": "string",
            "metadata": {
                "description": "The certificate thumbprint."
            }
        },
        "registryTag": {
            "type": "string",
            "defaultValue": "2.7.1",
            "metadata": {
                "description": "Docker registry version (image tag)."
            }
        },
        "registryReplicas": {
            "type": "string",
            "defaultValue": "20",
            "metadata": {
                "description": "Docker registry replicas."
            }
        },
        "servicePrincipalClientId": {
            "type": "securestring",
            "metadata": {
                "description": "Client ID with access to list and get secrets from the credentials Key Vault instance"
            }
        },
        "servicePrincipalClientSecret": {
            "type": "securestring",
            "metadata": {
                "description": "Secret of the client with access to list and get secrets from the credentials Key Vault instance"
            }
        }
    },
    "variables": {
        "rgname": "[resourceGroup().name]",
        "nsgName": "[concat(variables('rgname'), '-nsg')]",
        "nicName": "[concat(variables('rgname'), '-nic')]",
        "vnetName": "[concat(variables('rgname'), '-vnet')]",
        "vnetId": "[resourceId('Microsoft.Network/virtualNetworks',variables('vnetName'))]",
        "subnetRef": "[concat(variables('vnetId'), '/subnets/default')]",
        "tenantId": "[subscription().tenantId]",
        "location": "[resourceGroup().location]",
        "provisionScriptParameters": "[concat('ADMIN_USER_NAME=', parameters('adminUsername'),' SA_RESOURCE_ID=', parameters('storageAccountResourceId'),' SA_CONTAINER=', parameters('storageAccountContainer'),' KV_RESOURCE_ID=', parameters('pfxKeyVaultResourceId'),' CERT_THUMBPRINT=', parameters('pfxThumbprint'),' PIP_LABEL=', parameters('pipDomainNameLabel'),' REGISTRY_TAG=', parameters('registryTag'),' SPN_CLIENT_ID=',parameters('servicePrincipalClientId'),' SPN_CLIENT_SECRET=',parameters('servicePrincipalClientSecret'),' REGISTRY_REPLICAS=', parameters('registryReplicas'))]"
    },
    "resources": [
        {
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[concat(variables('rgname'),'-vm')]",
            "apiVersion": "2017-03-30",
            "location": "[resourceGroup().location]",
            "properties": {
                "osProfile": {
                    "computerName": "[concat(variables('rgname'),'-vm')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "customData": "[base64(concat('#cloud-config\n\nwrite_files:\n- path: \"/opt/azure/registry/script.sh\"\n  permissions: \"0744\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    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'))]",
                    "linuxConfiguration": {
                        "disablePasswordAuthentication": true,
                        "ssh": {
                            "publicKeys": [
                                {
                                    "path": "[concat('/home/', parameters('adminUsername'), '/.ssh/authorized_keys')]",
                                    "keyData": "[parameters('adminPublicKey')]"
                                }
                            ]
                        }
                    },
                    "secrets": [
                        {
                            "sourceVault": {
                                "id": "[parameters('pfxKeyVaultResourceId')]"
                            },
                            "vaultCertificates": [
                                {
                                    "certificateUrl": "[parameters('pfxKeyVaultSecretUrl')]"
                                }
                            ]
                        }
                    ]
                },
                "hardwareProfile": {
                    "vmSize": "[parameters('virtualMachineSize')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[parameters('virtualMachinePublisher')]",
                        "offer": "[parameters('virtualMachineOffer')]",
                        "sku": "[parameters('virtualMachineSku')]",
                        "version": "[parameters('virtualMachineVersion')]"
                    },
                    "osDisk": {
                        "createOption": "FromImage",
                        "diskSizeGB": 30,
                        "managedDisk": {
                            "storageAccountType": "Premium_LRS"
                        }
                    },
                    "dataDisks": []
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
                        }
                    ]
                }
            },
            "dependsOn": [
                "[concat('Microsoft.Network/networkInterfaces/',variables('nicName'))]"
            ]
        },
        {
            "apiVersion": "2017-03-30",
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/',variables('rgname'),'-vm')]"
            ],
            "location": "[resourceGroup().location]",
            "name": "[concat(variables('rgname'),'-vm/cse')]",
            "properties": {
                "protectedSettings": {
                    "commandToExecute": "[concat(variables('provisionScriptParameters'),' LOCATION=',variables('location'),' TENANT_ID=',variables('tenantId'),' PIP_FQDN=', '\"', reference(resourceId('Microsoft.Network/publicIPAddresses',parameters('pipName')),'2017-10-01').dnsSettings.fqdn,'\"',' /opt/azure/registry/script.sh >> /var/log/azure/docker-registry.log 2>&1')]"
                },
                "publisher": "Microsoft.Azure.Extensions",
                "settings": {},
                "type": "CustomScript",
                "typeHandlerVersion": "2.0",
                "autoUpgradeMinorVersion": true
            },
            "type": "Microsoft.Compute/virtualMachines/extensions"
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[concat(variables('rgname'),'-vnet')]",
            "apiVersion": "2017-10-01",
            "location": "[resourceGroup().location]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "172.16.0.0/24"
                    ]
                },
                "subnets": [
                    {
                        "name": "default",
                        "properties": {
                            "addressPrefix": "172.16.0.0/24"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[variables('nicName')]",
            "apiVersion": "2017-10-01",
            "location": "[resourceGroup().location]",
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "subnet": {
                                "id": "[variables('subnetRef')]"
                            },
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIpAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIpAddresses',parameters('pipName'))]"
                            }
                        }
                    }
                ],
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups',variables('nsgName'))]"
                }
            },
            "dependsOn": [
                "[concat('Microsoft.Network/virtualNetworks/',variables('rgname'),'-vnet')]",
                "[concat('Microsoft.Network/publicIpAddresses/',parameters('pipName'))]",
                "[concat('Microsoft.Network/networkSecurityGroups/',variables('nsgName'))]"
            ]
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "sku": {
                "name": "Basic"
            },
            "name": "[parameters('pipName')]",
            "apiVersion": "2017-10-01",
            "location": "[resourceGroup().location]",
            "properties": {
                "publicIpAllocationMethod": "[parameters('pipAllocationMethod')]",
                "dnsSettings": {
                    "domainNameLabel": "[parameters('pipDomainNameLabel')]"
                }
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[variables('nsgName')]",
            "apiVersion": "2017-10-01",
            "location": "[resourceGroup().location]",
            "properties": {
                "securityRules": [
                    {
                        "name": "HTTPS",
                        "properties": {
                            "priority": 320,
                            "protocol": "Tcp",
                            "access": "Allow",
                            "direction": "Inbound",
                            "sourceApplicationSecurityGroups": [],
                            "destinationApplicationSecurityGroups": [],
                            "sourceAddressPrefix": "*",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "*",
                            "destinationPortRange": "443"
                        }
                    }
                ]
            }
        }
    ],
    "outputs": {
        "adminUsername": {
            "type": "string",
            "value": "[parameters('adminUsername')]"
        }
    }
}