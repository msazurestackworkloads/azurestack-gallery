{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "adminUsername": {
            "type": "string",
            "defaultValue": "azureuser",
            "metadata": {
                "description": "The linux user name."
            }
        },
        "adminPublicKey": {
            "type": "string",
            "metadata": {
                "description": "User's RSA public key."
            }
        },
        "virtualMachineSize": {
            "type": "string",
            "defaultValue": "Standard_F8s_v2",
            "metadata": {
                "description": "The VM size."
            }
        },
        "virtualMachinePublisher": {
            "type": "string",
            "defaultValue": "Canonical",
            "metadata": {
                "description": "The guest OS image publisher."
            }
        },
        "virtualMachineOffer": {
            "type": "string",
            "defaultValue": "UbuntuServer",
            "metadata": {
                "description": "The guest OS image offer."
            }
        },
        "virtualMachineSku": {
            "type": "string",
            "defaultValue": "16.04-LTS",
            "metadata": {
                "description": "The guest OS image SKU."
            }
        },
        "virtualMachineVersion": {
            "type": "string",
            "defaultValue": "latest",
            "metadata": {
                "description": "The guest OS image version."
            }
        },
        "pipName": {
            "type": "string",
            "metadata": {
                "description": "The public IP resource name."
            }
        },
        "pipDomainNameLabel": {
            "type": "string",
            "metadata": {
                "description": "The public IP DNS label."
            }
        },
        "pipAllocationMethod": {
            "type": "string",
            "defaultValue": "dynamic",
            "metadata": {
                "description": "The public IP allocation method."
            }
        },
        "storageAccountResourceId": {
            "type": "string",
            "metadata": {
                "description": "An already existing storage account resource identifier."
            }
        },
        "storageAccountContainer": {
            "type": "string",
            "metadata": {
                "description": "An already existing storage account container name."
            }
        },
        "pfxKeyVaultResourceId": {
            "type": "string",
            "metadata": {
                "description": "The Key Vault resource identifier."
            }
        },
        "pfxKeyVaultSecretUrl": {
            "type": "string",
            "metadata": {
                "description": "Absolute URL to the Key Vault secret that stores the pfx certificate."
            }
        },
        "pfxThumbprint": {
            "type": "string",
            "metadata": {
                "description": "The certificate thumbprint."
            }
        },
        "registryTag": {
            "type": "string",
            "defaultValue": "2.7.1",
            "metadata": {
                "description": "Docker registry version (image tag)."
            }
        },
        "registryReplicas": {
            "type": "string",
            "defaultValue": "20",
            "metadata": {
                "description": "Docker registry replicas."
            }
        },
        "servicePrincipalClientId": {
            "type": "securestring",
            "metadata": {
                "description": "Client ID with access to list and get secrets from the credentials Key Vault instance"
            }
        },
        "servicePrincipalClientSecret": {
            "type": "securestring",
            "metadata": {
                "description": "Secret of the client with access to list and get secrets from the credentials Key Vault instance"
            }
        }
    },
    "variables": {
        "rgname": "[resourceGroup().name]",
        "nsgName": "[concat(variables('rgname'), '-nsg')]",
        "nicName": "[concat(variables('rgname'), '-nic')]",
        "vnetName": "[concat(variables('rgname'), '-vnet')]",
        "vnetId": "[resourceId('Microsoft.Network/virtualNetworks',variables('vnetName'))]",
        "subnetRef": "[concat(variables('vnetId'), '/subnets/default')]",
        "tenantId": "[subscription().tenantId]",
        "location": "[resourceGroup().location]",
        "provisionScriptParameters": "[concat('ADMIN_USER_NAME=', parameters('adminUsername'),' SA_RESOURCE_ID=', parameters('storageAccountResourceId'),' SA_CONTAINER=', parameters('storageAccountContainer'),' KV_RESOURCE_ID=', parameters('pfxKeyVaultResourceId'),' CERT_THUMBPRINT=', parameters('pfxThumbprint'),' PIP_LABEL=', parameters('pipDomainNameLabel'),' REGISTRY_TAG=', parameters('registryTag'),' SPN_CLIENT_ID=',parameters('servicePrincipalClientId'),' SPN_CLIENT_SECRET=',parameters('servicePrincipalClientSecret'),' REGISTRY_REPLICAS=', parameters('registryReplicas'))]"
    },
    "resources": [
        {
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[concat(variables('rgname'),'-vm')]",
            "apiVersion": "2017-03-30",
            "location": "[resourceGroup().location]",
            "properties": {
                "osProfile": {
                    "computerName": "[concat(variables('rgname'),'-vm')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "customData": "[base64(concat('#cloud-config\n\nwrite_files:\n- path: \"/opt/azure/registry/script.sh\"\n  permissions: \"0744\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    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'))]",
                    "linuxConfiguration": {
                        "disablePasswordAuthentication": true,
                        "ssh": {
                            "publicKeys": [
                                {
                                    "path": "[concat('/home/', parameters('adminUsername'), '/.ssh/authorized_keys')]",
                                    "keyData": "[parameters('adminPublicKey')]"
                                }
                            ]
                        }
                    },
                    "secrets": [
                        {
                            "sourceVault": {
                                "id": "[parameters('pfxKeyVaultResourceId')]"
                            },
                            "vaultCertificates": [
                                {
                                    "certificateUrl": "[parameters('pfxKeyVaultSecretUrl')]"
                                }
                            ]
                        }
                    ]
                },
                "hardwareProfile": {
                    "vmSize": "[parameters('virtualMachineSize')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[parameters('virtualMachinePublisher')]",
                        "offer": "[parameters('virtualMachineOffer')]",
                        "sku": "[parameters('virtualMachineSku')]",
                        "version": "[parameters('virtualMachineVersion')]"
                    },
                    "osDisk": {
                        "createOption": "FromImage",
                        "diskSizeGB": 30,
                        "managedDisk": {
                            "storageAccountType": "Premium_LRS"
                        }
                    },
                    "dataDisks": []
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
                        }
                    ]
                }
            },
            "dependsOn": [
                "[concat('Microsoft.Network/networkInterfaces/',variables('nicName'))]"
            ]
        },
        {
            "apiVersion": "2017-03-30",
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/',variables('rgname'),'-vm')]"
            ],
            "location": "[resourceGroup().location]",
            "name": "[concat(variables('rgname'),'-vm/cse')]",
            "properties": {
                "protectedSettings": {
                    "commandToExecute": "[concat(variables('provisionScriptParameters'),' LOCATION=',variables('location'),' TENANT_ID=',variables('tenantId'),' PIP_FQDN=', '\"', reference(resourceId('Microsoft.Network/publicIPAddresses',parameters('pipName')),'2017-10-01').dnsSettings.fqdn,'\"',' /opt/azure/registry/script.sh >> /var/log/azure/docker-registry.log 2>&1')]"
                },
                "publisher": "Microsoft.Azure.Extensions",
                "settings": {},
                "type": "CustomScript",
                "typeHandlerVersion": "2.0",
                "autoUpgradeMinorVersion": true
            },
            "type": "Microsoft.Compute/virtualMachines/extensions"
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[concat(variables('rgname'),'-vnet')]",
            "apiVersion": "2017-10-01",
            "location": "[resourceGroup().location]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "172.16.0.0/24"
                    ]
                },
                "subnets": [
                    {
                        "name": "default",
                        "properties": {
                            "addressPrefix": "172.16.0.0/24"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[variables('nicName')]",
            "apiVersion": "2017-10-01",
            "location": "[resourceGroup().location]",
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "subnet": {
                                "id": "[variables('subnetRef')]"
                            },
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIpAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIpAddresses',parameters('pipName'))]"
                            }
                        }
                    }
                ],
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups',variables('nsgName'))]"
                }
            },
            "dependsOn": [
                "[concat('Microsoft.Network/virtualNetworks/',variables('rgname'),'-vnet')]",
                "[concat('Microsoft.Network/publicIpAddresses/',parameters('pipName'))]",
                "[concat('Microsoft.Network/networkSecurityGroups/',variables('nsgName'))]"
            ]
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "sku": {
                "name": "Basic"
            },
            "name": "[parameters('pipName')]",
            "apiVersion": "2017-10-01",
            "location": "[resourceGroup().location]",
            "properties": {
                "publicIpAllocationMethod": "[parameters('pipAllocationMethod')]",
                "dnsSettings": {
                    "domainNameLabel": "[parameters('pipDomainNameLabel')]"
                }
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[variables('nsgName')]",
            "apiVersion": "2017-10-01",
            "location": "[resourceGroup().location]",
            "properties": {
                "securityRules": [
                    {
                        "name": "HTTPS",
                        "properties": {
                            "priority": 320,
                            "protocol": "Tcp",
                            "access": "Allow",
                            "direction": "Inbound",
                            "sourceApplicationSecurityGroups": [],
                            "destinationApplicationSecurityGroups": [],
                            "sourceAddressPrefix": "*",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "*",
                            "destinationPortRange": "443"
                        }
                    }
                ]
            }
        }
    ],
    "outputs": {
        "adminUsername": {
            "type": "string",
            "value": "[parameters('adminUsername')]"
        }
    }
}