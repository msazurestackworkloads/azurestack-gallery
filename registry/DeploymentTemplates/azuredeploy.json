{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "adminUsername": {
            "type": "string",
            "defaultValue": "azureuser",
            "metadata": {
                "description": "The linux user name."
            }
        },
        "adminPublicKey": {
            "type": "string",
            "metadata": {
                "description": "User's RSA public key."
            }
        },
        "virtualMachineSize": {
            "type": "string",
            "defaultValue": "Standard_F8s_v2",
            "metadata": {
                "description": "The VM size."
            }
        },
        "virtualMachinePublisher": {
            "type": "string",
            "defaultValue": "Canonical",
            "metadata": {
                "description": "The guest OS image publisher."
            }
        },
        "virtualMachineOffer": {
            "type": "string",
            "defaultValue": "UbuntuServer",
            "metadata": {
                "description": "The guest OS image offer."
            }
        },
        "virtualMachineSku": {
            "type": "string",
            "defaultValue": "16.04-LTS",
            "metadata": {
                "description": "The guest OS image SKU."
            }
        },
        "virtualMachineVersion": {
            "type": "string",
            "defaultValue": "latest",
            "metadata": {
                "description": "The guest OS image version."
            }
        },
        "pipName": {
            "type": "string",
            "metadata": {
                "description": "The public IP resource name."
            }
        },
        "pipDomainNameLabel": {
            "type": "string",
            "metadata": {
                "description": "The public IP DNS label."
            }
        },
        "pipAllocationMethod": {
            "type": "string",
            "defaultValue": "dynamic",
            "metadata": {
                "description": "The public IP allocation method."
            }
        },
        "storageAccountResourceId": {
            "type": "string",
            "metadata": {
                "description": "An already existing storage account resource identifier."
            }
        },
        "storageAccountContainer": {
            "type": "string",
            "metadata": {
                "description": "An already existing storage account container name."
            }
        },
        "pfxKeyVaultResourceId": {
            "type": "string",
            "metadata": {
                "description": "The Key Vault resource identifier."
            }
        },
        "pfxKeyVaultSecretUrl": {
            "type": "string",
            "metadata": {
                "description": "Absolute URL to the Key Vault secret that stores the pfx certificate."
            }
        },
        "pfxThumbprint": {
            "type": "string",
            "metadata": {
                "description": "The certificate thumbprint."
            }
        },
        "registryTag": {
            "type": "string",
            "defaultValue": "2.7.1",
            "metadata": {
                "description": "Docker registry version (image tag)."
            }
        },
        "registryReplicas": {
            "type": "string",
            "defaultValue": "20",
            "metadata": {
                "description": "Docker registry replicas."
            }
        },
        "servicePrincipalClientId": {
            "type": "securestring",
            "metadata": {
                "description": "Client ID with access to list and get secrets from the credentials Key Vault instance"
            }
        },
        "servicePrincipalClientSecret": {
            "type": "securestring",
            "metadata": {
                "description": "Secret of the client with access to list and get secrets from the credentials Key Vault instance"
            }
        }
    },
    "variables": {
        "rgname": "[resourceGroup().name]",
        "nsgName": "[concat(variables('rgname'), '-nsg')]",
        "nicName": "[concat(variables('rgname'), '-nic')]",
        "vnetName": "[concat(variables('rgname'), '-vnet')]",
        "vnetId": "[resourceId('Microsoft.Network/virtualNetworks',variables('vnetName'))]",
        "subnetRef": "[concat(variables('vnetId'), '/subnets/default')]",
        "tenantId": "[subscription().tenantId]",
        "location": "[resourceGroup().location]",
        "provisionScriptParameters": "[concat('ADMIN_USER_NAME=', parameters('adminUsername'),' SA_RESOURCE_ID=', parameters('storageAccountResourceId'),' SA_CONTAINER=', parameters('storageAccountContainer'),' KV_RESOURCE_ID=', parameters('pfxKeyVaultResourceId'),' CERT_THUMBPRINT=', parameters('pfxThumbprint'),' PIP_LABEL=', parameters('pipDomainNameLabel'),' REGISTRY_TAG=', parameters('registryTag'),' SPN_CLIENT_ID=',parameters('servicePrincipalClientId'),' SPN_CLIENT_SECRET=',parameters('servicePrincipalClientSecret'),' REGISTRY_REPLICAS=', parameters('registryReplicas'))]"
    },
    "resources": [
        {
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[concat(variables('rgname'),'-vm')]",
            "apiVersion": "2017-03-30",
            "location": "[resourceGroup().location]",
            "properties": {
                "osProfile": {
                    "computerName": "[concat(variables('rgname'),'-vm')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "customData": "[base64(concat('#cloud-config\n\nwrite_files:\n- path: \"/opt/azure/registry/script.sh\"\n  permissions: \"0744\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    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'))]",
                    "linuxConfiguration": {
                        "disablePasswordAuthentication": true,
                        "ssh": {
                            "publicKeys": [
                                {
                                    "path": "[concat('/home/', parameters('adminUsername'), '/.ssh/authorized_keys')]",
                                    "keyData": "[parameters('adminPublicKey')]"
                                }
                            ]
                        }
                    },
                    "secrets": [
                        {
                            "sourceVault": {
                                "id": "[parameters('pfxKeyVaultResourceId')]"
                            },
                            "vaultCertificates": [
                                {
                                    "certificateUrl": "[parameters('pfxKeyVaultSecretUrl')]"
                                }
                            ]
                        }
                    ]
                },
                "hardwareProfile": {
                    "vmSize": "[parameters('virtualMachineSize')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[parameters('virtualMachinePublisher')]",
                        "offer": "[parameters('virtualMachineOffer')]",
                        "sku": "[parameters('virtualMachineSku')]",
                        "version": "[parameters('virtualMachineVersion')]"
                    },
                    "osDisk": {
                        "createOption": "FromImage",
                        "diskSizeGB": 30,
                        "managedDisk": {
                            "storageAccountType": "Premium_LRS"
                        }
                    },
                    "dataDisks": []
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
                        }
                    ]
                }
            },
            "dependsOn": [
                "[concat('Microsoft.Network/networkInterfaces/',variables('nicName'))]"
            ]
        },
        {
            "apiVersion": "2017-03-30",
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/',variables('rgname'),'-vm')]"
            ],
            "location": "[resourceGroup().location]",
            "name": "[concat(variables('rgname'),'-vm/cse')]",
            "properties": {
                "protectedSettings": {
                    "commandToExecute": "[concat(variables('provisionScriptParameters'),' LOCATION=',variables('location'),' TENANT_ID=',variables('tenantId'),' PIP_FQDN=', '\"', reference(resourceId('Microsoft.Network/publicIPAddresses',parameters('pipName')),'2017-10-01').dnsSettings.fqdn,'\"',' /opt/azure/registry/script.sh >> /var/log/azure/docker-registry.log 2>&1')]"
                },
                "publisher": "Microsoft.Azure.Extensions",
                "settings": {},
                "type": "CustomScript",
                "typeHandlerVersion": "2.0",
                "autoUpgradeMinorVersion": true
            },
            "type": "Microsoft.Compute/virtualMachines/extensions"
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[concat(variables('rgname'),'-vnet')]",
            "apiVersion": "2017-10-01",
            "location": "[resourceGroup().location]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "172.16.0.0/24"
                    ]
                },
                "subnets": [
                    {
                        "name": "default",
                        "properties": {
                            "addressPrefix": "172.16.0.0/24"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[variables('nicName')]",
            "apiVersion": "2017-10-01",
            "location": "[resourceGroup().location]",
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "subnet": {
                                "id": "[variables('subnetRef')]"
                            },
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIpAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIpAddresses',parameters('pipName'))]"
                            }
                        }
                    }
                ],
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups',variables('nsgName'))]"
                }
            },
            "dependsOn": [
                "[concat('Microsoft.Network/virtualNetworks/',variables('rgname'),'-vnet')]",
                "[concat('Microsoft.Network/publicIpAddresses/',parameters('pipName'))]",
                "[concat('Microsoft.Network/networkSecurityGroups/',variables('nsgName'))]"
            ]
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "sku": {
                "name": "Basic"
            },
            "name": "[parameters('pipName')]",
            "apiVersion": "2017-10-01",
            "location": "[resourceGroup().location]",
            "properties": {
                "publicIpAllocationMethod": "[parameters('pipAllocationMethod')]",
                "dnsSettings": {
                    "domainNameLabel": "[parameters('pipDomainNameLabel')]"
                }
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[variables('nsgName')]",
            "apiVersion": "2017-10-01",
            "location": "[resourceGroup().location]",
            "properties": {
                "securityRules": [
                    {
                        "name": "HTTPS",
                        "properties": {
                            "priority": 320,
                            "protocol": "Tcp",
                            "access": "Allow",
                            "direction": "Inbound",
                            "sourceApplicationSecurityGroups": [],
                            "destinationApplicationSecurityGroups": [],
                            "sourceAddressPrefix": "*",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "*",
                            "destinationPortRange": "443"
                        }
                    }
                ]
            }
        }
    ],
    "outputs": {
        "adminUsername": {
            "type": "string",
            "value": "[parameters('adminUsername')]"
        }
    }
}