{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "linuxAdminUsername": {
      "type": "string",
      "defaultValue": "azureuser",
      "metadata": {
        "description": "User name for the Linux Virtual Machines that are part of the Kubernetes cluster and DVM."
      }
    },
    "sshPublicKey": {
      "metadata": {
        "description": "SSH public key used for auth to all Linux machines created as part of the the Kubernetes cluster and DVM."
      },
      "type": "string"
    },
    "masterProfileDnsPrefix": {
      "type": "string",
      "metadata": {
        "description": "This must be a region-unique name e.g. k8s-12345. Try to chose it same as the resource group name as best practice."
      }
    },
    "agentPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes Node Pool Profile Count"
      },
      "type": "int"
    },
    "agentPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The VMSize of Kubernetes node VMs"
      },
      "type": "string"
    },
    "masterPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes Master Pool Profile Count"
      },
      "type": "int"
    },
    "masterPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The VMSize of Kubernetes master VMs"
      },
      "type": "string"
    },
    "storageProfile": {
      "defaultValue": "manageddisk",
      "metadata": {
        "description": "The Storage Profile"
      },
      "type": "string"
    },
    "servicePrincipalClientId": {
      "metadata": {
        "description": "The Service Principal application ID (used by the Kubernetes Azure cloud provider). More help here: https://github.com/Azure/aks-engine/blob/master/docs/topics/service-principals.md"
      },
      "type": "securestring"
    },
    "servicePrincipalClientSecret": {
      "metadata": {
        "description": "The Service Principal Client Secret."
      },
      "type": "securestring"
    },
    "identitySystem": {
      "defaultValue": "AzureAD",
      "allowedValues": [
        "AzureAD",
        "ADFS"
      ],
      "metadata": {
        "description": "The identity system of azure stack. The value could be AzureAD or ADFS"
      },
      "type": "string"
    },
    "aksEngineNodeCount": {
      "defaultValue": 5,
      "metadata": {
        "description": "The aks engine scale node count"
      },
      "type": "int"
    },
    "aksEngineUpgradeVersion": {
      "metadata": {
        "description": "The kubernetes upgrade version using aks engine"
      },
      "type": "string"
    },
    "aksEngineApiModel": {
      "defaultValue": "https://raw.githubusercontent.com/honcao/aks-engine/e2e/examples/kubernetes-azure-stack.json",
      "metadata": {
        "description": "The API Model to be used for kubernetes deployment using aks engine "
      },
      "type": "string"
    },
    "aksEngineRepository": {
      "metadata": {
        "description": "The Aks Engine Repository to be used for building aks engine binary"
      },
      "type": "string"
    },
    "aksEngineBranch": {
      "metadata": {
        "description": "The Aks Engine branch to be used for building the aks engine binary"
      },
      "type": "string"
    },
    "networkPlugin": {
      "defaultValue": "flannel",
      "allowedValues": [
        "flannel",
        "azure",
        "kubenet"
      ],
      "metadata": {
        "description": "Network plugin which will deployed in Kubernetes cluster"
      },
      "type": "string"
    },
    "availabilityProfile": {
      "defaultValue": "AvailabilitySet",
      "allowedValues": [
        "AvailabilitySet",
        "VirtualMachineScaleSets"
      ],
      "metadata": {
        "description": "Availability profile that nodes in the Kubernetes cluster will be deployed with"
      },
      "type": "string"
    },
    "windowsAgentPoolProfileCount": {
      "defaultValue": "0",
      "metadata": {
        "description": "Kubernetes Windows node pool profile count"
      },
      "type": "string"
    },
    "windowsAgentPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The virtual machine size of the Kubernetes Windows agent nodes"
      },
      "type": "string"
    },
    "windowsAdminUsername": {
      "defaultValue": "azureuser",
      "metadata": {
        "description": "User name for the Windows virtual machines that are part of the Kubernetes cluster."
      },
      "type": "string"
    },
    "windowsAdminPassword": {
      "defaultValue": "",
      "metadata": {
        "description": "Password for the Windows virtual machines that are part of the Kubernetes cluster."
      },
      "type": "securestring"
    },
    "kubernetesAzureCloudProviderVersion": {
      "type": "string",
      "metadata": {
        "description": "This is the version for the Kubernetes Azure cloud provider. We would use a custom Kubernetes build specifically for Azure Stack for each version."
      }
    },
    "kubernetesAzureCloudProviderRelease": {
      "type": "string",
      "metadata": {
        "description": "This is the release for the Kubernetes Azure cloud provider. We would use a custom Kubernetes build specifically for Azure Stack for each version."
      }
    }
  },
  "variables": {
    "resourceGroupName": "[resourceGroup().name]",
    "dnsNameForPublicIP": "[toLower(concat('vmd-dns', parameters('masterProfileDnsPrefix')))]",
    "location": "[resourceGroup().location]",
    "imagePublisher": "Canonical",
    "imageOffer": "UbuntuServer",
    "imageSku": "16.04-LTS",
    "imageVersion": "latest",
    "vmSize": "Standard_D2_v2",
    "OSDiskName": "osdisk",
    "nicName": "[concat('vmd-vnic', uniqueString(resourceGroup().id))]",
    "addressPrefix": "10.0.0.0/24",
    "subnetName": "mySubnet",
    "subnetPrefix": "10.0.0.0/24",
    "storageAccountName": "[concat('vmdsa', uniquestring(resourceGroup().id))]",
    "storageAccountType": "Standard_LRS",
    "publicIPAddressName": "[concat('vmd-publicIP', uniqueString(resourceGroup().id))]",
    "publicIPAddressType": "Static",
    "vmStorageAccountContainerName": "vhds",
    "vmName": "[concat('vmd-', uniqueString(resourceGroup().id))]",
    "virtualNetworkName": "[concat('vmd-vnet-', uniqueString(resourceGroup().id))]",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
    "subnetRef": "[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]",
    "networkSecurityGroupName": "[tolower(concat('vmd-nsg',uniquestring(resourceGroup().id)))]",
    "sshKeyPath": "[concat('/home/',parameters('linuxAdminUsername'),'/.ssh/authorized_keys')]",
    "tenantSubscriptionId": "[subscription().subscriptionId]",
    "scriptName": "script",
    "singleQuote": "'",
    "scriptParameters": "[concat('IDENTITY_SYSTEM=','\"',parameters('identitySystem'),'\"',' WINDOWS_AGENT_COUNT=','\"',parameters('windowsAgentPoolProfileCount'),'\"' ,' WINDOWS_AGENT_SIZE=','\"',parameters('windowsAgentPoolProfileVMSize'),'\"',' WINDOWS_ADMIN_USERNAME=','\"',parameters('windowsAdminUsername'),'\"',' WINDOWS_ADMIN_PASSWORD=','\"',parameters('windowsAdminPassword'),'\"',' NETWORK_PLUGIN=','\"',parameters('networkPlugin'),'\"',' AVAILABILITY_PROFILE=','\"',parameters('availabilityProfile'),'\"',' RESOURCE_GROUP_NAME=','\"',variables('resourceGroupName'),'\"',' PUBLICIP_DNS=','\"',variables('dnsNameForPublicIP'),'\"' ,' TENANT_ID=','\"',subscription().tenantId,'\"' ,' TENANT_SUBSCRIPTION_ID=','\"',variables('tenantSubscriptionId'),'\"',' ADMIN_USERNAME=','\"',parameters('linuxAdminUsername'),'\"',' MASTER_DNS_PREFIX=','\"',parameters('masterProfileDnsPrefix'),'\"' ,' AGENT_COUNT=','\"',parameters('agentPoolProfileCount'),'\"' ,' AGENT_SIZE=','\"',parameters('agentPoolProfileVMSize'),'\"' ,' MASTER_COUNT=','\"',parameters('masterPoolProfileCount'),'\"',' MASTER_SIZE=','\"',parameters('masterPoolProfileVMSize'),'\"' ,' SPN_CLIENT_ID=','\"',parameters('servicePrincipalClientId'),'\"' ,' SPN_CLIENT_SECRET=','\"',parameters('servicePrincipalClientSecret'),'\"' ,' K8S_AZURE_CLOUDPROVIDER_RELEASE=','\"',parameters('kubernetesAzureCloudProviderRelease'),'\"' ,' K8S_AZURE_CLOUDPROVIDER_VERSION=','\"',parameters('kubernetesAzureCloudProviderVersion'),'\"' ,' REGION_NAME=','\"',variables('location'),'\"' ,' SSH_PUBLICKEY=','\"',parameters('sshPublicKey'),'\"' ,' STORAGE_PROFILE=','\"',parameters('storageProfile'),'\"',' AKSENGINE_NODE_COUNT=','\"',parameters('aksEngineNodeCount'),'\"',' AKSENGINE_UPGRADE_VERSION=','\"',parameters('aksEngineUpgradeVersion'),'\"',' AKSENGINE_API_MODEL=','\"',parameters('aksEngineApiModel'),'\"',' AKSENGINE_REPO=','\"',parameters('aksEngineRepository'),'\"',' AKSENGINE_BRANCH=','\"',parameters('aksEngineBranch'),'\"')]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[toLower(variables('storageAccountName'))]",
      "apiVersion": "2015-06-15",
      "location": "[variables('location')]",
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('networkSecurityGroupName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": [
          {
            "name": "ssh",
            "properties": {
              "description": "Allow SSH",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 200,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddressName')]",
      "location": "[variables('location')]",
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[variables('dnsNameForPublicIP')]"
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[variables('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
        "[variables('networkSecurityGroupName')]"
      ],
      "properties": {
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
        },
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2016-03-30",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('vmName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "osProfile": {
          "customData": "[base64(concat('#cloud-config\n\nwrite_files:\n- path: /opt/azure/containers/script.sh\n  permissions: \"0744\"\n  encoding: gzip\n  owner: root:root\n  content: !!binary |\n    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'))]",
          "computerName": "[variables('vmName')]",
          "adminUsername": "[parameters('linuxAdminUsername')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": "true",
            "ssh": {
              "publicKeys": [
                {
                  "keyData": "[parameters('sshPublicKey')]",
                  "path": "[variables('sshKeyPath')]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[variables('imageSku')]",
            "version": "[variables('imageVersion')]"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob, variables('vmStorageAccountContainerName'),'/',variables('OSDiskName'),'.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": "true",
            "storageUri": "[reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('vmName'),'/LinuxCustomScriptExtension')]",
      "apiVersion": "2016-03-30",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "CustomScript",
        "typeHandlerVersion": "2.0",
        "autoUpgradeMinorVersion": "true",
        "protectedSettings": {
          "commandToExecute": "[concat(variables('scriptParameters'), ' PUBLICIP_FQDN=', '\"', reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn,'\"',' /bin/bash /opt/azure/containers/script.sh >> /var/log/azure/deploy-script-dvm.log 2>&1')]"
        }
      }
    }
  ],
  "outputs": {
    "dvmPublicIpFqdn": {
      "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn]",
      "type": "string"
    }
  }
}
