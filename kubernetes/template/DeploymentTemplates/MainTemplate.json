{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "linuxAdminUsername": {
      "type": "string",
      "defaultValue": "azureuser",
      "metadata": {
        "description": "User name for the Linux virtual machines that are part of the Kubernetes cluster and DVM."
      }
    },
    "sshPublicKey": {
      "metadata": {
        "description": "SSH public key used for auth to all Linux machines created as part of the the Kubernetes cluster and DVM."
      },
      "type": "string"
    },
    "masterProfileDnsPrefix": {
      "type": "string",
      "metadata": {
        "description": "This must be a region-unique name e.g. k8s-12345. Try to chose it same as the resource group name as best practice."
      }
    },
    "agentPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes linux node pool profile count"
      },
      "type": "int"
    },
    "agentPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The virtual machine size of the Kubernetes linux agent nodes"
      },
      "type": "string"
    },
    "masterPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes Master Pool Profile Count"
      },
      "type": "int"
    },
    "masterPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The virtual machine size of the Kubernetes master nodes"
      },
      "type": "string"
    },
    "storageProfile": {
      "defaultValue": "manageddisk",
      "metadata": {
        "description": "The Storage Profile"
      },
      "type": "string"
    },
    "servicePrincipalClientId": {
      "metadata": {
        "description": "The Service Principal application ID (used by the Kubernetes Azure cloud provider). More help here: https://github.com/Azure/aks-engine/blob/master/docs/topics/service-principals.md"
      },
      "type": "securestring"
    },
    "servicePrincipalClientSecret": {
      "defaultValue": "servicePrincipalClientSecret",
      "metadata": {
        "description": "The Service Principal Client Secret."
      },
      "type": "securestring"
    },
    "identitySystem": {
      "defaultValue": "AzureAD",
      "allowedValues": [
        "AzureAD",
        "ADFS"
      ],
      "metadata": {
        "description": "The identity system of Azure Stack. The value could be AzureAD or ADFS"
      },
      "type": "string"
    },
    "kubernetesAzureCloudProviderVersion": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "This is the version for the Kubernetes Azure cloud provider. We would use a custom Kubernetes build specifically for Azure Stack for each version."
      }
    },
    "kubernetesAzureCloudProviderRelease": {
      "type": "string",
      "defaultValue": "1.14",
      "metadata": {
        "description": "This is the release for the Kubernetes Azure cloud provider. We would use a custom Kubernetes build specifically for Azure Stack for each version."
      }
    },
    "_artifactsLocation": {
      "type": "string",
      "metadata": {
        "description": "The base URI where artifacts required by this template are located. When the template is deployed using the accompanying scripts, a private location in the subscription will be used and this value will be automatically generated."
      },
      "defaultValue": "[deployment().properties.templateLink.uri]"
    },
    "aksEngineBaseURL": {
      "type": "string",
      "defaultValue": "https://github.com/Azure/aks-engine/releases/download",
      "metadata": {
        "description": "The beginning of the URL for downloading the AKS Engine binary"
      }
    },
    "aksEngineReleaseVersion": {
      "type": "string",
      "defaultValue": "v0.48.0",
      "metadata": {
        "description": "The version of AKS Engine to download"
      }
    },
    "galleryRepository": {
      "type": "string",
      "defaultValue": "msazurestackworkloads/azurestack-gallery",
      "metadata": {
        "description": "Marketplace item repository"
      }
    },
    "galleryBranch": {
      "type": "string",
      "defaultValue": "master",
      "metadata": {
        "description": "Marketplace item branch"
      }
    },
    "clusterDefinitionFileName": {
      "type": "string",
      "defaultValue": "clusterDefinition.json",
      "metadata": {
        "description": "The name of the file containing the cluster definition"
      }
    },
    "customVnetName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Name of the custom vnet"
      }
    },
    "networkPlugin": {
      "defaultValue": "kubenet",
      "allowedValues": [
        "flannel",
        "azure",
        "kubenet"
      ],
      "metadata": {
        "description": "Network plugin which will deployed in Kubernetes cluster"
      },
      "type": "string"
    }, 
    "networkPolicy": {
      "defaultValue": "",
      "allowedValues": [
        "",
        "azure"
      ],
      "metadata": {
        "description": "Network policy which will deployed in Kubernetes cluster"
      },
      "type": "string"
    },
    "windowsAdminUsername": {
      "defaultValue": "azureuser",
      "metadata": {
        "description": "User name for the Windows virtual machines that are part of the Kubernetes cluster."
      },
      "type": "string"
    },
    "windowsAdminPassword": {
      "defaultValue": "",
      "metadata": {
        "description": "User password for the Windows virtual machines that are part of the Kubernetes cluster."
      },
      "type": "securestring"
    },
    "customWindowsPackageURL": {
      "defaultValue": "",
      "metadata": {
        "description": "Custom Windows K8s zip location which will be used to deploy(kubelet, kubeproxy) on Windows node."
      },
      "type": "string"
    },
    "windowsAgentPoolProfileCount": {
      "defaultValue": "0",      
      "metadata": {
        "description": "Kubernetes Windows node pool profile count"
      },
      "type": "string"
    },
    "windowsAgentPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The virtual machine size of the Kubernetes Windows nodes"
      },
      "type": "string"
    },
    "availabilityProfile": {      
      "defaultValue": "AvailabilitySet",
      "allowedValues": [
        "AvailabilitySet",
        "VirtualMachineScaleSets"
      ],
      "metadata": {
        "description": "Availability profile that nodes in the Kubernetes cluster will be deployed with"
      },
      "type": "string"
    },
    "masterSubnetName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Name of the master subnet"
      }
    },
    "agentSubnetName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Name of the agent subnet"
      }
    },
    "firstConsecutiveStaticIP": {
      "type": "string",
      "defaultValue": "10.100.0.5",
      "metadata": {
        "description": "First consecutive static IP"
      }
    },
    "nodeDistro": {
      "defaultValue": "aks-ubuntu-16.04",
      "allowedValues": [
        "ubuntu",
        "aks-ubuntu-16.04"
      ],
      "metadata": {
        "description": "Node distro to be used to deploy Kubernetes on Azure Stack."
      },
      "type": "string"
    },
    "enableTillerAddOn": {
      "type": "string",
      "defaultValue": "false",
      "metadata": {
        "description": "Flag to enable Tiller addon"
      }
    },
    "containerRuntime": {
      "defaultValue": "docker",
      "allowedValues": [
        "docker",
        "containerd"
      ],
      "metadata": {
        "description": "Container runtime to deploy on each cluster node."
      },
      "type": "string"
    },
    "localAKSeBinaryURL": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Azure Stack blob url to download AKS engine from a blob store in disconnected environment."
      }
    },
    "dvmImagePublisher": {
      "type": "string",
      "defaultValue": "microsoft-aks",
      "metadata": {
        "description": "Azure VM image publisher to be used for the DVM"
      }
    },
    "dvmImageOffer": {
      "type": "string",
      "defaultValue": "aks",
      "metadata": {
        "description": "Azure VM image offer to be used for the DVM"
      }
    },
    "dvmImageSku": {
      "type": "string",
      "defaultValue": "aks-engine-ubuntu-1604-202003",
      "metadata": {
        "description": "Azure VM image sku to be used for the DVM"
      }
    },
    "dvmImageVersion": {
      "type": "string",
      "defaultValue": "2020.03.19",
      "metadata": {
        "description": "Azure VM image version to be used for the DVM"
      }
    }
  },
  "variables": {
    "apiVersionDeployments": "2015-11-01"
  },
  "resources": [
    {
      "apiVersion": "[variables('apiVersionDeployments')]",
      "name": "pid-b8a190d4-9ecc-4bd5-a9ba-3cc60c6e0c1f",
      "properties": {
        "mode": "Incremental",
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "resources": []
        }
      },
      "type": "Microsoft.Resources/deployments"
    },
    {
      "apiVersion": "2015-01-01",
      "name": "dvmdeployment",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "contentVersion": "1.0.0.0",
          "uri": "[uri(parameters('_artifactsLocation'), 'azuredeploy.json')]"
        },
        "parameters": {
          "linuxAdminUsername": {
            "value": "[parameters('linuxAdminUsername')]"
          },
          "sshPublicKey": {
            "value": "[parameters('sshPublicKey')]"
          },
          "masterProfileDnsPrefix": {
            "value": "[parameters('masterProfileDnsPrefix')]"
          },
          "agentPoolProfileCount": {
            "value": "[parameters('agentPoolProfileCount')]"
          },
          "agentPoolProfileVMSize": {
            "value": "[parameters('agentPoolProfileVMSize')]"
          },
          "masterPoolProfileCount": {
            "value": "[parameters('masterPoolProfileCount')]"
          },
          "masterPoolProfileVMSize": {
            "value": "[parameters('masterPoolProfileVMSize')]"
          },
          "storageProfile": {
            "value": "[parameters('storageProfile')]"
          },
          "servicePrincipalClientId": {
            "value": "[parameters('servicePrincipalClientId')]"
          },
          "servicePrincipalClientSecret": {
            "value": "[parameters('servicePrincipalClientSecret')]"
          },
          "kubernetesAzureCloudProviderVersion": {
            "value": "[parameters('kubernetesAzureCloudProviderVersion')]"
          },
          "kubernetesAzureCloudProviderRelease": {
            "value": "[parameters('kubernetesAzureCloudProviderRelease')]"
          },
          "identitySystem": {
            "value": "[parameters('identitySystem')]"
          },
          "nodeDistro": {
            "value": "[parameters('nodeDistro')]"
          },
          "customVnetName": {
            "value": "[parameters('customVnetName')]"
          },
          "networkPlugin": {
            "value": "[parameters('networkPlugin')]"
          },
          "networkPolicy": {
            "value": "[parameters('networkPolicy')]"
          },
          "availabilityProfile": {
            "value": "[parameters('availabilityProfile')]"
          },          
          "masterSubnetName": {
            "value": "[parameters('masterSubnetName')]"
          },
          "agentSubnetName": {
            "value": "[parameters('agentSubnetName')]"
          },
          "firstConsecutiveStaticIP": {
            "value": "[parameters('firstConsecutiveStaticIP')]"
          },
          "aksEngineBaseURL": {
            "value": "[parameters('aksEngineBaseURL')]"
          },
          "aksEngineReleaseVersion": {
            "value": "[parameters('aksEngineReleaseVersion')]"
          },
          "galleryRepository": {
            "value": "[parameters('galleryRepository')]"
          },
          "galleryBranch": {
            "value": "[parameters('galleryBranch')]"
          },
          "clusterDefinitionFileName": {
            "value": "[parameters('clusterDefinitionFileName')]"
          },
          "windowsAgentPoolProfileCount": {
            "value": "[parameters('windowsAgentPoolProfileCount')]"
          },
          "windowsAgentPoolProfileVMSize": {
            "value": "[parameters('windowsAgentPoolProfileVMSize')]"
          },
          "windowsAdminUsername": {
            "value": "[parameters('windowsAdminUsername')]"
          },
          "windowsAdminPassword": {
            "value": "[parameters('windowsAdminPassword')]"
          },
          "customWindowsPackageURL": {
            "value": "[parameters('customWindowsPackageURL')]"
          },
          "enableTillerAddOn": {
            "value": "[parameters('enableTillerAddOn')]"
          },
          "containerRuntime": {
            "value": "[parameters('containerRuntime')]"
          },
          "localAKSeBinaryURL": {
            "value": "[parameters('localAKSeBinaryURL')]"
          },
          "dvmImagePublisher": {
            "value": "[parameters('dvmImagePublisher')]"
          },
          "dvmImageOffer": {
            "value": "[parameters('dvmImageOffer')]"
          },
          "dvmImageSku": {
            "value": "[parameters('dvmImageSku')]"
          },
          "dvmImageVersion": {
            "value": "[parameters('dvmImageVersion')]"
          }
        }
      }
    }
  ],
  "outputs": {
    "dvmPublicIpFqdn": {
      "type": "string",
      "value": "[reference('dvmdeployment').outputs.dvmPublicIpFqdn.value]"
    }
  }
}
