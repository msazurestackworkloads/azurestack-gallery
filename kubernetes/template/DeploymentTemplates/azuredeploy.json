{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "linuxAdminUsername": {
      "type": "string",
      "defaultValue": "azureuser",
      "metadata": {
        "description": "User name for the Linux virtual machines that are part of the Kubernetes cluster and DVM."
      }
    },
    "sshPublicKey": {
      "metadata": {
        "description": "SSH public key used for auth to all Linux machines created as part of the the Kubernetes cluster and DVM."
      },
      "type": "string"
    },
    "masterProfileDnsPrefix": {
      "type": "string",
      "metadata": {
        "description": "This must be a region-unique name e.g. k8s-12345. Try to chose it same as the resource group name as best practice."
      }
    },
    "agentPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes linux node pool profile count"
      },
      "type": "int"
    },
    "agentPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The virtual machine size of the Kubernetes linux agent nodes"
      },
      "type": "string"
    },
    "masterPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes master pool profile count"
      },
      "type": "int"
    },
    "masterPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The virtual machine size of the Kubernetes master nodes"
      },
      "type": "string"
    },
    "storageProfile": {
      "defaultValue": "manageddisk",
      "metadata": {
        "description": "The Storage Profile"
      },
      "type": "string"
    },
    "servicePrincipalClientId": {
      "metadata": {
        "description": "The Service Principal application ID (used by the Kubernetes Azure cloud provider). More help here: https://github.com/Azure/aks-engine/blob/master/docs/topics/service-principals.md"
      },
      "type": "securestring"
    },
    "servicePrincipalClientSecret": {
      "metadata": {
        "description": "The Service Principal Client Secret."
      },
      "type": "securestring"
    },
    "identitySystem": {
      "defaultValue": "AzureAD",
      "allowedValues": [
        "AzureAD",
        "ADFS"
      ],
      "metadata": {
        "description": "The identity system of Azure Stack. The value could be AzureAD or ADFS"
      },
      "type": "string"
    },
    "kubernetesAzureCloudProviderVersion": {
      "type": "string",
      "defaultValue": "1.13",
      "metadata": {
        "description": "This is the version for the Kubernetes Azure cloud provider. We would use a custom Kubernetes build specifically for Azure Stack for each version."
      }
    },
    "aksEngineBaseURL": {
      "type": "string",
      "defaultValue": "https://github.com/Azure/aks-engine/releases/download",
      "metadata": {
        "description": "The beginning of the URL for downloading the AKS Engine binary"
      }
    },
    "aksEngineReleaseVersion": {
      "type": "string",
      "defaultValue": "v0.41.2",
      "metadata": {
        "description": "The version of AKS Engine to download"
      }
    },
    "galleryRepository": {
      "type": "string",
      "defaultValue": "msazurestackworkloads/azurestack-gallery",
      "metadata": {
        "description": "Marketplace item repository"
      }
    },
    "galleryBranch": {
      "type": "string",
      "defaultValue": "master",
      "metadata": {
        "description": "Marketplace item branch"
      }
    },
    "clusterDefinitionFileName": {
      "type": "string",
      "defaultValue": "clusterDefinition.json",
      "metadata": {
        "description": "The name of the file containing the cluster definition"
      }
    },
    "kubernetesImageBase": {
      "type": "string",
      "defaultValue": "mcr.microsoft.com/k8s/azurestack/core/",
      "metadata": {
        "description": "The base for Kubernetes images"
      }
    },
    "customVnetName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Name of the custom vnet"
      }
    },
    "masterSubnetName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Name of the master subnet"
      }
    },
    "agentSubnetName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Name of the agent subnet"
      }
    },
    "firstConsecutiveStaticIP": {
      "type": "string",
      "defaultValue": "10.100.0.5",
      "metadata": {
        "description": "First Consective Static IP"
      }
    },
    "networkPlugin": {
      "defaultValue": "kubenet",
      "allowedValues": [
        "flannel",
        "azure",
        "kubenet"
      ],
      "metadata": {
        "description": "Network plugin which will deployed in Kubernetes cluster"
      },
      "type": "string"
    },
    "availabilityProfile": {
      "defaultValue": "AvailabilitySet",
      "allowedValues": [
        "AvailabilitySet",
        "VirtualMachineScaleSets"
      ],
      "metadata": {
        "description": "Availability profile that nodes in the Kubernetes cluster will be deployed with"
      },
      "type": "string"
    },
    "windowsAgentPoolProfileCount": {
      "defaultValue": "0",      
      "metadata": {
        "description": "Kubernetes Windows node pool profile count"
      },
      "type": "string"
    },
    "windowsAgentPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The virtual machine size of the Kubernetes Windows agent nodes"
      },
      "type": "string"
    },
    "windowsAdminUsername": {
      "defaultValue": "azureuser",
      "metadata": {
        "description": "User name for the Windows virtual machines that are part of the Kubernetes cluster."
      },
      "type": "string"
    },
    "windowsAdminPassword": {
      "defaultValue": "",
      "metadata": {
        "description": "Password for the Windows virtual machines that are part of the Kubernetes cluster."
      },
      "type": "securestring"
    },
    "customWindowsPackageURL": {
      "defaultValue": "",
      "metadata": {
        "description": "Custom Windows K8s zip location which will be used to deploy(kubelet, kubeproxy) on Windows node."
      },
      "type": "string"
    },
    "nodeDistro": {
      "defaultValue": "ubuntu",
      "allowedValues": [
        "ubuntu",
        "aks-ubuntu-16.04"
      ],
      "metadata": {
        "description": "Node distro to be used to deploy Kubernetes on Azure Stack."
      },
      "type": "string"
    }
  },
  "variables": {
    "resourceGroupName": "[resourceGroup().name]",
    "dnsNameForPublicIP": "[toLower(concat('vmd-dns', parameters('masterProfileDnsPrefix')))]",
    "location": "[resourceGroup().location]",
    "imagePublisher": "Canonical",
    "imageOffer": "UbuntuServer",
    "imageSku": "16.04-LTS",
    "imageVersion": "latest",
    "vmSize": "Standard_D2_v2",
    "OSDiskName": "osdisk",
    "nicName": "[concat('vmd-vnic', uniqueString(resourceGroup().id))]",
    "addressPrefix": "10.0.0.0/24",
    "subnetName": "mySubnet",
    "subnetPrefix": "10.0.0.0/24",
    "storageAccountName": "[concat('vmdsa', uniquestring(resourceGroup().id))]",
    "storageAccountType": "Standard_LRS",
    "publicIPAddressName": "[concat('vmd-publicIP', uniqueString(resourceGroup().id))]",
    "publicIPAddressType": "Static",
    "vmStorageAccountContainerName": "vhds",
    "vmName": "[concat('vmd-', uniqueString(resourceGroup().id))]",
    "virtualNetworkName": "[concat('vmd-vnet-', uniqueString(resourceGroup().id))]",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
    "subnetRef": "[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]",
    "networkSecurityGroupName": "[tolower(concat('vmd-nsg',uniquestring(resourceGroup().id)))]",
    "sshKeyPath": "[concat('/home/',parameters('linuxAdminUsername'),'/.ssh/authorized_keys')]",
    "tenantSubscriptionId": "[subscription().subscriptionId]",
    "scriptName": "script",
    "singleQuote": "'",
    "scriptParameters": "[concat('IDENTITY_SYSTEM=','\"',parameters('identitySystem'),'\"',' WINDOWS_CUSTOM_PACKAGE=','\"',parameters('customWindowsPackageURL'),'\"' ,' WINDOWS_AGENT_COUNT=','\"',parameters('windowsAgentPoolProfileCount'),'\"' ,' WINDOWS_AGENT_SIZE=','\"',parameters('windowsAgentPoolProfileVMSize'),'\"',' WINDOWS_ADMIN_USERNAME=','\"',parameters('windowsAdminUsername'),'\"',' WINDOWS_ADMIN_PASSWORD=','\"',parameters('windowsAdminPassword'),'\"',' NETWORK_PLUGIN=','\"',parameters('networkPlugin'),'\"',' AVAILABILITY_PROFILE=','\"',parameters('availabilityProfile'),'\"',' FIRST_CONSECUTIVE_STATIC_IP=','\"',parameters('firstConsecutiveStaticIP'),'\"',' AGENT_SUBNET_NAME=','\"',parameters('agentSubnetName'),'\"',' MASTER_SUBNET_NAME=','\"',parameters('masterSubnetName'),'\"',' CUSTOM_VNET_NAME=','\"',parameters('customVnetName'),'\"',' NODE_DISTRO=','\"',parameters('nodeDistro'),'\"',' RESOURCE_GROUP_NAME=','\"',variables('resourceGroupName'),'\"',' PUBLICIP_DNS=','\"',variables('dnsNameForPublicIP'),'\"' ,' TENANT_ID=','\"',subscription().tenantId,'\"' ,' TENANT_SUBSCRIPTION_ID=','\"',variables('tenantSubscriptionId'),'\"',' ADMIN_USERNAME=','\"',parameters('linuxAdminUsername'),'\"',' MASTER_DNS_PREFIX=','\"',parameters('masterProfileDnsPrefix'),'\"' ,' AGENT_COUNT=','\"',parameters('agentPoolProfileCount'),'\"' ,' AGENT_SIZE=','\"',parameters('agentPoolProfileVMSize'),'\"' ,' MASTER_COUNT=','\"',parameters('masterPoolProfileCount'),'\"',' MASTER_SIZE=','\"',parameters('masterPoolProfileVMSize'),'\"' ,' SPN_CLIENT_ID=','\"',parameters('servicePrincipalClientId'),'\"' ,' SPN_CLIENT_SECRET=','\"',parameters('servicePrincipalClientSecret'),'\"' ,' K8S_AZURE_CLOUDPROVIDER_VERSION=','\"',parameters('kubernetesAzureCloudProviderVersion'),'\"' ,' REGION_NAME=','\"',variables('location'),'\"' ,' SSH_PUBLICKEY=','\"',parameters('sshPublicKey'),'\"' ,' STORAGE_PROFILE=','\"',parameters('storageProfile'),'\"',' AKSE_BASE_URL=','\"',parameters('aksEngineBaseURL'), '\"', ' AKSE_RELEASE_VERSION=','\"',parameters('aksEngineReleaseVersion'),'\"',' GALLERY_REPO=','\"',parameters('galleryRepository'),'\"',' GALLERY_BRANCH=','\"',parameters('galleryBranch'),'\"',' DEFINITION_TEMPLATE_NAME=','\"',parameters('clusterDefinitionFileName'),'\"',' K8S_IMAGE_BASE=','\"',parameters('kubernetesImageBase'),'\"')]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[toLower(variables('storageAccountName'))]",
      "apiVersion": "2015-06-15",
      "location": "[variables('location')]",
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('networkSecurityGroupName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": [
          {
            "name": "ssh",
            "properties": {
              "description": "Allow SSH",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 200,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddressName')]",
      "location": "[variables('location')]",
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[variables('dnsNameForPublicIP')]"
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[variables('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
        "[variables('networkSecurityGroupName')]"
      ],
      "properties": {
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
        },
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2016-03-30",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('vmName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "osProfile": {
          "customData": "[base64(concat('#cloud-config\n\nwrite_files:\n- path: \"/opt/azure/containers/script.sh\"\n  permissions: \"0744\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    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'))]",
          "computerName": "[variables('vmName')]",
          "adminUsername": "[parameters('linuxAdminUsername')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": "true",
            "ssh": {
              "publicKeys": [
                {
                  "keyData": "[parameters('sshPublicKey')]",
                  "path": "[variables('sshKeyPath')]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[variables('imageSku')]",
            "version": "[variables('imageVersion')]"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob, variables('vmStorageAccountContainerName'),'/',variables('OSDiskName'),'.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": "true",
            "storageUri": "[reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('vmName'),'/LinuxCustomScriptExtension')]",
      "apiVersion": "2016-03-30",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "CustomScript",
        "typeHandlerVersion": "2.0",
        "autoUpgradeMinorVersion": "true",
        "protectedSettings": {
          "commandToExecute": "[concat(variables('scriptParameters'), ' PUBLICIP_FQDN=', '\"', reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn,'\"',' /bin/bash /opt/azure/containers/script.sh >> /var/log/azure/deploy-script-dvm.log 2>&1')]"
        }
      }
    }
  ],
  "outputs": {
    "dvmPublicIpFqdn": {
      "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn]",
      "type": "string"
    }
  }
}
