{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "linuxAdminUsername": {
      "type": "string",
      "defaultValue": "azureuser",
      "metadata": {
        "description": "User name for the Linux Virtual Machines that are part of the Kubernetes cluster and DVM."
      }
    },
    "sshPublicKey": {
      "metadata": {
        "description": "SSH public key used for auth to all Linux machines created as part of the the Kubernetes cluster and DVM."
      },
      "type": "string"
    },
    "masterProfileDnsPrefix": {
      "type": "string",
      "metadata": {
        "description": "This must be a region-unique name e.g. k8s-12345. Try to chose it same as the resource group name as best practice."
      }
    },
    "agentPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes Node Pool Profile Count"
      },
      "type": "int"
    },
    "agentPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The VMSize of Kubernetes node VMs"
      },
      "type": "string"
    },
    "masterPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes Master Pool Profile Count"
      },
      "type": "int"
    },
    "masterPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The VMSize of Kubernetes master VMs"
      },
      "type": "string"
    },
    "storageProfile": {
      "defaultValue": "manageddisk",
      "metadata": {
        "description": "The Storage Profile"
      },
      "type": "string"
    },
    "servicePrincipalClientId": {
      "metadata": {
        "description": "The Service Principal application ID (used by the Kubernetes Azure cloud provider). More help here: https://github.com/Azure/aks-engine/blob/master/docs/topics/service-principals.md"
      },
      "type": "securestring"
    },
    "servicePrincipalClientSecret": {
      "metadata": {
        "description": "The Service Principal Client Secret."
      },
      "type": "securestring"
    },
    "identitySystem": {
      "defaultValue": "AzureAD",
      "allowedValues": [
        "AzureAD",
        "ADFS"
      ],
      "metadata": {
        "description": "The identity system of Azure Stack. The value could be AzureAD or ADFS"
      },
      "type": "string"
    },
    "kubernetesAzureCloudProviderVersion": {
      "type": "string",
      "defaultValue": "1.11",
      "metadata": {
        "description": "This is the version for the Kubernetes Azure cloud provider. We would use a custom Kubernetes build specifically for Azure Stack for each version."
      }
    }
  },
  "variables": {
    "resourceGroupName": "[resourceGroup().name]",
    "dnsNameForPublicIP": "[toLower(concat('vmd-dns', parameters('masterProfileDnsPrefix')))]",
    "location": "[resourceGroup().location]",
    "imagePublisher": "Canonical",
    "imageOffer": "UbuntuServer",
    "imageSku": "16.04-LTS",
    "imageVersion": "latest",
    "vmSize": "Standard_D2_v2",
    "OSDiskName": "osdisk",
    "nicName": "[concat('vmd-vnic', uniqueString(resourceGroup().id))]",
    "addressPrefix": "10.0.0.0/24",
    "subnetName": "mySubnet",
    "subnetPrefix": "10.0.0.0/24",
    "storageAccountName": "[concat('vmdsa', uniquestring(resourceGroup().id))]",
    "storageAccountType": "Standard_LRS",
    "publicIPAddressName": "[concat('vmd-publicIP', uniqueString(resourceGroup().id))]",
    "publicIPAddressType": "Static",
    "vmStorageAccountContainerName": "vhds",
    "vmName": "[concat('vmd-', uniqueString(resourceGroup().id))]",
    "virtualNetworkName": "[concat('vmd-vnet-', uniqueString(resourceGroup().id))]",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
    "subnetRef": "[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]",
    "networkSecurityGroupName": "[tolower(concat('vmd-nsg',uniquestring(resourceGroup().id)))]",
    "sshKeyPath": "[concat('/home/',parameters('linuxAdminUsername'),'/.ssh/authorized_keys')]",
    "tenantSubscriptionId": "[subscription().subscriptionId]",
    "scriptName": "script",
    "singleQuote": "'",
    "scriptParameters": "[concat('IDENTITY_SYSTEM=','\"',parameters('identitySystem'),'\"',' RESOURCE_GROUP_NAME=','\"',variables('resourceGroupName'),'\"',' PUBLICIP_DNS=','\"',variables('dnsNameForPublicIP'),'\"' ,' TENANT_ID=','\"',subscription().tenantId,'\"' ,' TENANT_SUBSCRIPTION_ID=','\"',variables('tenantSubscriptionId'),'\"',' ADMIN_USERNAME=','\"',parameters('linuxAdminUsername'),'\"',' MASTER_DNS_PREFIX=','\"',parameters('masterProfileDnsPrefix'),'\"' ,' AGENT_COUNT=','\"',parameters('agentPoolProfileCount'),'\"' ,' AGENT_SIZE=','\"',parameters('agentPoolProfileVMSize'),'\"' ,' MASTER_COUNT=','\"',parameters('masterPoolProfileCount'),'\"',' MASTER_SIZE=','\"',parameters('masterPoolProfileVMSize'),'\"' ,' SPN_CLIENT_ID=','\"',parameters('servicePrincipalClientId'),'\"' ,' SPN_CLIENT_SECRET=','\"',parameters('servicePrincipalClientSecret'),'\"' ,' K8S_AZURE_CLOUDPROVIDER_VERSION=','\"',parameters('kubernetesAzureCloudProviderVersion'),'\"' ,' REGION_NAME=','\"',variables('location'),'\"' ,' SSH_PUBLICKEY=','\"',parameters('sshPublicKey'),'\"' ,' STORAGE_PROFILE=','\"',parameters('storageProfile'),'\"')]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[toLower(variables('storageAccountName'))]",
      "apiVersion": "2015-06-15",
      "location": "[variables('location')]",
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('networkSecurityGroupName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": [
          {
            "name": "ssh",
            "properties": {
              "description": "Allow SSH",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 200,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddressName')]",
      "location": "[variables('location')]",
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[variables('dnsNameForPublicIP')]"
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[variables('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
        "[variables('networkSecurityGroupName')]"
      ],
      "properties": {
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
        },
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2016-03-30",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('vmName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "osProfile": {
          "customData": "[base64(concat('#cloud-config\n\nwrite_files:\n- path: \"/opt/azure/containers/script.sh\"\n  permissions: \"0744\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    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'))]",
          "computerName": "[variables('vmName')]",
          "adminUsername": "[parameters('linuxAdminUsername')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": "true",
            "ssh": {
              "publicKeys": [
                {
                  "keyData": "[parameters('sshPublicKey')]",
                  "path": "[variables('sshKeyPath')]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[variables('imageSku')]",
            "version": "[variables('imageVersion')]"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob, variables('vmStorageAccountContainerName'),'/',variables('OSDiskName'),'.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": "true",
            "storageUri": "[reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('vmName'),'/LinuxCustomScriptExtension')]",
      "apiVersion": "2016-03-30",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "CustomScript",
        "typeHandlerVersion": "2.0",
        "autoUpgradeMinorVersion": "true",
        "protectedSettings": {
          "commandToExecute": "[concat(variables('scriptParameters'), ' PUBLICIP_FQDN=', '\"', reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn,'\"',' /bin/bash /opt/azure/containers/script.sh >> /var/log/azure/deploy-script-dvm.log 2>&1')]"
        }
      }
    }
  ],
  "outputs": {
    "dvmPublicIpFqdn": {
      "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn]",
      "type": "string"
    }
  }
}
