{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "linuxAdminUsername": {
      "type": "string",
      "defaultValue": "azureuser",
      "metadata": {
        "description": "User name for the Linux Virtual Machines that are part of the Kubernetes cluster and DVM."
      }
    },
    "sshPublicKey": {
      "metadata": {
        "description": "SSH public key used for auth to all Linux machines created as part of the the Kubernetes cluster and DVM."
      },
      "type": "string"
    },
    "masterProfileDnsPrefix": {
      "type": "string",
      "metadata": {
        "description": "This must be a region-unique name e.g. k8s-12345. Try to chose it same as the resource group name as best practice."
      }
    },
    "agentPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes Node Pool Profile Count"
      },
      "type": "int"
    },
    "agentPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The VMSize of Kubernetes node VMs"
      },
      "type": "string"
    },
    "masterPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes Master Pool Profile Count"
      },
      "type": "int"
    },
    "masterPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The VMSize of Kubernetes master VMs"
      },
      "type": "string"
    },
    "storageProfile": {
      "defaultValue": "manageddisk",
      "metadata": {
        "description": "The Storage Profile"
      },
      "type": "string"
    },
    "servicePrincipalClientId": {
      "metadata": {
        "description": "The Service Principal application ID (used by the Kubernetes Azure cloud provider). More help here: https://github.com/Azure/aks-engine/blob/master/docs/topics/service-principals.md"
      },
      "type": "securestring"
    },
    "servicePrincipalClientSecret": {
      "metadata": {
        "description": "The Service Principal Client Secret."
      },
      "type": "securestring"
    },
    "servicePrincipalCertificateKeyVaultId": {
      "defaultValue": "servicePrincipalCertificateKeyVaultId",
      "metadata": {
        "description": "the service Principal Certificate KeyVault Id"
      },
      "type": "string"
    },
    "servicePrincipalCertificateKeyVaultSecretName": {
      "defaultValue": "servicePrincipalCertificateKeyVaultSecretName",
      "metadata": {
        "description": "The service Principal Certificate KeyVault SecretName"
      },
      "type": "string"
    },
    "identitySystem": {
      "defaultValue": "AzureAD",
      "allowedValues": [
        "AzureAD",
        "ADFS"
      ],
      "metadata": {
        "description": "The identity system of azure stack. The value could be AzureAD or ADFS"
      },
      "type": "string"
    },
    "kubernetesAzureCloudProviderVersion": {
      "type": "string",
      "defaultValue": "1.11",
      "metadata": {
        "description": "This is the version for the Kubernetes Azure cloud provider. We would use a custom Kubernetes build specifically for Azure Stack for each version."
      }
    }
  },
  "variables": {
    "resourceGroupName": "[resourceGroup().name]",
    "dnsNameForPublicIP": "[toLower(concat('vmd-dns', parameters('masterProfileDnsPrefix')))]",
    "location": "[resourceGroup().location]",
    "imagePublisher": "Canonical",
    "imageOffer": "UbuntuServer",
    "imageSku": "16.04-LTS",
    "imageVersion": "latest",
    "vmSize": "Standard_D2_v2",
    "OSDiskName": "osdisk",
    "nicName": "[concat('vmd-vnic', uniqueString(resourceGroup().id))]",
    "addressPrefix": "10.0.0.0/24",
    "subnetName": "mySubnet",
    "subnetPrefix": "10.0.0.0/24",
    "storageAccountName": "[concat('vmdsa', uniquestring(resourceGroup().id))]",
    "storageAccountType": "Standard_LRS",
    "publicIPAddressName": "[concat('vmd-publicIP', uniqueString(resourceGroup().id))]",
    "publicIPAddressType": "Static",
    "vmStorageAccountContainerName": "vhds",
    "vmName": "[concat('vmd-', uniqueString(resourceGroup().id))]",
    "virtualNetworkName": "[concat('vmd-vnet-', uniqueString(resourceGroup().id))]",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
    "subnetRef": "[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]",
    "networkSecurityGroupName": "[tolower(concat('vmd-nsg',uniquestring(resourceGroup().id)))]",
    "sshKeyPath": "[concat('/home/',parameters('linuxAdminUsername'),'/.ssh/authorized_keys')]",
    "tenantSubscriptionId": "[subscription().subscriptionId]",
    "scriptName": "script",
    "singleQuote": "'",
    "scriptParameters": "[concat('IDENTITY_SYSTEM=','\"',parameters('identitySystem'),'\"',' RESOURCE_GROUP_NAME=','\"',variables('resourceGroupName'),'\"',' PUBLICIP_DNS=','\"',variables('dnsNameForPublicIP'),'\"' ,' TENANT_ID=','\"',subscription().tenantId,'\"' ,' TENANT_SUBSCRIPTION_ID=','\"',variables('tenantSubscriptionId'),'\"',' ADMIN_USERNAME=','\"',parameters('linuxAdminUsername'),'\"',' MASTER_DNS_PREFIX=','\"',parameters('masterProfileDnsPrefix'),'\"' ,' AGENT_COUNT=','\"',parameters('agentPoolProfileCount'),'\"' ,' AGENT_SIZE=','\"',parameters('agentPoolProfileVMSize'),'\"' ,' MASTER_COUNT=','\"',parameters('masterPoolProfileCount'),'\"',' MASTER_SIZE=','\"',parameters('masterPoolProfileVMSize'),'\"' ,' SPN_CLIENT_ID=','\"',parameters('servicePrincipalClientId'),'\"' ,' SPN_CLIENT_SECRET=','\"',parameters('servicePrincipalClientSecret'),'\"' ,' SPN_CLIENT_SECRET_KEYVAULT_ID=','\"',parameters('servicePrincipalCertificateKeyVaultId'),'\"' ,' SPN_CLIENT_SECRET_KEYVAULT_SECRET_NAME=','\"',parameters('servicePrincipalCertificateKeyVaultSecretName'),'\"' ,' K8S_AZURE_CLOUDPROVIDER_VERSION=','\"',parameters('kubernetesAzureCloudProviderVersion'),'\"' ,' REGION_NAME=','\"',variables('location'),'\"' ,' SSH_PUBLICKEY=','\"',parameters('sshPublicKey'),'\"' ,' STORAGE_PROFILE=','\"',parameters('storageProfile'),'\"')]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[toLower(variables('storageAccountName'))]",
      "apiVersion": "2015-06-15",
      "location": "[variables('location')]",
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('networkSecurityGroupName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": [
          {
            "name": "ssh",
            "properties": {
              "description": "Allow SSH",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 200,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddressName')]",
      "location": "[variables('location')]",
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[variables('dnsNameForPublicIP')]"
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[variables('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
        "[variables('networkSecurityGroupName')]"
      ],
      "properties": {
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
        },
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2016-03-30",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('vmName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "osProfile": {
          "customData": "[base64(concat('#cloud-config\n\nwrite_files:\n- path: \"/opt/azure/containers/script.sh\"\n  permissions: \"0744\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    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'))]",
          "computerName": "[variables('vmName')]",
          "adminUsername": "[parameters('linuxAdminUsername')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": "true",
            "ssh": {
              "publicKeys": [
                {
                  "keyData": "[parameters('sshPublicKey')]",
                  "path": "[variables('sshKeyPath')]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[variables('imageSku')]",
            "version": "[variables('imageVersion')]"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob, variables('vmStorageAccountContainerName'),'/',variables('OSDiskName'),'.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": "true",
            "storageUri": "[reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('vmName'),'/LinuxCustomScriptExtension')]",
      "apiVersion": "2016-03-30",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "CustomScript",
        "typeHandlerVersion": "2.0",
        "autoUpgradeMinorVersion": "true",
        "protectedSettings": {
          "commandToExecute": "[concat(variables('scriptParameters'), ' PUBLICIP_FQDN=', '\"', reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn,'\"',' /bin/bash /opt/azure/containers/script.sh >> /var/log/azure/deploy-script-dvm.log 2>&1')]"
        }
      }
    }
  ],
  "outputs": {
    "dvmPublicIpFqdn": {
      "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn]",
      "type": "string"
    }
  }
}