{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "linuxAdminUsername": {
      "type": "string",
      "defaultValue": "azureuser",
      "metadata": {
        "description": "User name for the Linux Virtual Machines that are part of the Kubernetes cluster and DVM."
      }
    },
    "sshPublicKey": {
      "metadata": {
        "description": "SSH public key used for auth to all Linux machines created as part of the the Kubernetes cluster and DVM."
      },
      "type": "string"
    },
    "masterProfileDnsPrefix": {
      "type": "string",
      "metadata": {
        "description": "This must be a region-unique name e.g. k8s-12345. Try to chose it same as the resource group name as best practice."
      }
    },
    "agentPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes Node Pool Profile Count"
      },
      "type": "int"
    },
    "agentPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The VMSize of Kubernetes node VMs"
      },
      "type": "string"
    },
    "masterPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes Master Pool Profile Count"
      },
      "type": "int"
    },
    "masterPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The VMSize of Kubernetes master VMs"
      },
      "type": "string"
    },
    "storageProfile": {
      "defaultValue": "manageddisk",
      "metadata": {
        "description": "The Storage Profile"
      },
      "type": "string"
    },
    "servicePrincipalClientId": {
      "metadata": {
        "description": "The Service Principal application ID (used by the Kubernetes Azure cloud provider). More help here: https://github.com/Azure/aks-engine/blob/master/docs/topics/service-principals.md"
      },
      "type": "securestring"
    },
    "servicePrincipalClientSecret": {
      "metadata": {
        "description": "The Service Principal Client Secret."
      },
      "type": "securestring"
    },
    "servicePrincipalCertificateKeyVaultId": {
      "defaultValue": "servicePrincipalCertificateKeyVaultId",
      "metadata": {
        "description": "the service Principal Certificate KeyVault Id"
      },
      "type": "string"
    },
    "servicePrincipalCertificateKeyVaultSecretName": {
      "defaultValue": "servicePrincipalCertificateKeyVaultSecretName",
      "metadata": {
        "description": "The service Principal Certificate KeyVault SecretName"
      },
      "type": "string"
    },
    "identitySystem": {
      "defaultValue": "AzureAD",
      "allowedValues": [
        "AzureAD",
        "ADFS"
      ],
      "metadata": {
        "description": "The identity system of azure stack. The value could be AzureAD or ADFS"
      },
      "type": "string"
    },
    "kubernetesAzureCloudProviderVersion": {
      "type": "string",
      "defaultValue": "1.11",
      "metadata": {
        "description": "This is the version for the Kubernetes Azure cloud provider. We would use a custom Kubernetes build specifically for Azure Stack for each version."
      }
    }
  },
  "variables": {
    "resourceGroupName": "[resourceGroup().name]",
    "dnsNameForPublicIP": "[toLower(concat('vmd-dns', parameters('masterProfileDnsPrefix')))]",
    "location": "[resourceGroup().location]",
    "imagePublisher": "Canonical",
    "imageOffer": "UbuntuServer",
    "imageSku": "16.04-LTS",
    "imageVersion": "latest",
    "vmSize": "Standard_D2_v2",
    "OSDiskName": "osdisk",
    "nicName": "[concat('vmd-vnic', uniqueString(resourceGroup().id))]",
    "addressPrefix": "10.0.0.0/24",
    "subnetName": "mySubnet",
    "subnetPrefix": "10.0.0.0/24",
    "storageAccountName": "[concat('vmdsa', uniquestring(resourceGroup().id))]",
    "storageAccountType": "Standard_LRS",
    "publicIPAddressName": "[concat('vmd-publicIP', uniqueString(resourceGroup().id))]",
    "publicIPAddressType": "Static",
    "vmStorageAccountContainerName": "vhds",
    "vmName": "[concat('vmd-', uniqueString(resourceGroup().id))]",
    "virtualNetworkName": "[concat('vmd-vnet-', uniqueString(resourceGroup().id))]",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
    "subnetRef": "[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]",
    "networkSecurityGroupName": "[tolower(concat('vmd-nsg',uniquestring(resourceGroup().id)))]",
    "sshKeyPath": "[concat('/home/',parameters('linuxAdminUsername'),'/.ssh/authorized_keys')]",
    "tenantSubscriptionId": "[subscription().subscriptionId]",
    "scriptName": "script",
    "singleQuote": "'",
    "scriptParameters": "[concat('IDENTITY_SYSTEM=','\"',parameters('identitySystem'),'\"',' RESOURCE_GROUP_NAME=','\"',variables('resourceGroupName'),'\"',' PUBLICIP_DNS=','\"',variables('dnsNameForPublicIP'),'\"' ,' TENANT_ID=','\"',subscription().tenantId,'\"' ,' TENANT_SUBSCRIPTION_ID=','\"',variables('tenantSubscriptionId'),'\"',' ADMIN_USERNAME=','\"',parameters('linuxAdminUsername'),'\"',' MASTER_DNS_PREFIX=','\"',parameters('masterProfileDnsPrefix'),'\"' ,' AGENT_COUNT=','\"',parameters('agentPoolProfileCount'),'\"' ,' AGENT_SIZE=','\"',parameters('agentPoolProfileVMSize'),'\"' ,' MASTER_COUNT=','\"',parameters('masterPoolProfileCount'),'\"',' MASTER_SIZE=','\"',parameters('masterPoolProfileVMSize'),'\"' ,' SPN_CLIENT_ID=','\"',parameters('servicePrincipalClientId'),'\"' ,' SPN_CLIENT_SECRET=','\"',parameters('servicePrincipalClientSecret'),'\"' ,' SPN_CLIENT_SECRET_KEYVAULT_ID=','\"',parameters('servicePrincipalCertificateKeyVaultId'),'\"' ,' SPN_CLIENT_SECRET_KEYVAULT_SECRET_NAME=','\"',parameters('servicePrincipalCertificateKeyVaultSecretName'),'\"' ,' K8S_AZURE_CLOUDPROVIDER_VERSION=','\"',parameters('kubernetesAzureCloudProviderVersion'),'\"' ,' REGION_NAME=','\"',variables('location'),'\"' ,' SSH_PUBLICKEY=','\"',parameters('sshPublicKey'),'\"' ,' STORAGE_PROFILE=','\"',parameters('storageProfile'),'\"')]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[toLower(variables('storageAccountName'))]",
      "apiVersion": "2015-06-15",
      "location": "[variables('location')]",
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('networkSecurityGroupName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": [
          {
            "name": "ssh",
            "properties": {
              "description": "Allow SSH",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 200,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddressName')]",
      "location": "[variables('location')]",
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[variables('dnsNameForPublicIP')]"
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[variables('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
        "[variables('networkSecurityGroupName')]"
      ],
      "properties": {
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
        },
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2016-03-30",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('vmName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "osProfile": {
          "customData": "[base64(concat('#cloud-config\n\nwrite_files:\n- path: \"/opt/azure/containers/script.sh\"\n  permissions: \"0744\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    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'))]",
          "computerName": "[variables('vmName')]",
          "adminUsername": "[parameters('linuxAdminUsername')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": "true",
            "ssh": {
              "publicKeys": [
                {
                  "keyData": "[parameters('sshPublicKey')]",
                  "path": "[variables('sshKeyPath')]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[variables('imageSku')]",
            "version": "[variables('imageVersion')]"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob, variables('vmStorageAccountContainerName'),'/',variables('OSDiskName'),'.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": "true",
            "storageUri": "[reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('vmName'),'/LinuxCustomScriptExtension')]",
      "apiVersion": "2016-03-30",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "CustomScript",
        "typeHandlerVersion": "2.0",
        "autoUpgradeMinorVersion": "true",
        "protectedSettings": {
          "commandToExecute": "[concat(variables('scriptParameters'), ' PUBLICIP_FQDN=', '\"', reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn,'\"',' /bin/bash /opt/azure/containers/script.sh >> /var/log/azure/deploy-script-dvm.log 2>&1')]"
        }
      }
    }
  ],
  "outputs": {
    "dvmPublicIpFqdn": {
      "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn]",
      "type": "string"
    }
  }
}