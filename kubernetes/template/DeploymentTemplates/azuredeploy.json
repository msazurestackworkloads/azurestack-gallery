{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "linuxAdminUsername": {
      "type": "string",
      "defaultValue": "azureuser",
      "metadata": {
        "description": "User name for the Linux Virtual Machines that are part of the Kubernetes cluster and DVM."
      }
    },
    "sshPublicKey": {
      "metadata": {
        "description": "SSH public key used for auth to all Linux machines created as part of the the Kubernetes cluster and DVM."
      },
      "type": "string"
    },
    "masterProfileDnsPrefix": {
      "type": "string",
      "metadata": {
        "description": "This must be a region-unique name e.g. k8s-12345. Try to chose it same as the resource group name as best practice."
      }
    },
    "agentPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes Node Pool Profile Count"
      },
      "type": "int"
    },
    "agentPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The VMSize of Kubernetes node VMs"
      },
      "type": "string"
    },
    "masterPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes Master Pool Profile Count"
      },
      "type": "int"
    },
    "masterPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The VMSize of Kubernetes master VMs"
      },
      "type": "string"
    },
    "storageProfile": {
      "defaultValue": "blobdisk",
      "metadata": {
        "description": "The Storage Profile"
      },
      "type": "string"
    },
    "servicePrincipalClientId": {
      "metadata": {
        "description": "The Service Principal application ID (used by the Kubernetes Azure cloud provider). More help here: https://github.com/Azure/acs-engine/blob/master/docs/serviceprincipal.md"
      },
      "type": "securestring"
    },
    "servicePrincipalClientSecret": {
      "metadata": {
        "description": "The Service Principal Client Secret."
      },
      "type": "securestring"
    },
    "servicePrincipalCertificateKeyVaultId": {
      "defaultValue": "servicePrincipalCertificateKeyVaultId",
      "metadata": {
        "description": "the service Principal Certificate KeyVault Id"
      },
      "type": "string"
    },
    "servicePrincipalCertificateKeyVaultSecretName": {
      "defaultValue": "servicePrincipalCertificateKeyVaultSecretName",
      "metadata": {
        "description": "The service Principal Certificate KeyVault SecretName"
      },
      "type": "string"
    },
    "identitySystem": {
      "defaultValue": "AzureAD",
      "allowedValues": [
        "AzureAD",
        "ADFS"
      ],
      "metadata": {
        "description": "The identity system of azure stack. The value could be AzureAD or ADFS"
      },
      "type": "string"
    },
    "kubernetesAzureCloudProviderVersion": {
      "type": "string",
      "defaultValue": "1.11",
      "metadata": {
        "description": "This is the version for the kubernetes Azure cloud provider. We would use a custom kubernetes build specifically for AzureStack for each version."
      }
    }
  },
  "variables": {
    "resourceGroupName": "[resourceGroup().name]",
    "dnsNameForPublicIP": "[toLower(concat('vmd-dns', parameters('masterProfileDnsPrefix')))]",
    "location": "[resourceGroup().location]",
    "imagePublisher": "Canonical",
    "imageOffer": "UbuntuServer",
    "imageSku": "16.04-LTS",
    "imageVersion": "latest",
    "vmSize": "Standard_D2_v2",
    "OSDiskName": "osdisk",
    "nicName": "[concat('vmd-vnic', uniqueString(resourceGroup().id))]",
    "addressPrefix": "10.0.0.0/24",
    "subnetName": "mySubnet",
    "subnetPrefix": "10.0.0.0/24",
    "storageAccountName": "[concat('vmdsa', uniquestring(resourceGroup().id))]",
    "storageAccountType": "Standard_LRS",
    "publicIPAddressName": "[concat('vmd-publicIP', uniqueString(resourceGroup().id))]",
    "publicIPAddressType": "Static",
    "vmStorageAccountContainerName": "vhds",
    "vmName": "[concat('vmd-', uniqueString(resourceGroup().id))]",
    "virtualNetworkName": "[concat('vmd-vnet-', uniqueString(resourceGroup().id))]",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
    "subnetRef": "[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]",
    "networkSecurityGroupName": "[tolower(concat('vmd-nsg',uniquestring(resourceGroup().id)))]",
    "sshKeyPath": "[concat('/home/',parameters('linuxAdminUsername'),'/.ssh/authorized_keys')]",
    "tenantSubscriptionId": "[subscription().subscriptionId]",
    "scriptName": "script",
    "singleQuote": "'",
    "scriptParameters": "[concat('IDENTITY_SYSTEM=','\"',parameters('identitySystem'),'\"',' RESOURCE_GROUP_NAME=','\"',variables('resourceGroupName'),'\"',' PUBLICIP_DNS=','\"',variables('dnsNameForPublicIP'),'\"' ,' TENANT_ID=','\"',subscription().tenantId,'\"' ,' TENANT_SUBSCRIPTION_ID=','\"',variables('tenantSubscriptionId'),'\"',' ADMIN_USERNAME=','\"',parameters('linuxAdminUsername'),'\"',' MASTER_DNS_PREFIX=','\"',parameters('masterProfileDnsPrefix'),'\"' ,' AGENT_COUNT=','\"',parameters('agentPoolProfileCount'),'\"' ,' AGENT_SIZE=','\"',parameters('agentPoolProfileVMSize'),'\"' ,' MASTER_COUNT=','\"',parameters('masterPoolProfileCount'),'\"',' MASTER_SIZE=','\"',parameters('masterPoolProfileVMSize'),'\"' ,' SPN_CLIENT_ID=','\"',parameters('servicePrincipalClientId'),'\"' ,' SPN_CLIENT_SECRET=','\"',parameters('servicePrincipalClientSecret'),'\"' ,' SPN_CLIENT_SECRET_KEYVAULT_ID=','\"',parameters('servicePrincipalCertificateKeyVaultId'),'\"' ,' SPN_CLIENT_SECRET_KEYVAULT_SECRET_NAME=','\"',parameters('servicePrincipalCertificateKeyVaultSecretName'),'\"' ,' K8S_AZURE_CLOUDPROVIDER_VERSION=','\"',parameters('kubernetesAzureCloudProviderVersion'),'\"' ,' REGION_NAME=','\"',variables('location'),'\"' ,' SSH_PUBLICKEY=','\"',parameters('sshPublicKey'),'\"' ,' STORAGE_PROFILE=','\"',parameters('storageProfile'),'\"')]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[toLower(variables('storageAccountName'))]",
      "apiVersion": "2015-06-15",
      "location": "[variables('location')]",
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('networkSecurityGroupName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": [
          {
            "name": "ssh",
            "properties": {
              "description": "Allow SSH",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 200,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddressName')]",
      "location": "[variables('location')]",
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[variables('dnsNameForPublicIP')]"
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[variables('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
        "[variables('networkSecurityGroupName')]"
      ],
      "properties": {
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
        },
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2016-03-30",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('vmName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "osProfile": {
          "customData": "[base64(concat('#cloud-config\n\nwrite_files:\n- path: \"/opt/azure/containers/script.sh\"\n  permissions: \"0744\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    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'))]",
          "computerName": "[variables('vmName')]",
          "adminUsername": "[parameters('linuxAdminUsername')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": "true",
            "ssh": {
              "publicKeys": [
                {
                  "keyData": "[parameters('sshPublicKey')]",
                  "path": "[variables('sshKeyPath')]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[variables('imageSku')]",
            "version": "[variables('imageVersion')]"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob, variables('vmStorageAccountContainerName'),'/',variables('OSDiskName'),'.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": "true",
            "storageUri": "[reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('vmName'),'/LinuxCustomScriptExtension')]",
      "apiVersion": "2016-03-30",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "CustomScript",
        "typeHandlerVersion": "2.0",
        "autoUpgradeMinorVersion": "true",
        "protectedSettings": {
          "commandToExecute": "[concat(variables('scriptParameters'), ' PUBLICIP_FQDN=', '\"', reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn,'\"',' /bin/bash /opt/azure/containers/script.sh >> /var/log/azure/acsengine-kubernetes-dvm.log 2>&1')]"
        }
      }
    }
  ],
  "outputs": {
    "dvmPublicIpFqdn": {
      "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn]",
      "type": "string"
    }
  }
}