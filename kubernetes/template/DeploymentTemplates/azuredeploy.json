{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "linuxAdminUsername": {
      "type": "string",
      "defaultValue": "azureuser",
      "metadata": {
        "description": "User name for the Linux virtual machines that are part of the Kubernetes cluster and DVM."
      }
    },
    "sshPublicKey": {
      "metadata": {
        "description": "SSH public key used for auth to all Linux machines created as part of the the Kubernetes cluster and DVM."
      },
      "type": "string"
    },
    "masterProfileDnsPrefix": {
      "type": "string",
      "metadata": {
        "description": "This must be a region-unique name e.g. k8s-12345. Try to chose it same as the resource group name as best practice."
      }
    },
    "agentPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes linux node pool profile count"
      },
      "type": "int"
    },
    "agentPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The virtual machine size of the Kubernetes linux agent nodes"
      },
      "type": "string"
    },
    "masterPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes master pool profile count"
      },
      "type": "int"
    },
    "masterPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The virtual machine size of the Kubernetes master nodes"
      },
      "type": "string"
    },
    "storageProfile": {
      "defaultValue": "manageddisk",
      "metadata": {
        "description": "The Storage Profile"
      },
      "type": "string"
    },
    "servicePrincipalClientId": {
      "metadata": {
        "description": "The Service Principal application ID (used by the Kubernetes Azure cloud provider). More help here: https://github.com/Azure/aks-engine/blob/master/docs/topics/service-principals.md"
      },
      "type": "securestring"
    },
    "servicePrincipalClientSecret": {
      "metadata": {
        "description": "The Service Principal Client Secret."
      },
      "type": "securestring"
    },
    "identitySystem": {
      "defaultValue": "AzureAD",
      "allowedValues": [
        "AzureAD",
        "ADFS"
      ],
      "metadata": {
        "description": "The identity system of Azure Stack. The value could be AzureAD or ADFS"
      },
      "type": "string"
    },
    "kubernetesAzureCloudProviderVersion": {
      "type": "string",
      "defaultValue": "1.14",
      "metadata": {
        "description": "This is the version for the Kubernetes Azure cloud provider. We would use a custom Kubernetes build specifically for Azure Stack for each version."
      }
    },
    "aksEngineBaseURL": {
      "type": "string",
      "defaultValue": "https://github.com/Azure/aks-engine/releases/download",
      "metadata": {
        "description": "The beginning of the URL for downloading the AKS Engine binary"
      }
    },
    "aksEngineReleaseVersion": {
      "type": "string",
      "defaultValue": "v0.43.0",
      "metadata": {
        "description": "The version of AKS Engine to download"
      }
    },
    "galleryRepository": {
      "type": "string",
      "defaultValue": "msazurestackworkloads/azurestack-gallery",
      "metadata": {
        "description": "Marketplace item repository"
      }
    },
    "galleryBranch": {
      "type": "string",
      "defaultValue": "master",
      "metadata": {
        "description": "Marketplace item branch"
      }
    },
    "clusterDefinitionFileName": {
      "type": "string",
      "defaultValue": "clusterDefinition.json",
      "metadata": {
        "description": "The name of the file containing the cluster definition"
      }
    },
    "kubernetesImageBase": {
      "type": "string",
      "defaultValue": "mcr.microsoft.com/k8s/azurestack/core/",
      "metadata": {
        "description": "The base for Kubernetes images"
      }
    },
    "customVnetName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Name of the custom vnet"
      }
    },
    "masterSubnetName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Name of the master subnet"
      }
    },
    "agentSubnetName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Name of the agent subnet"
      }
    },
    "firstConsecutiveStaticIP": {
      "type": "string",
      "defaultValue": "10.100.0.5",
      "metadata": {
        "description": "First Consective Static IP"
      }
    },
    "networkPlugin": {
      "defaultValue": "kubenet",
      "allowedValues": [
        "flannel",
        "azure",
        "kubenet"
      ],
      "metadata": {
        "description": "Network plugin which will deployed in Kubernetes cluster"
      },
      "type": "string"
    },
    "availabilityProfile": {
      "defaultValue": "AvailabilitySet",
      "allowedValues": [
        "AvailabilitySet",
        "VirtualMachineScaleSets"
      ],
      "metadata": {
        "description": "Availability profile that nodes in the Kubernetes cluster will be deployed with"
      },
      "type": "string"
    },
    "windowsAgentPoolProfileCount": {
      "defaultValue": "0",      
      "metadata": {
        "description": "Kubernetes Windows node pool profile count"
      },
      "type": "string"
    },
    "windowsAgentPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The virtual machine size of the Kubernetes Windows agent nodes"
      },
      "type": "string"
    },
    "windowsAdminUsername": {
      "defaultValue": "azureuser",
      "metadata": {
        "description": "User name for the Windows virtual machines that are part of the Kubernetes cluster."
      },
      "type": "string"
    },
    "windowsAdminPassword": {
      "defaultValue": "",
      "metadata": {
        "description": "Password for the Windows virtual machines that are part of the Kubernetes cluster."
      },
      "type": "securestring"
    },
    "customWindowsPackageURL": {
      "defaultValue": "",
      "metadata": {
        "description": "Custom Windows K8s zip location which will be used to deploy(kubelet, kubeproxy) on Windows node."
      },
      "type": "string"
    },
    "nodeDistro": {
      "defaultValue": "ubuntu",
      "allowedValues": [
        "ubuntu",
        "aks-ubuntu-16.04"
      ],
      "metadata": {
        "description": "Node distro to be used to deploy Kubernetes on Azure Stack."
      },
      "type": "string"
    },
    "enableTillerAddOn": {
      "type": "string",
      "defaultValue": "false",
      "metadata": {
        "description": "Flag to enable Tiller addon"
      }
    }
  },
  "variables": {
    "resourceGroupName": "[resourceGroup().name]",
    "dnsNameForPublicIP": "[toLower(concat('vmd-dns', parameters('masterProfileDnsPrefix')))]",
    "location": "[resourceGroup().location]",
    "imagePublisher": "Canonical",
    "imageOffer": "UbuntuServer",
    "imageSku": "16.04-LTS",
    "imageVersion": "latest",
    "vmSize": "Standard_D2_v2",
    "OSDiskName": "osdisk",
    "nicName": "[concat('vmd-vnic', uniqueString(resourceGroup().id))]",
    "addressPrefix": "10.0.0.0/24",
    "subnetName": "mySubnet",
    "subnetPrefix": "10.0.0.0/24",
    "storageAccountName": "[concat('vmdsa', uniquestring(resourceGroup().id))]",
    "storageAccountType": "Standard_LRS",
    "publicIPAddressName": "[concat('vmd-publicIP', uniqueString(resourceGroup().id))]",
    "publicIPAddressType": "Static",
    "vmStorageAccountContainerName": "vhds",
    "vmName": "[concat('vmd-', uniqueString(resourceGroup().id))]",
    "virtualNetworkName": "[concat('vmd-vnet-', uniqueString(resourceGroup().id))]",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
    "subnetRef": "[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]",
    "networkSecurityGroupName": "[tolower(concat('vmd-nsg',uniquestring(resourceGroup().id)))]",
    "sshKeyPath": "[concat('/home/',parameters('linuxAdminUsername'),'/.ssh/authorized_keys')]",
    "tenantSubscriptionId": "[subscription().subscriptionId]",
    "scriptName": "script",
    "singleQuote": "'",
    "scriptParameters": "[concat('IDENTITY_SYSTEM=','\"',parameters('identitySystem'),'\"',' ENABLE_TILLER=','\"',parameters('enableTillerAddOn'),'\"' ,' WINDOWS_CUSTOM_PACKAGE=','\"',parameters('customWindowsPackageURL'),'\"' ,' WINDOWS_AGENT_COUNT=','\"',parameters('windowsAgentPoolProfileCount'),'\"' ,' WINDOWS_AGENT_SIZE=','\"',parameters('windowsAgentPoolProfileVMSize'),'\"',' WINDOWS_ADMIN_USERNAME=','\"',parameters('windowsAdminUsername'),'\"',' WINDOWS_ADMIN_PASSWORD=','\"',parameters('windowsAdminPassword'),'\"',' NETWORK_PLUGIN=','\"',parameters('networkPlugin'),'\"',' AVAILABILITY_PROFILE=','\"',parameters('availabilityProfile'),'\"',' FIRST_CONSECUTIVE_STATIC_IP=','\"',parameters('firstConsecutiveStaticIP'),'\"',' AGENT_SUBNET_NAME=','\"',parameters('agentSubnetName'),'\"',' MASTER_SUBNET_NAME=','\"',parameters('masterSubnetName'),'\"',' CUSTOM_VNET_NAME=','\"',parameters('customVnetName'),'\"',' NODE_DISTRO=','\"',parameters('nodeDistro'),'\"',' RESOURCE_GROUP_NAME=','\"',variables('resourceGroupName'),'\"',' PUBLICIP_DNS=','\"',variables('dnsNameForPublicIP'),'\"' ,' TENANT_ID=','\"',subscription().tenantId,'\"' ,' TENANT_SUBSCRIPTION_ID=','\"',variables('tenantSubscriptionId'),'\"',' ADMIN_USERNAME=','\"',parameters('linuxAdminUsername'),'\"',' MASTER_DNS_PREFIX=','\"',parameters('masterProfileDnsPrefix'),'\"' ,' AGENT_COUNT=','\"',parameters('agentPoolProfileCount'),'\"' ,' AGENT_SIZE=','\"',parameters('agentPoolProfileVMSize'),'\"' ,' MASTER_COUNT=','\"',parameters('masterPoolProfileCount'),'\"',' MASTER_SIZE=','\"',parameters('masterPoolProfileVMSize'),'\"' ,' SPN_CLIENT_ID=','\"',parameters('servicePrincipalClientId'),'\"' ,' SPN_CLIENT_SECRET=','\"',parameters('servicePrincipalClientSecret'),'\"' ,' K8S_AZURE_CLOUDPROVIDER_VERSION=','\"',parameters('kubernetesAzureCloudProviderVersion'),'\"' ,' REGION_NAME=','\"',variables('location'),'\"' ,' SSH_PUBLICKEY=','\"',parameters('sshPublicKey'),'\"' ,' STORAGE_PROFILE=','\"',parameters('storageProfile'),'\"',' AKSE_BASE_URL=','\"',parameters('aksEngineBaseURL'), '\"', ' AKSE_RELEASE_VERSION=','\"',parameters('aksEngineReleaseVersion'),'\"',' GALLERY_REPO=','\"',parameters('galleryRepository'),'\"',' GALLERY_BRANCH=','\"',parameters('galleryBranch'),'\"',' DEFINITION_TEMPLATE_NAME=','\"',parameters('clusterDefinitionFileName'),'\"',' K8S_IMAGE_BASE=','\"',parameters('kubernetesImageBase'),'\"')]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[toLower(variables('storageAccountName'))]",
      "apiVersion": "2015-06-15",
      "location": "[variables('location')]",
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('networkSecurityGroupName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": [
          {
            "name": "ssh",
            "properties": {
              "description": "Allow SSH",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 200,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddressName')]",
      "location": "[variables('location')]",
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[variables('dnsNameForPublicIP')]"
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[variables('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
        "[variables('networkSecurityGroupName')]"
      ],
      "properties": {
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
        },
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2016-03-30",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('vmName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "osProfile": {
          "customData": "[base64(concat('#cloud-config\n\nwrite_files:\n- path: \"/opt/azure/containers/script.sh\"\n  permissions: \"0744\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    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'))]",
          "computerName": "[variables('vmName')]",
          "adminUsername": "[parameters('linuxAdminUsername')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": "true",
            "ssh": {
              "publicKeys": [
                {
                  "keyData": "[parameters('sshPublicKey')]",
                  "path": "[variables('sshKeyPath')]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[variables('imageSku')]",
            "version": "[variables('imageVersion')]"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob, variables('vmStorageAccountContainerName'),'/',variables('OSDiskName'),'.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": "true",
            "storageUri": "[reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('vmName'),'/LinuxCustomScriptExtension')]",
      "apiVersion": "2016-03-30",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "CustomScript",
        "typeHandlerVersion": "2.0",
        "autoUpgradeMinorVersion": "true",
        "protectedSettings": {
          "commandToExecute": "[concat(variables('scriptParameters'), ' PUBLICIP_FQDN=', '\"', reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn,'\"',' /bin/bash /opt/azure/containers/script.sh >> /var/log/azure/deploy-script-dvm.log 2>&1')]"
        }
      }
    }
  ],
  "outputs": {
    "dvmPublicIpFqdn": {
      "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn]",
      "type": "string"
    }
  }
}
