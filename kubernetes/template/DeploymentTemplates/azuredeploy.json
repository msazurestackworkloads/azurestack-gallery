{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "linuxAdminUsername": {
      "type": "string",
      "defaultValue": "azureuser",
      "metadata": {
        "description": "User name for the Linux virtual machines that are part of the Kubernetes cluster and DVM."
      }
    },
    "sshPublicKey": {
      "metadata": {
        "description": "SSH public key used for auth to all Linux machines created as part of the the Kubernetes cluster and DVM."
      },
      "type": "string"
    },
    "masterProfileDnsPrefix": {
      "type": "string",
      "metadata": {
        "description": "This must be a region-unique name e.g. k8s-12345. Try to chose it same as the resource group name as best practice."
      }
    },
    "agentPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes linux node pool profile count"
      },
      "type": "int"
    },
    "agentPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The virtual machine size of the Kubernetes linux agent nodes"
      },
      "type": "string"
    },
    "masterPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes master pool profile count"
      },
      "type": "int"
    },
    "masterPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The virtual machine size of the Kubernetes master nodes"
      },
      "type": "string"
    },
    "storageProfile": {
      "defaultValue": "manageddisk",
      "metadata": {
        "description": "The Storage Profile"
      },
      "type": "string"
    },
    "servicePrincipalClientId": {
      "metadata": {
        "description": "The Service Principal application ID (used by the Kubernetes Azure cloud provider). More help here: https://github.com/Azure/aks-engine/blob/master/docs/topics/service-principals.md"
      },
      "type": "securestring"
    },
    "servicePrincipalClientSecret": {
      "metadata": {
        "description": "The Service Principal Client Secret."
      },
      "type": "securestring"
    },
    "identitySystem": {
      "defaultValue": "AzureAD",
      "allowedValues": [
        "AzureAD",
        "ADFS"
      ],
      "metadata": {
        "description": "The identity system of Azure Stack. The value could be AzureAD or ADFS"
      },
      "type": "string"
    },
    "kubernetesAzureCloudProviderVersion": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "This is the version for the Kubernetes Azure cloud provider. We would use a custom Kubernetes build specifically for Azure Stack for each version."
      }
    },
    "kubernetesAzureCloudProviderRelease": {
      "type": "string",
      "defaultValue": "1.14",
      "metadata": {
        "description": "This is the release for the Kubernetes Azure cloud provider. We would use a custom Kubernetes build specifically for Azure Stack for each version."
      }
    },
    "aksEngineBaseURL": {
      "type": "string",
      "defaultValue": "https://github.com/Azure/aks-engine/releases/download",
      "metadata": {
        "description": "The beginning of the URL for downloading the AKS Engine binary"
      }
    },
    "aksEngineReleaseVersion": {
      "type": "string",
      "defaultValue": "v0.48.0",
      "metadata": {
        "description": "The version of AKS Engine to download"
      }
    },
    "galleryRepository": {
      "type": "string",
      "defaultValue": "msazurestackworkloads/azurestack-gallery",
      "metadata": {
        "description": "Marketplace item repository"
      }
    },
    "galleryBranch": {
      "type": "string",
      "defaultValue": "master",
      "metadata": {
        "description": "Marketplace item branch"
      }
    },
    "clusterDefinitionFileName": {
      "type": "string",
      "defaultValue": "clusterDefinition.json",
      "metadata": {
        "description": "The name of the file containing the cluster definition"
      }
    },
    "customVnetName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Name of the custom vnet"
      }
    },
    "masterSubnetName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Name of the master subnet"
      }
    },
    "agentSubnetName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Name of the agent subnet"
      }
    },
    "firstConsecutiveStaticIP": {
      "type": "string",
      "defaultValue": "10.100.0.5",
      "metadata": {
        "description": "First Consective Static IP"
      }
    },
    "networkPlugin": {
      "defaultValue": "kubenet",
      "allowedValues": [
        "flannel",
        "azure",
        "kubenet"
      ],
      "metadata": {
        "description": "Network plugin which will deployed in Kubernetes cluster"
      },
      "type": "string"
    },
    "networkPolicy": {
      "defaultValue": "",
      "allowedValues": [
        "",
        "azure"
      ],
      "metadata": {
        "description": "Network policy which will deployed in Kubernetes cluster"
      },
      "type": "string"
    },
    "availabilityProfile": {
      "defaultValue": "AvailabilitySet",
      "allowedValues": [
        "AvailabilitySet",
        "VirtualMachineScaleSets"
      ],
      "metadata": {
        "description": "Availability profile that nodes in the Kubernetes cluster will be deployed with"
      },
      "type": "string"
    },
    "windowsAgentPoolProfileCount": {
      "defaultValue": "0",
      "metadata": {
        "description": "Kubernetes Windows node pool profile count"
      },
      "type": "string"
    },
    "windowsAgentPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The virtual machine size of the Kubernetes Windows agent nodes"
      },
      "type": "string"
    },
    "windowsAdminUsername": {
      "defaultValue": "azureuser",
      "metadata": {
        "description": "User name for the Windows virtual machines that are part of the Kubernetes cluster."
      },
      "type": "string"
    },
    "windowsAdminPassword": {
      "defaultValue": "",
      "metadata": {
        "description": "Password for the Windows virtual machines that are part of the Kubernetes cluster."
      },
      "type": "securestring"
    },
    "customWindowsPackageURL": {
      "defaultValue": "",
      "metadata": {
        "description": "Custom Windows K8s zip location which will be used to deploy(kubelet, kubeproxy) on Windows node."
      },
      "type": "string"
    },
    "nodeDistro": {
      "defaultValue": "aks-ubuntu-16.04",
      "allowedValues": [
        "ubuntu",
        "aks-ubuntu-16.04"
      ],
      "metadata": {
        "description": "Node distro to be used to deploy Kubernetes on Azure Stack."
      },
      "type": "string"
    },
    "enableTillerAddOn": {
      "type": "string",
      "defaultValue": "false",
      "metadata": {
        "description": "Flag to enable Tiller addon"
      }
    },
    "containerRuntime": {
      "type": "string",
      "defaultValue": "docker",
      "allowedValues": [
        "docker",
        "containerd"
      ],
      "metadata": {
        "description": "Container runtime to deploy on each cluster node."
      }
    },
    "localAKSeBinaryURL": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Azure Stack blob url to download AKS engine from a blob store in disconnected environment "
      }
    },
    "dvmImagePublisher": {
      "type": "string",
      "defaultValue": "microsoft-aks",
      "metadata": {
        "description": "Azure VM image publisher to be used for the DVM"
      }
    },
    "dvmImageOffer": {
      "type": "string",
      "defaultValue": "aks",
      "metadata": {
        "description": "Azure VM image offer to be used for the DVM"
      }
    },
    "dvmImageSku": {
      "type": "string",
      "defaultValue": "aks-engine-ubuntu-1604-202003",
      "metadata": {
        "description": "Azure VM image sku to be used for the DVM"
      }
    },
    "dvmImageVersion": {
      "type": "string",
      "defaultValue": "2020.03.19",
      "metadata": {
        "description": "Azure VM image version to be used for the DVM"
      }
    }
  },
  "variables": {
    "resourceGroupName": "[resourceGroup().name]",
    "dnsNameForPublicIP": "[toLower(concat('vmd-dns', parameters('masterProfileDnsPrefix')))]",
    "location": "[resourceGroup().location]",
    "vmSize": "Standard_D2_v2",
    "OSDiskName": "osdisk",
    "nicName": "[concat('vmd-vnic', uniqueString(resourceGroup().id))]",
    "addressPrefix": "10.0.0.0/24",
    "subnetName": "mySubnet",
    "subnetPrefix": "10.0.0.0/24",
    "storageAccountName": "[concat('vmdsa', uniquestring(resourceGroup().id))]",
    "storageAccountType": "Standard_LRS",
    "publicIPAddressName": "[concat('vmd-publicIP', uniqueString(resourceGroup().id))]",
    "publicIPAddressType": "Static",
    "vmStorageAccountContainerName": "vhds",
    "vmName": "[concat('vmd-', uniqueString(resourceGroup().id))]",
    "virtualNetworkName": "[concat('vmd-vnet-', uniqueString(resourceGroup().id))]",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
    "subnetRef": "[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]",
    "networkSecurityGroupName": "[tolower(concat('vmd-nsg',uniquestring(resourceGroup().id)))]",
    "sshKeyPath": "[concat('/home/',parameters('linuxAdminUsername'),'/.ssh/authorized_keys')]",
    "tenantSubscriptionId": "[subscription().subscriptionId]",
    "scriptName": "script",
    "singleQuote": "'",
    "scriptParameters": "[concat('IDENTITY_SYSTEM=','\"',parameters('identitySystem'),'\"',' ENABLE_TILLER=','\"',parameters('enableTillerAddOn'),'\"' ,' CONTAINER_RUNTIME=','\"',parameters('containerRuntime'),'\"' ,' WINDOWS_CUSTOM_PACKAGE=','\"',parameters('customWindowsPackageURL'),'\"' ,' WINDOWS_AGENT_COUNT=','\"',parameters('windowsAgentPoolProfileCount'),'\"' ,' WINDOWS_AGENT_SIZE=','\"',parameters('windowsAgentPoolProfileVMSize'),'\"',' WINDOWS_ADMIN_USERNAME=','\"',parameters('windowsAdminUsername'),'\"',' WINDOWS_ADMIN_PASSWORD=','\"',parameters('windowsAdminPassword'),'\"',' NETWORK_PLUGIN=','\"',parameters('networkPlugin'),'\"',' NETWORK_POLICY=','\"',parameters('networkPolicy'),'\"',' AVAILABILITY_PROFILE=','\"',parameters('availabilityProfile'),'\"',' FIRST_CONSECUTIVE_STATIC_IP=','\"',parameters('firstConsecutiveStaticIP'),'\"',' AGENT_SUBNET_NAME=','\"',parameters('agentSubnetName'),'\"',' MASTER_SUBNET_NAME=','\"',parameters('masterSubnetName'),'\"',' CUSTOM_VNET_NAME=','\"',parameters('customVnetName'),'\"',' NODE_DISTRO=','\"',parameters('nodeDistro'),'\"',' RESOURCE_GROUP_NAME=','\"',variables('resourceGroupName'),'\"',' PUBLICIP_DNS=','\"',variables('dnsNameForPublicIP'),'\"' ,' TENANT_ID=','\"',subscription().tenantId,'\"' ,' TENANT_SUBSCRIPTION_ID=','\"',variables('tenantSubscriptionId'),'\"',' ADMIN_USERNAME=','\"',parameters('linuxAdminUsername'),'\"',' MASTER_DNS_PREFIX=','\"',parameters('masterProfileDnsPrefix'),'\"' ,' AGENT_COUNT=','\"',parameters('agentPoolProfileCount'),'\"' ,' AGENT_SIZE=','\"',parameters('agentPoolProfileVMSize'),'\"' ,' MASTER_COUNT=','\"',parameters('masterPoolProfileCount'),'\"',' MASTER_SIZE=','\"',parameters('masterPoolProfileVMSize'),'\"' ,' SPN_CLIENT_ID=','\"',parameters('servicePrincipalClientId'),'\"' ,' SPN_CLIENT_SECRET=','\"',parameters('servicePrincipalClientSecret'),'\"' ,' K8S_AZURE_CLOUDPROVIDER_RELEASE=','\"',parameters('kubernetesAzureCloudProviderRelease'),'\"' ,' K8S_AZURE_CLOUDPROVIDER_VERSION=','\"',parameters('kubernetesAzureCloudProviderVersion'),'\"' ,' REGION_NAME=','\"',variables('location'),'\"' ,' SSH_PUBLICKEY=','\"',parameters('sshPublicKey'),'\"' ,' STORAGE_PROFILE=','\"',parameters('storageProfile'),'\"',' AKSE_BASE_URL=','\"',parameters('aksEngineBaseURL'), '\"', ' AKSE_RELEASE_VERSION=','\"',parameters('aksEngineReleaseVersion'),'\"',' GALLERY_REPO=','\"',parameters('galleryRepository'),'\"',' GALLERY_BRANCH=','\"',parameters('galleryBranch'),'\"',' DEFINITION_TEMPLATE_NAME=','\"',parameters('clusterDefinitionFileName'),'\"',' DISCONNECTED_AKS_ENGINE_URL=','\"',parameters('localAKSeBinaryURL'),'\"')]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[toLower(variables('storageAccountName'))]",
      "apiVersion": "2015-06-15",
      "location": "[variables('location')]",
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('networkSecurityGroupName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": [
          {
            "name": "ssh",
            "properties": {
              "description": "Allow SSH",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 200,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddressName')]",
      "location": "[variables('location')]",
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[variables('dnsNameForPublicIP')]"
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[variables('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
        "[variables('networkSecurityGroupName')]"
      ],
      "properties": {
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
        },
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2016-03-30",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('vmName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "osProfile": {
         "customData": "[base64(concat('#cloud-config\n\nwrite_files:\n- path: \"/opt/azure/containers/script.sh\"\n  permissions: \"0744\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    '))]",
          "computerName": "[variables('vmName')]",
          "adminUsername": "[parameters('linuxAdminUsername')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": "true",
            "ssh": {
              "publicKeys": [
                {
                  "keyData": "[parameters('sshPublicKey')]",
                  "path": "[variables('sshKeyPath')]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[parameters('dvmImagePublisher')]",
            "offer": "[parameters('dvmImageOffer')]",
            "sku": "[parameters('dvmImageSku')]",
            "version": "[parameters('dvmImageVersion')]"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob, variables('vmStorageAccountContainerName'),'/',variables('OSDiskName'),'.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": "true",
            "storageUri": "[reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('vmName'),'/LinuxCustomScriptExtension')]",
      "apiVersion": "2016-03-30",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "CustomScript",
        "typeHandlerVersion": "2.0",
        "autoUpgradeMinorVersion": "true",
        "protectedSettings": {
          "commandToExecute": "[concat(variables('scriptParameters'), ' PUBLICIP_FQDN=', '\"', reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn,'\"',' /bin/bash /opt/azure/containers/script.sh >> /var/log/azure/deploy-script-dvm.log 2>&1')]"
        }
      }
    }
  ],
  "outputs": {
    "dvmPublicIpFqdn": {
      "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn]",
      "type": "string"
    }
  }
}
