{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "linuxAdminUsername": {
      "type": "string",
      "defaultValue": "azureuser",
      "metadata": {
        "description": "User name for the Linux virtual machines that are part of the Kubernetes cluster and DVM."
      }
    },
    "sshPublicKey": {
      "metadata": {
        "description": "SSH public key used for auth to all Linux machines created as part of the the Kubernetes cluster and DVM."
      },
      "type": "string"
    },
    "masterProfileDnsPrefix": {
      "type": "string",
      "metadata": {
        "description": "This must be a region-unique name e.g. k8s-12345. Try to chose it same as the resource group name as best practice."
      }
    },
    "agentPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes linux node pool profile count"
      },
      "type": "int"
    },
    "agentPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The virtual machine size of the Kubernetes linux agent nodes"
      },
      "type": "string"
    },
    "masterPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes master pool profile count"
      },
      "type": "int"
    },
    "masterPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The virtual machine size of the Kubernetes master nodes"
      },
      "type": "string"
    },
    "storageProfile": {
      "defaultValue": "manageddisk",
      "metadata": {
        "description": "The Storage Profile"
      },
      "type": "string"
    },
    "servicePrincipalClientId": {
      "metadata": {
        "description": "The Service Principal application ID (used by the Kubernetes Azure cloud provider). More help here: https://github.com/Azure/aks-engine/blob/master/docs/topics/service-principals.md"
      },
      "type": "securestring"
    },
    "servicePrincipalClientSecret": {
      "metadata": {
        "description": "The Service Principal Client Secret."
      },
      "type": "securestring"
    },
    "identitySystem": {
      "defaultValue": "AzureAD",
      "allowedValues": [
        "AzureAD",
        "ADFS"
      ],
      "metadata": {
        "description": "The identity system of Azure Stack. The value could be AzureAD or ADFS"
      },
      "type": "string"
    },
    "kubernetesAzureCloudProviderVersion": {
      "type": "string",
      "defaultValue": "1.14.7",
      "metadata": {
        "description": "This is the version for the Kubernetes Azure cloud provider. We would use a custom Kubernetes build specifically for Azure Stack for each version."
      }
    },
    "aksEngineBaseURL": {
      "type": "string",
      "defaultValue": "https://github.com/Azure/aks-engine/releases/download",
      "metadata": {
        "description": "The beginning of the URL for downloading the AKS Engine binary"
      }
    },
    "aksEngineReleaseVersion": {
      "type": "string",
      "defaultValue": "v0.48.0",
      "metadata": {
        "description": "The version of AKS Engine to download"
      }
    },
    "galleryRepository": {
      "type": "string",
      "defaultValue": "msazurestackworkloads/azurestack-gallery",
      "metadata": {
        "description": "Marketplace item repository"
      }
    },
    "galleryBranch": {
      "type": "string",
      "defaultValue": "master",
      "metadata": {
        "description": "Marketplace item branch"
      }
    },
    "clusterDefinitionFileName": {
      "type": "string",
      "defaultValue": "clusterDefinition.json",
      "metadata": {
        "description": "The name of the file containing the cluster definition"
      }
    },
    "kubernetesImageBase": {
      "type": "string",
      "defaultValue": "mcr.microsoft.com/k8s/azurestack/core/",
      "metadata": {
        "description": "The base for Kubernetes images"
      }
    },
    "customVnetName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Name of the custom vnet"
      }
    },
    "masterSubnetName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Name of the master subnet"
      }
    },
    "agentSubnetName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Name of the agent subnet"
      }
    },
    "firstConsecutiveStaticIP": {
      "type": "string",
      "defaultValue": "10.100.0.5",
      "metadata": {
        "description": "First Consective Static IP"
      }
    },
    "networkPlugin": {
      "defaultValue": "kubenet",
      "allowedValues": [
        "flannel",
        "azure",
        "kubenet"
      ],
      "metadata": {
        "description": "Network plugin which will deployed in Kubernetes cluster"
      },
      "type": "string"
    },
    "networkPolicy": {
      "defaultValue": "",
      "allowedValues": [
        "",
        "azure"
      ],
      "metadata": {
        "description": "Network policy which will deployed in Kubernetes cluster"
      },
      "type": "string"
    },
    "availabilityProfile": {
      "defaultValue": "AvailabilitySet",
      "allowedValues": [
        "AvailabilitySet",
        "VirtualMachineScaleSets"
      ],
      "metadata": {
        "description": "Availability profile that nodes in the Kubernetes cluster will be deployed with"
      },
      "type": "string"
    },
    "windowsAgentPoolProfileCount": {
      "defaultValue": "0",      
      "metadata": {
        "description": "Kubernetes Windows node pool profile count"
      },
      "type": "string"
    },
    "windowsAgentPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The virtual machine size of the Kubernetes Windows agent nodes"
      },
      "type": "string"
    },
    "windowsAdminUsername": {
      "defaultValue": "azureuser",
      "metadata": {
        "description": "User name for the Windows virtual machines that are part of the Kubernetes cluster."
      },
      "type": "string"
    },
    "windowsAdminPassword": {
      "defaultValue": "",
      "metadata": {
        "description": "Password for the Windows virtual machines that are part of the Kubernetes cluster."
      },
      "type": "securestring"
    },
    "customWindowsPackageURL": {
      "defaultValue": "",
      "metadata": {
        "description": "Custom Windows K8s zip location which will be used to deploy(kubelet, kubeproxy) on Windows node."
      },
      "type": "string"
    },
    "nodeDistro": {
      "defaultValue": "ubuntu",
      "allowedValues": [
        "ubuntu",
        "aks-ubuntu-16.04"
      ],
      "metadata": {
        "description": "Node distro to be used to deploy Kubernetes on Azure Stack."
      },
      "type": "string"
    },
    "enableTillerAddOn": {
      "type": "string",
      "defaultValue": "false",
      "metadata": {
        "description": "Flag to enable Tiller addon"
      }
    },
    "containerRuntime": {
      "type": "string",
      "defaultValue": "docker",
      "allowedValues": [
        "docker",
        "containerd"
      ],
      "metadata": {
        "description": "Container runtime to deploy on each cluster node."
      }
    },
    "localAKSeBinaryURL": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Azure Stack blob url to download AKS engine from a blob store in disconnected environment "
      }
    },
    "dvmImagePublisher": {
      "type": "string",
      "defaultValue": "microsoft-aks",
      "metadata": {
        "description": "Azure VM image publisher to be used for the DVM"
      }
    },
    "dvmImageOffer": {
      "type": "string",
      "defaultValue": "aks",
      "metadata": {
        "description": "Azure VM image offer to be used for the DVM"
      }
    },
    "dvmImageSku": {
      "type": "string",
      "defaultValue": "aks-ubuntu-1604-201910",
      "metadata": {
        "description": "Azure VM image sku to be used for the DVM"
      }
    },
    "dvmImageVersion": {
      "type": "string",
      "defaultValue": "2019.10.24",
      "metadata": {
        "description": "Azure VM image version to be used for the DVM"
      }
    }
  },
  "variables": {
    "resourceGroupName": "[resourceGroup().name]",
    "dnsNameForPublicIP": "[toLower(concat('vmd-dns', parameters('masterProfileDnsPrefix')))]",
    "location": "[resourceGroup().location]",
    "vmSize": "Standard_D2_v2",
    "OSDiskName": "osdisk",
    "nicName": "[concat('vmd-vnic', uniqueString(resourceGroup().id))]",
    "addressPrefix": "10.0.0.0/24",
    "subnetName": "mySubnet",
    "subnetPrefix": "10.0.0.0/24",
    "storageAccountName": "[concat('vmdsa', uniquestring(resourceGroup().id))]",
    "storageAccountType": "Standard_LRS",
    "publicIPAddressName": "[concat('vmd-publicIP', uniqueString(resourceGroup().id))]",
    "publicIPAddressType": "Static",
    "vmStorageAccountContainerName": "vhds",
    "vmName": "[concat('vmd-', uniqueString(resourceGroup().id))]",
    "virtualNetworkName": "[concat('vmd-vnet-', uniqueString(resourceGroup().id))]",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
    "subnetRef": "[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]",
    "networkSecurityGroupName": "[tolower(concat('vmd-nsg',uniquestring(resourceGroup().id)))]",
    "sshKeyPath": "[concat('/home/',parameters('linuxAdminUsername'),'/.ssh/authorized_keys')]",
    "tenantSubscriptionId": "[subscription().subscriptionId]",
    "scriptName": "script",
    "singleQuote": "'",
    "scriptParameters": "[concat('IDENTITY_SYSTEM=','\"',parameters('identitySystem'),'\"',' ENABLE_TILLER=','\"',parameters('enableTillerAddOn'),'\"' ,' CONTAINER_RUNTIME=','\"',parameters('containerRuntime'),'\"' ,' WINDOWS_CUSTOM_PACKAGE=','\"',parameters('customWindowsPackageURL'),'\"' ,' WINDOWS_AGENT_COUNT=','\"',parameters('windowsAgentPoolProfileCount'),'\"' ,' WINDOWS_AGENT_SIZE=','\"',parameters('windowsAgentPoolProfileVMSize'),'\"',' WINDOWS_ADMIN_USERNAME=','\"',parameters('windowsAdminUsername'),'\"',' WINDOWS_ADMIN_PASSWORD=','\"',parameters('windowsAdminPassword'),'\"',' NETWORK_PLUGIN=','\"',parameters('networkPlugin'),'\"',' NETWORK_POLICY=','\"',parameters('networkPolicy'),'\"',' AVAILABILITY_PROFILE=','\"',parameters('availabilityProfile'),'\"',' FIRST_CONSECUTIVE_STATIC_IP=','\"',parameters('firstConsecutiveStaticIP'),'\"',' AGENT_SUBNET_NAME=','\"',parameters('agentSubnetName'),'\"',' MASTER_SUBNET_NAME=','\"',parameters('masterSubnetName'),'\"',' CUSTOM_VNET_NAME=','\"',parameters('customVnetName'),'\"',' NODE_DISTRO=','\"',parameters('nodeDistro'),'\"',' RESOURCE_GROUP_NAME=','\"',variables('resourceGroupName'),'\"',' PUBLICIP_DNS=','\"',variables('dnsNameForPublicIP'),'\"' ,' TENANT_ID=','\"',subscription().tenantId,'\"' ,' TENANT_SUBSCRIPTION_ID=','\"',variables('tenantSubscriptionId'),'\"',' ADMIN_USERNAME=','\"',parameters('linuxAdminUsername'),'\"',' MASTER_DNS_PREFIX=','\"',parameters('masterProfileDnsPrefix'),'\"' ,' AGENT_COUNT=','\"',parameters('agentPoolProfileCount'),'\"' ,' AGENT_SIZE=','\"',parameters('agentPoolProfileVMSize'),'\"' ,' MASTER_COUNT=','\"',parameters('masterPoolProfileCount'),'\"',' MASTER_SIZE=','\"',parameters('masterPoolProfileVMSize'),'\"' ,' SPN_CLIENT_ID=','\"',parameters('servicePrincipalClientId'),'\"' ,' SPN_CLIENT_SECRET=','\"',parameters('servicePrincipalClientSecret'),'\"' ,' K8S_AZURE_CLOUDPROVIDER_VERSION=','\"',parameters('kubernetesAzureCloudProviderVersion'),'\"' ,' REGION_NAME=','\"',variables('location'),'\"' ,' SSH_PUBLICKEY=','\"',parameters('sshPublicKey'),'\"' ,' STORAGE_PROFILE=','\"',parameters('storageProfile'),'\"',' AKSE_BASE_URL=','\"',parameters('aksEngineBaseURL'), '\"', ' AKSE_RELEASE_VERSION=','\"',parameters('aksEngineReleaseVersion'),'\"',' GALLERY_REPO=','\"',parameters('galleryRepository'),'\"',' GALLERY_BRANCH=','\"',parameters('galleryBranch'),'\"',' DEFINITION_TEMPLATE_NAME=','\"',parameters('clusterDefinitionFileName'),'\"',' K8S_IMAGE_BASE=','\"',parameters('kubernetesImageBase'),'\"',' DISCONNECTED_AKS_ENGINE_URL=','\"',parameters('localAKSeBinaryURL'),'\"')]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[toLower(variables('storageAccountName'))]",
      "apiVersion": "2015-06-15",
      "location": "[variables('location')]",
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('networkSecurityGroupName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": [
          {
            "name": "ssh",
            "properties": {
              "description": "Allow SSH",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 200,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddressName')]",
      "location": "[variables('location')]",
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[variables('dnsNameForPublicIP')]"
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[variables('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
        "[variables('networkSecurityGroupName')]"
      ],
      "properties": {
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
        },
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2016-03-30",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('vmName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "osProfile": {
          "customData": "[base64(concat('#cloud-config\n\nwrite_files:\n- path: \"/opt/azure/containers/script.sh\"\n  permissions: \"0744\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    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'))]",
          "computerName": "[variables('vmName')]",
          "adminUsername": "[parameters('linuxAdminUsername')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": "true",
            "ssh": {
              "publicKeys": [
                {
                  "keyData": "[parameters('sshPublicKey')]",
                  "path": "[variables('sshKeyPath')]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[parameters('dvmImagePublisher')]",
            "offer": "[parameters('dvmImageOffer')]",
            "sku": "[parameters('dvmImageSku')]",
            "version": "[parameters('dvmImageVersion')]"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob, variables('vmStorageAccountContainerName'),'/',variables('OSDiskName'),'.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": "true",
            "storageUri": "[reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('vmName'),'/LinuxCustomScriptExtension')]",
      "apiVersion": "2016-03-30",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "CustomScript",
        "typeHandlerVersion": "2.0",
        "autoUpgradeMinorVersion": "true",
        "protectedSettings": {
          "commandToExecute": "[concat(variables('scriptParameters'), ' PUBLICIP_FQDN=', '\"', reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn,'\"',' /bin/bash /opt/azure/containers/script.sh >> /var/log/azure/deploy-script-dvm.log 2>&1')]"
        }
      }
    }
  ],
  "outputs": {
    "dvmPublicIpFqdn": {
      "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn]",
      "type": "string"
    }
  }
}
