{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "linuxAdminUsername": {
      "type": "string",
      "defaultValue": "azureuser",
      "metadata": {
        "description": "User name for the Linux Virtual Machines that are part of the Kubernetes cluster and DVM."
      }
    },
    "sshPublicKey": {
      "metadata": {
        "description": "SSH public key used for auth to all Linux machines created as part of the the Kubernetes cluster and DVM."
      },
      "type": "string"
    },
    "masterProfileDnsPrefix": {
      "type": "string",
      "metadata": {
        "description": "This must be a region-unique name e.g. k8s-12345. Try to chose it same as the resource group name as best practice."
      }
    },
    "agentPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes Node Pool Profile Count"
      },
      "type": "int"
    },
    "agentPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The VMSize of Kubernetes node VMs"
      },
      "type": "string"
    },
    "masterPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes Master Pool Profile Count"
      },
      "type": "int"
    },
    "masterPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The VMSize of Kubernetes master VMs"
      },
      "type": "string"
    },
    "storageProfile": {
      "defaultValue": "blobdisk",
      "metadata": {
        "description": "The Storage Profile"
      },
      "type": "string"
    },
    "servicePrincipalClientId": {
      "metadata": {
        "description": "The Service Principal application ID (used by the Kubernetes Azure cloud provider). More help here: https://github.com/Azure/acs-engine/blob/master/docs/serviceprincipal.md"
      },
      "type": "securestring"
    },
    "servicePrincipalClientSecret": {
      "metadata": {
        "description": "The Service Principal Client Secret."
      },
      "type": "securestring"
    },
    "servicePrincipalCertificateKeyVaultId": {
      "defaultValue": "servicePrincipalCertificateKeyVaultId",
      "metadata": {
        "description": "the service Principal Certificate KeyVault Id"
      },
      "type": "string"
    },
    "servicePrincipalCertificateKeyVaultSecretName": {
      "defaultValue": "servicePrincipalCertificateKeyVaultSecretName",
      "metadata": {
        "description": "The service Principal Certificate KeyVault SecretName"
      },
      "type": "string"
    },
    "identitySystem": {
      "defaultValue": "AzureAD",
      "allowedValues": [
        "AzureAD",
        "ADFS"
      ],
      "metadata": {
        "description": "The identity system of azure stack. The value could be AzureAD or ADFS"
      },
      "type": "string"
    },
    "kubernetesAzureCloudProviderVersion": {
      "type": "string",
      "defaultValue": "1.11",
      "metadata": {
        "description": "This is the version for the kubernetes Azure cloud provider. We would use a custom kubernetes build specifically for AzureStack for each version."
      }
    }
  },
  "variables": {
    "resourceGroupName": "[resourceGroup().name]",
    "dnsNameForPublicIP": "[toLower(concat('vmd-dns', parameters('masterProfileDnsPrefix')))]",
    "location": "[resourceGroup().location]",
    "imagePublisher": "Canonical",
    "imageOffer": "UbuntuServer",
    "imageSku": "16.04-LTS",
    "imageVersion": "latest",
    "vmSize": "Standard_D2_v2",
    "OSDiskName": "osdisk",
    "nicName": "[concat('vmd-vnic', uniqueString(resourceGroup().id))]",
    "addressPrefix": "10.0.0.0/24",
    "subnetName": "mySubnet",
    "subnetPrefix": "10.0.0.0/24",
    "storageAccountName": "[concat('vmdsa', uniquestring(resourceGroup().id))]",
    "storageAccountType": "Standard_LRS",
    "publicIPAddressName": "[concat('vmd-publicIP', uniqueString(resourceGroup().id))]",
    "publicIPAddressType": "Static",
    "vmStorageAccountContainerName": "vhds",
    "vmName": "[concat('vmd-', uniqueString(resourceGroup().id))]",
    "virtualNetworkName": "[concat('vmd-vnet-', uniqueString(resourceGroup().id))]",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
    "subnetRef": "[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]",
    "networkSecurityGroupName": "[tolower(concat('vmd-nsg',uniquestring(resourceGroup().id)))]",
    "sshKeyPath": "[concat('/home/',parameters('linuxAdminUsername'),'/.ssh/authorized_keys')]",
    "tenantSubscriptionId": "[subscription().subscriptionId]",
    "scriptName": "script",
    "singleQuote": "'",
    "scriptParameters": "[concat('IDENTITY_SYSTEM=','\"',parameters('identitySystem'),'\"',' RESOURCE_GROUP_NAME=','\"',variables('resourceGroupName'),'\"',' PUBLICIP_DNS=','\"',variables('dnsNameForPublicIP'),'\"' ,' TENANT_ID=','\"',subscription().tenantId,'\"' ,' TENANT_SUBSCRIPTION_ID=','\"',variables('tenantSubscriptionId'),'\"',' ADMIN_USERNAME=','\"',parameters('linuxAdminUsername'),'\"',' MASTER_DNS_PREFIX=','\"',parameters('masterProfileDnsPrefix'),'\"' ,' AGENT_COUNT=','\"',parameters('agentPoolProfileCount'),'\"' ,' AGENT_SIZE=','\"',parameters('agentPoolProfileVMSize'),'\"' ,' MASTER_COUNT=','\"',parameters('masterPoolProfileCount'),'\"',' MASTER_SIZE=','\"',parameters('masterPoolProfileVMSize'),'\"' ,' SPN_CLIENT_ID=','\"',parameters('servicePrincipalClientId'),'\"' ,' SPN_CLIENT_SECRET=','\"',parameters('servicePrincipalClientSecret'),'\"' ,' SPN_CLIENT_SECRET_KEYVAULT_ID=','\"',parameters('servicePrincipalCertificateKeyVaultId'),'\"' ,' SPN_CLIENT_SECRET_KEYVAULT_SECRET_NAME=','\"',parameters('servicePrincipalCertificateKeyVaultSecretName'),'\"' ,' K8S_AZURE_CLOUDPROVIDER_VERSION=','\"',parameters('kubernetesAzureCloudProviderVersion'),'\"' ,' REGION_NAME=','\"',variables('location'),'\"' ,' SSH_PUBLICKEY=','\"',parameters('sshPublicKey'),'\"' ,' STORAGE_PROFILE=','\"',parameters('storageProfile'),'\"')]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[toLower(variables('storageAccountName'))]",
      "apiVersion": "2015-06-15",
      "location": "[variables('location')]",
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('networkSecurityGroupName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": [
          {
            "name": "ssh",
            "properties": {
              "description": "Allow SSH",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 200,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddressName')]",
      "location": "[variables('location')]",
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[variables('dnsNameForPublicIP')]"
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[variables('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
        "[variables('networkSecurityGroupName')]"
      ],
      "properties": {
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
        },
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2016-03-30",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('vmName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "osProfile": {
          "customData": "[base64(concat('#cloud-config\n\nwrite_files:\n- path: \"/opt/azure/containers/script.sh\"\n  permissions: \"0744\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    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'))]",
          "computerName": "[variables('vmName')]",
          "adminUsername": "[parameters('linuxAdminUsername')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": "true",
            "ssh": {
              "publicKeys": [
                {
                  "keyData": "[parameters('sshPublicKey')]",
                  "path": "[variables('sshKeyPath')]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[variables('imageSku')]",
            "version": "[variables('imageVersion')]"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob, variables('vmStorageAccountContainerName'),'/',variables('OSDiskName'),'.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": "true",
            "storageUri": "[reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('vmName'),'/LinuxCustomScriptExtension')]",
      "apiVersion": "2016-03-30",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "CustomScript",
        "typeHandlerVersion": "2.0",
        "autoUpgradeMinorVersion": "true",
        "protectedSettings": {
          "commandToExecute": "[concat(variables('scriptParameters'), ' PUBLICIP_FQDN=', '\"', reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn,'\"',' /bin/bash /opt/azure/containers/script.sh >> /var/log/azure/acsengine-kubernetes-dvm.log 2>&1')]"
        }
      }
    }
  ],
  "outputs": {
    "dvmPublicIpFqdn": {
      "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn]",
      "type": "string"
    }
  }
}