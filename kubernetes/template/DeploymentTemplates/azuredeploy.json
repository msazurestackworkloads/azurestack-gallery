{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "linuxAdminUsername": {
      "type": "string",
      "defaultValue": "azureuser",
      "metadata": {
        "description": "User name for the Linux Virtual Machines that are part of the Kubernetes cluster and DVM."
      }
    },
    "sshPublicKey": {
      "metadata": {
        "description": "SSH public key used for auth to all Linux machines created as part of the the Kubernetes cluster and DVM."
      },
      "type": "string"
    },
    "masterProfileDnsPrefix": {
      "type": "string",
      "metadata": {
        "description": "This must be a region-unique name e.g. k8s-12345. Try to chose it same as the resource group name as best practice."
      }
    },
    "agentPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes Node Pool Profile Count"
      },
      "type": "int"
    },
    "agentPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The VMSize of Kubernetes node VMs"
      },
      "type": "string"
    },
    "masterPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes Master Pool Profile Count"
      },
      "type": "int"
    },
    "masterPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The VMSize of Kubernetes master VMs"
      },
      "type": "string"
    },
    "storageProfile": {
      "defaultValue": "manageddisk",
      "metadata": {
        "description": "The Storage Profile"
      },
      "type": "string"
    },
    "servicePrincipalClientId": {
      "metadata": {
        "description": "The Service Principal application ID (used by the Kubernetes Azure cloud provider). More help here: https://github.com/Azure/aks-engine/blob/master/docs/topics/service-principals.md"
      },
      "type": "securestring"
    },
    "servicePrincipalClientSecret": {
      "metadata": {
        "description": "The Service Principal Client Secret."
      },
      "type": "securestring"
    },
    "identitySystem": {
      "defaultValue": "AzureAD",
      "allowedValues": [
        "AzureAD",
        "ADFS"
      ],
      "metadata": {
        "description": "The identity system of Azure Stack. The value could be AzureAD or ADFS"
      },
      "type": "string"
    },
    "kubernetesAzureCloudProviderVersion": {
      "type": "string",
      "defaultValue": "1.11",
      "metadata": {
        "description": "This is the version for the Kubernetes Azure cloud provider. We would use a custom Kubernetes build specifically for Azure Stack for each version."
      }
    }
  },
  "variables": {
    "resourceGroupName": "[resourceGroup().name]",
    "dnsNameForPublicIP": "[toLower(concat('vmd-dns', parameters('masterProfileDnsPrefix')))]",
    "location": "[resourceGroup().location]",
    "imagePublisher": "Canonical",
    "imageOffer": "UbuntuServer",
    "imageSku": "16.04-LTS",
    "imageVersion": "latest",
    "vmSize": "Standard_D2_v2",
    "OSDiskName": "osdisk",
    "nicName": "[concat('vmd-vnic', uniqueString(resourceGroup().id))]",
    "addressPrefix": "10.0.0.0/24",
    "subnetName": "mySubnet",
    "subnetPrefix": "10.0.0.0/24",
    "storageAccountName": "[concat('vmdsa', uniquestring(resourceGroup().id))]",
    "storageAccountType": "Standard_LRS",
    "publicIPAddressName": "[concat('vmd-publicIP', uniqueString(resourceGroup().id))]",
    "publicIPAddressType": "Static",
    "vmStorageAccountContainerName": "vhds",
    "vmName": "[concat('vmd-', uniqueString(resourceGroup().id))]",
    "virtualNetworkName": "[concat('vmd-vnet-', uniqueString(resourceGroup().id))]",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
    "subnetRef": "[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]",
    "networkSecurityGroupName": "[tolower(concat('vmd-nsg',uniquestring(resourceGroup().id)))]",
    "sshKeyPath": "[concat('/home/',parameters('linuxAdminUsername'),'/.ssh/authorized_keys')]",
    "tenantSubscriptionId": "[subscription().subscriptionId]",
    "scriptName": "script",
    "singleQuote": "'",
    "scriptParameters": "[concat('IDENTITY_SYSTEM=','\"',parameters('identitySystem'),'\"',' RESOURCE_GROUP_NAME=','\"',variables('resourceGroupName'),'\"',' PUBLICIP_DNS=','\"',variables('dnsNameForPublicIP'),'\"' ,' TENANT_ID=','\"',subscription().tenantId,'\"' ,' TENANT_SUBSCRIPTION_ID=','\"',variables('tenantSubscriptionId'),'\"',' ADMIN_USERNAME=','\"',parameters('linuxAdminUsername'),'\"',' MASTER_DNS_PREFIX=','\"',parameters('masterProfileDnsPrefix'),'\"' ,' AGENT_COUNT=','\"',parameters('agentPoolProfileCount'),'\"' ,' AGENT_SIZE=','\"',parameters('agentPoolProfileVMSize'),'\"' ,' MASTER_COUNT=','\"',parameters('masterPoolProfileCount'),'\"',' MASTER_SIZE=','\"',parameters('masterPoolProfileVMSize'),'\"' ,' SPN_CLIENT_ID=','\"',parameters('servicePrincipalClientId'),'\"' ,' SPN_CLIENT_SECRET=','\"',parameters('servicePrincipalClientSecret'),'\"' ,' K8S_AZURE_CLOUDPROVIDER_VERSION=','\"',parameters('kubernetesAzureCloudProviderVersion'),'\"' ,' REGION_NAME=','\"',variables('location'),'\"' ,' SSH_PUBLICKEY=','\"',parameters('sshPublicKey'),'\"' ,' STORAGE_PROFILE=','\"',parameters('storageProfile'),'\"')]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[toLower(variables('storageAccountName'))]",
      "apiVersion": "2015-06-15",
      "location": "[variables('location')]",
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('networkSecurityGroupName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": [
          {
            "name": "ssh",
            "properties": {
              "description": "Allow SSH",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 200,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddressName')]",
      "location": "[variables('location')]",
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[variables('dnsNameForPublicIP')]"
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[variables('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
        "[variables('networkSecurityGroupName')]"
      ],
      "properties": {
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
        },
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2016-03-30",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('vmName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "osProfile": {
          "customData": "[base64(concat('#cloud-config\n\nwrite_files:\n- path: \"/opt/azure/containers/script.sh\"\n  permissions: \"0744\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    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'))]",
          "computerName": "[variables('vmName')]",
          "adminUsername": "[parameters('linuxAdminUsername')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": "true",
            "ssh": {
              "publicKeys": [
                {
                  "keyData": "[parameters('sshPublicKey')]",
                  "path": "[variables('sshKeyPath')]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[variables('imageSku')]",
            "version": "[variables('imageVersion')]"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob, variables('vmStorageAccountContainerName'),'/',variables('OSDiskName'),'.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": "true",
            "storageUri": "[reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('vmName'),'/LinuxCustomScriptExtension')]",
      "apiVersion": "2016-03-30",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "CustomScript",
        "typeHandlerVersion": "2.0",
        "autoUpgradeMinorVersion": "true",
        "protectedSettings": {
          "commandToExecute": "[concat(variables('scriptParameters'), ' PUBLICIP_FQDN=', '\"', reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn,'\"',' /bin/bash /opt/azure/containers/script.sh >> /var/log/azure/deploy-script-dvm.log 2>&1')]"
        }
      }
    }
  ],
  "outputs": {
    "dvmPublicIpFqdn": {
      "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn]",
      "type": "string"
    }
  }
}
