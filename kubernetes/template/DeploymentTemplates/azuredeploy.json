{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "linuxAdminUsername": {
      "type": "string",
      "defaultValue": "azureuser",
      "metadata": {
        "description": "User name for the Linux virtual machines that are part of the Kubernetes cluster and DVM."
      }
    },
    "sshPublicKey": {
      "metadata": {
        "description": "SSH public key used for auth to all Linux machines created as part of the the Kubernetes cluster and DVM."
      },
      "type": "string"
    },
    "masterProfileDnsPrefix": {
      "type": "string",
      "metadata": {
        "description": "This must be a region-unique name e.g. k8s-12345. Try to chose it same as the resource group name as best practice."
      }
    },
    "agentPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes linux node pool profile count"
      },
      "type": "int"
    },
    "agentPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The virtual machine size of the Kubernetes linux agent nodes"
      },
      "type": "string"
    },
    "masterPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes master pool profile count"
      },
      "type": "int"
    },
    "masterPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The virtual machine size of the Kubernetes master nodes"
      },
      "type": "string"
    },
    "storageProfile": {
      "defaultValue": "manageddisk",
      "metadata": {
        "description": "The Storage Profile"
      },
      "type": "string"
    },
    "servicePrincipalClientId": {
      "metadata": {
        "description": "The Service Principal application ID (used by the Kubernetes Azure cloud provider). More help here: https://github.com/Azure/aks-engine/blob/master/docs/topics/service-principals.md"
      },
      "type": "securestring"
    },
    "servicePrincipalClientSecret": {
      "metadata": {
        "description": "The Service Principal Client Secret."
      },
      "type": "securestring"
    },
    "identitySystem": {
      "defaultValue": "AzureAD",
      "allowedValues": [
        "AzureAD",
        "ADFS"
      ],
      "metadata": {
        "description": "The identity system of Azure Stack. The value could be AzureAD or ADFS"
      },
      "type": "string"
    },
    "kubernetesAzureCloudProviderVersion": {
      "type": "string",
      "defaultValue": "1.14",
      "metadata": {
        "description": "This is the version for the Kubernetes Azure cloud provider. We would use a custom Kubernetes build specifically for Azure Stack for each version."
      }
    },
    "aksEngineBaseURL": {
      "type": "string",
      "defaultValue": "https://github.com/Azure/aks-engine/releases/download",
      "metadata": {
        "description": "The beginning of the URL for downloading the AKS Engine binary"
      }
    },
    "aksEngineReleaseVersion": {
      "type": "string",
      "defaultValue": "v0.43.0",
      "metadata": {
        "description": "The version of AKS Engine to download"
      }
    },
    "galleryRepository": {
      "type": "string",
      "defaultValue": "msazurestackworkloads/azurestack-gallery",
      "metadata": {
        "description": "Marketplace item repository"
      }
    },
    "galleryBranch": {
      "type": "string",
      "defaultValue": "master",
      "metadata": {
        "description": "Marketplace item branch"
      }
    },
    "clusterDefinitionFileName": {
      "type": "string",
      "defaultValue": "clusterDefinition.json",
      "metadata": {
        "description": "The name of the file containing the cluster definition"
      }
    },
    "kubernetesImageBase": {
      "type": "string",
      "defaultValue": "mcr.microsoft.com/k8s/azurestack/core/",
      "metadata": {
        "description": "The base for Kubernetes images"
      }
    },
    "customVnetName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Name of the custom vnet"
      }
    },
    "masterSubnetName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Name of the master subnet"
      }
    },
    "agentSubnetName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Name of the agent subnet"
      }
    },
    "firstConsecutiveStaticIP": {
      "type": "string",
      "defaultValue": "10.100.0.5",
      "metadata": {
        "description": "First Consective Static IP"
      }
    },
    "networkPlugin": {
      "defaultValue": "kubenet",
      "allowedValues": [
        "flannel",
        "azure",
        "kubenet"
      ],
      "metadata": {
        "description": "Network plugin which will deployed in Kubernetes cluster"
      },
      "type": "string"
    },
    "availabilityProfile": {
      "defaultValue": "AvailabilitySet",
      "allowedValues": [
        "AvailabilitySet",
        "VirtualMachineScaleSets"
      ],
      "metadata": {
        "description": "Availability profile that nodes in the Kubernetes cluster will be deployed with"
      },
      "type": "string"
    },
    "windowsAgentPoolProfileCount": {
      "defaultValue": "0",      
      "metadata": {
        "description": "Kubernetes Windows node pool profile count"
      },
      "type": "string"
    },
    "windowsAgentPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The virtual machine size of the Kubernetes Windows agent nodes"
      },
      "type": "string"
    },
    "windowsAdminUsername": {
      "defaultValue": "azureuser",
      "metadata": {
        "description": "User name for the Windows virtual machines that are part of the Kubernetes cluster."
      },
      "type": "string"
    },
    "windowsAdminPassword": {
      "defaultValue": "",
      "metadata": {
        "description": "Password for the Windows virtual machines that are part of the Kubernetes cluster."
      },
      "type": "securestring"
    },
    "customWindowsPackageURL": {
      "defaultValue": "",
      "metadata": {
        "description": "Custom Windows K8s zip location which will be used to deploy(kubelet, kubeproxy) on Windows node."
      },
      "type": "string"
    },
    "nodeDistro": {
      "defaultValue": "ubuntu",
      "allowedValues": [
        "ubuntu",
        "aks-ubuntu-16.04"
      ],
      "metadata": {
        "description": "Node distro to be used to deploy Kubernetes on Azure Stack."
      },
      "type": "string"
    }
  },
  "variables": {
    "resourceGroupName": "[resourceGroup().name]",
    "dnsNameForPublicIP": "[toLower(concat('vmd-dns', parameters('masterProfileDnsPrefix')))]",
    "location": "[resourceGroup().location]",
    "imagePublisher": "Canonical",
    "imageOffer": "UbuntuServer",
    "imageSku": "16.04-LTS",
    "imageVersion": "latest",
    "vmSize": "Standard_D2_v2",
    "OSDiskName": "osdisk",
    "nicName": "[concat('vmd-vnic', uniqueString(resourceGroup().id))]",
    "addressPrefix": "10.0.0.0/24",
    "subnetName": "mySubnet",
    "subnetPrefix": "10.0.0.0/24",
    "storageAccountName": "[concat('vmdsa', uniquestring(resourceGroup().id))]",
    "storageAccountType": "Standard_LRS",
    "publicIPAddressName": "[concat('vmd-publicIP', uniqueString(resourceGroup().id))]",
    "publicIPAddressType": "Static",
    "vmStorageAccountContainerName": "vhds",
    "vmName": "[concat('vmd-', uniqueString(resourceGroup().id))]",
    "virtualNetworkName": "[concat('vmd-vnet-', uniqueString(resourceGroup().id))]",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
    "subnetRef": "[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]",
    "networkSecurityGroupName": "[tolower(concat('vmd-nsg',uniquestring(resourceGroup().id)))]",
    "sshKeyPath": "[concat('/home/',parameters('linuxAdminUsername'),'/.ssh/authorized_keys')]",
    "tenantSubscriptionId": "[subscription().subscriptionId]",
    "scriptName": "script",
    "singleQuote": "'",
    "scriptParameters": "[concat('IDENTITY_SYSTEM=','\"',parameters('identitySystem'),'\"',' WINDOWS_CUSTOM_PACKAGE=','\"',parameters('customWindowsPackageURL'),'\"' ,' WINDOWS_AGENT_COUNT=','\"',parameters('windowsAgentPoolProfileCount'),'\"' ,' WINDOWS_AGENT_SIZE=','\"',parameters('windowsAgentPoolProfileVMSize'),'\"',' WINDOWS_ADMIN_USERNAME=','\"',parameters('windowsAdminUsername'),'\"',' WINDOWS_ADMIN_PASSWORD=','\"',parameters('windowsAdminPassword'),'\"',' NETWORK_PLUGIN=','\"',parameters('networkPlugin'),'\"',' AVAILABILITY_PROFILE=','\"',parameters('availabilityProfile'),'\"',' FIRST_CONSECUTIVE_STATIC_IP=','\"',parameters('firstConsecutiveStaticIP'),'\"',' AGENT_SUBNET_NAME=','\"',parameters('agentSubnetName'),'\"',' MASTER_SUBNET_NAME=','\"',parameters('masterSubnetName'),'\"',' CUSTOM_VNET_NAME=','\"',parameters('customVnetName'),'\"',' NODE_DISTRO=','\"',parameters('nodeDistro'),'\"',' RESOURCE_GROUP_NAME=','\"',variables('resourceGroupName'),'\"',' PUBLICIP_DNS=','\"',variables('dnsNameForPublicIP'),'\"' ,' TENANT_ID=','\"',subscription().tenantId,'\"' ,' TENANT_SUBSCRIPTION_ID=','\"',variables('tenantSubscriptionId'),'\"',' ADMIN_USERNAME=','\"',parameters('linuxAdminUsername'),'\"',' MASTER_DNS_PREFIX=','\"',parameters('masterProfileDnsPrefix'),'\"' ,' AGENT_COUNT=','\"',parameters('agentPoolProfileCount'),'\"' ,' AGENT_SIZE=','\"',parameters('agentPoolProfileVMSize'),'\"' ,' MASTER_COUNT=','\"',parameters('masterPoolProfileCount'),'\"',' MASTER_SIZE=','\"',parameters('masterPoolProfileVMSize'),'\"' ,' SPN_CLIENT_ID=','\"',parameters('servicePrincipalClientId'),'\"' ,' SPN_CLIENT_SECRET=','\"',parameters('servicePrincipalClientSecret'),'\"' ,' K8S_AZURE_CLOUDPROVIDER_VERSION=','\"',parameters('kubernetesAzureCloudProviderVersion'),'\"' ,' REGION_NAME=','\"',variables('location'),'\"' ,' SSH_PUBLICKEY=','\"',parameters('sshPublicKey'),'\"' ,' STORAGE_PROFILE=','\"',parameters('storageProfile'),'\"',' AKSE_BASE_URL=','\"',parameters('aksEngineBaseURL'), '\"', ' AKSE_RELEASE_VERSION=','\"',parameters('aksEngineReleaseVersion'),'\"',' GALLERY_REPO=','\"',parameters('galleryRepository'),'\"',' GALLERY_BRANCH=','\"',parameters('galleryBranch'),'\"',' DEFINITION_TEMPLATE_NAME=','\"',parameters('clusterDefinitionFileName'),'\"',' K8S_IMAGE_BASE=','\"',parameters('kubernetesImageBase'),'\"')]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[toLower(variables('storageAccountName'))]",
      "apiVersion": "2015-06-15",
      "location": "[variables('location')]",
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('networkSecurityGroupName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": [
          {
            "name": "ssh",
            "properties": {
              "description": "Allow SSH",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 200,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddressName')]",
      "location": "[variables('location')]",
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[variables('dnsNameForPublicIP')]"
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[variables('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
        "[variables('networkSecurityGroupName')]"
      ],
      "properties": {
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
        },
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2016-03-30",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('vmName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "osProfile": {
          "customData": "[base64(concat('#cloud-config\n\nwrite_files:\n- path: \"/opt/azure/containers/script.sh\"\n  permissions: \"0744\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    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'))]",
          "computerName": "[variables('vmName')]",
          "adminUsername": "[parameters('linuxAdminUsername')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": "true",
            "ssh": {
              "publicKeys": [
                {
                  "keyData": "[parameters('sshPublicKey')]",
                  "path": "[variables('sshKeyPath')]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[variables('imageSku')]",
            "version": "[variables('imageVersion')]"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob, variables('vmStorageAccountContainerName'),'/',variables('OSDiskName'),'.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": "true",
            "storageUri": "[reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('vmName'),'/LinuxCustomScriptExtension')]",
      "apiVersion": "2016-03-30",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "CustomScript",
        "typeHandlerVersion": "2.0",
        "autoUpgradeMinorVersion": "true",
        "protectedSettings": {
          "commandToExecute": "[concat(variables('scriptParameters'), ' PUBLICIP_FQDN=', '\"', reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn,'\"',' /bin/bash /opt/azure/containers/script.sh >> /var/log/azure/deploy-script-dvm.log 2>&1')]"
        }
      }
    }
  ],
  "outputs": {
    "dvmPublicIpFqdn": {
      "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn]",
      "type": "string"
    }
  }
}
