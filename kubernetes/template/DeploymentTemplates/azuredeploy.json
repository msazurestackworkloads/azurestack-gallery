{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "linuxAdminUsername": {
      "type": "string",
      "defaultValue": "azureuser",
      "metadata": {
        "description": "User name for the Linux Virtual Machines that are part of the Kubernetes cluster and DVM."
      }
    },
    "sshPublicKey": {
      "metadata": {
        "description": "SSH public key used for auth to all Linux machines created as part of the the Kubernetes cluster and DVM."
      },
      "type": "string"
    },
    "masterProfileDnsPrefix": {
      "type": "string",
      "metadata": {
        "description": "This must be a region-unique name e.g. k8s-12345. Try to chose it same as the resource group name as best practice."
      }
    },
    "agentPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes Node Pool Profile Count"
      },
      "type": "int"
    },
    "agentPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The VMSize of Kubernetes node VMs"
      },
      "type": "string"
    },
    "masterPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes Master Pool Profile Count"
      },
      "type": "int"
    },
    "masterPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The VMSize of Kubernetes master VMs"
      },
      "type": "string"
    },
    "storageProfile": {
      "defaultValue": "blobdisk",
      "metadata": {
        "description": "The Storage Profile"
      },
      "type": "string"
    },
    "servicePrincipalClientId": {
      "metadata": {
        "description": "The Service Principal application ID (used by the Kubernetes Azure cloud provider). More help here: https://github.com/Azure/acs-engine/blob/master/docs/serviceprincipal.md"
      },
      "type": "securestring"
    },
    "servicePrincipalClientSecret": {
      "metadata": {
        "description": "The Service Principal Client Secret."
      },
      "type": "securestring"
    },
    "servicePrincipalCertificateKeyVaultId": {
      "defaultValue": "servicePrincipalCertificateKeyVaultId",
      "metadata": {
        "description": "the service Principal Certificate KeyVault Id"
      },
      "type": "string"
    },
    "servicePrincipalCertificateKeyVaultSecretName": {
      "defaultValue": "servicePrincipalCertificateKeyVaultSecretName",
      "metadata": {
        "description": "The service Principal Certificate KeyVault SecretName"
      },
      "type": "string"
    },
    "identitySystem": {
      "defaultValue": "AzureAD",
      "allowedValues": [
        "AzureAD",
        "ADFS"
      ],
      "metadata": {
        "description": "The identity system of azure stack. The value could be AzureAD or ADFS"
      },
      "type": "string"
    },
    "kubernetesAzureCloudProviderVersion": {
      "type": "string",
      "defaultValue": "1.11",
      "metadata": {
        "description": "This is the version for the kubernetes Azure cloud provider. We would use a custom kubernetes build specifically for AzureStack for each version."
      }
    }
  },
  "variables": {
    "resourceGroupName": "[resourceGroup().name]",
    "dnsNameForPublicIP": "[toLower(concat('vmd-dns', parameters('masterProfileDnsPrefix')))]",
    "location": "[resourceGroup().location]",
    "imagePublisher": "Canonical",
    "imageOffer": "UbuntuServer",
    "imageSku": "16.04-LTS",
    "imageVersion": "latest",
    "vmSize": "Standard_D2_v2",
    "OSDiskName": "osdisk",
    "nicName": "[concat('vmd-vnic', uniqueString(resourceGroup().id))]",
    "addressPrefix": "10.0.0.0/24",
    "subnetName": "mySubnet",
    "subnetPrefix": "10.0.0.0/24",
    "storageAccountName": "[concat('vmdsa', uniquestring(resourceGroup().id))]",
    "storageAccountType": "Standard_LRS",
    "publicIPAddressName": "[concat('vmd-publicIP', uniqueString(resourceGroup().id))]",
    "publicIPAddressType": "Static",
    "vmStorageAccountContainerName": "vhds",
    "vmName": "[concat('vmd-', uniqueString(resourceGroup().id))]",
    "virtualNetworkName": "[concat('vmd-vnet-', uniqueString(resourceGroup().id))]",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
    "subnetRef": "[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]",
    "networkSecurityGroupName": "[tolower(concat('vmd-nsg',uniquestring(resourceGroup().id)))]",
    "sshKeyPath": "[concat('/home/',parameters('linuxAdminUsername'),'/.ssh/authorized_keys')]",
    "tenantSubscriptionId": "[subscription().subscriptionId]",
    "scriptName": "script",
    "singleQuote": "'",
    "scriptParameters": "[concat('IDENTITY_SYSTEM=','\"',parameters('identitySystem'),'\"',' RESOURCE_GROUP_NAME=','\"',variables('resourceGroupName'),'\"',' PUBLICIP_DNS=','\"',variables('dnsNameForPublicIP'),'\"' ,' TENANT_ID=','\"',subscription().tenantId,'\"' ,' TENANT_SUBSCRIPTION_ID=','\"',variables('tenantSubscriptionId'),'\"',' ADMIN_USERNAME=','\"',parameters('linuxAdminUsername'),'\"',' MASTER_DNS_PREFIX=','\"',parameters('masterProfileDnsPrefix'),'\"' ,' AGENT_COUNT=','\"',parameters('agentPoolProfileCount'),'\"' ,' AGENT_SIZE=','\"',parameters('agentPoolProfileVMSize'),'\"' ,' MASTER_COUNT=','\"',parameters('masterPoolProfileCount'),'\"',' MASTER_SIZE=','\"',parameters('masterPoolProfileVMSize'),'\"' ,' SPN_CLIENT_ID=','\"',parameters('servicePrincipalClientId'),'\"' ,' SPN_CLIENT_SECRET=','\"',parameters('servicePrincipalClientSecret'),'\"' ,' SPN_CLIENT_SECRET_KEYVAULT_ID=','\"',parameters('servicePrincipalCertificateKeyVaultId'),'\"' ,' SPN_CLIENT_SECRET_KEYVAULT_SECRET_NAME=','\"',parameters('servicePrincipalCertificateKeyVaultSecretName'),'\"' ,' K8S_AZURE_CLOUDPROVIDER_VERSION=','\"',parameters('kubernetesAzureCloudProviderVersion'),'\"' ,' REGION_NAME=','\"',variables('location'),'\"' ,' SSH_PUBLICKEY=','\"',parameters('sshPublicKey'),'\"' ,' STORAGE_PROFILE=','\"',parameters('storageProfile'),'\"')]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[toLower(variables('storageAccountName'))]",
      "apiVersion": "2015-06-15",
      "location": "[variables('location')]",
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('networkSecurityGroupName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": [
          {
            "name": "ssh",
            "properties": {
              "description": "Allow SSH",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 200,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddressName')]",
      "location": "[variables('location')]",
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[variables('dnsNameForPublicIP')]"
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[variables('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
        "[variables('networkSecurityGroupName')]"
      ],
      "properties": {
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
        },
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2016-03-30",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('vmName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "osProfile": {
          "customData": "[base64(concat('#cloud-config\n\nwrite_files:\n- path: \"/opt/azure/containers/script.sh\"\n  permissions: \"0744\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    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'))]",
          "computerName": "[variables('vmName')]",
          "adminUsername": "[parameters('linuxAdminUsername')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": "true",
            "ssh": {
              "publicKeys": [
                {
                  "keyData": "[parameters('sshPublicKey')]",
                  "path": "[variables('sshKeyPath')]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[variables('imageSku')]",
            "version": "[variables('imageVersion')]"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob, variables('vmStorageAccountContainerName'),'/',variables('OSDiskName'),'.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": "true",
            "storageUri": "[reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('vmName'),'/LinuxCustomScriptExtension')]",
      "apiVersion": "2016-03-30",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "CustomScript",
        "typeHandlerVersion": "2.0",
        "autoUpgradeMinorVersion": "true",
        "protectedSettings": {
          "commandToExecute": "[concat(variables('scriptParameters'), ' PUBLICIP_FQDN=', '\"', reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn,'\"',' /bin/bash /opt/azure/containers/script.sh >> /var/log/azure/acsengine-kubernetes-dvm.log 2>&1')]"
        }
      }
    }
  ],
  "outputs": {
    "dvmPublicIpFqdn": {
      "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn]",
      "type": "string"
    }
  }
}