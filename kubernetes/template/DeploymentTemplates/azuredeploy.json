{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "linuxAdminUsername": {
      "type": "string",
      "defaultValue": "azureuser",
      "metadata": {
        "description": "User name for the Linux virtual machines that are part of the Kubernetes cluster and DVM."
      }
    },
    "sshPublicKey": {
      "metadata": {
        "description": "SSH public key used for auth to all Linux machines created as part of the the Kubernetes cluster and DVM."
      },
      "type": "string"
    },
    "masterProfileDnsPrefix": {
      "type": "string",
      "metadata": {
        "description": "This must be a region-unique name e.g. k8s-12345. Try to chose it same as the resource group name as best practice."
      }
    },
    "agentPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes linux node pool profile count"
      },
      "type": "int"
    },
    "agentPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The virtual machine size of the Kubernetes linux agent nodes"
      },
      "type": "string"
    },
    "masterPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes master pool profile count"
      },
      "type": "int"
    },
    "masterPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The virtual machine size of the Kubernetes master nodes"
      },
      "type": "string"
    },
    "storageProfile": {
      "defaultValue": "manageddisk",
      "metadata": {
        "description": "The Storage Profile"
      },
      "type": "string"
    },
    "servicePrincipalClientId": {
      "metadata": {
        "description": "The Service Principal application ID (used by the Kubernetes Azure cloud provider). More help here: https://github.com/Azure/aks-engine/blob/master/docs/topics/service-principals.md"
      },
      "type": "securestring"
    },
    "servicePrincipalClientSecret": {
      "metadata": {
        "description": "The Service Principal Client Secret."
      },
      "type": "securestring"
    },
    "identitySystem": {
      "defaultValue": "AzureAD",
      "allowedValues": [
        "AzureAD",
        "ADFS"
      ],
      "metadata": {
        "description": "The identity system of Azure Stack. The value could be AzureAD or ADFS"
      },
      "type": "string"
    },
    "kubernetesAzureCloudProviderVersion": {
      "type": "string",
      "defaultValue": "1.12",
      "metadata": {
        "description": "This is the version for the Kubernetes Azure cloud provider. We would use a custom Kubernetes build specifically for Azure Stack for each version."
      }
    },
    "aksEngineBaseURL": {
      "type": "string",
      "defaultValue": "https://github.com/Azure/aks-engine/releases/download",
      "metadata": {
        "description": "The beginning of the URL for downloading the AKS Engine binary"
      }
    },
    "aksEngineReleaseVersion": {
      "type": "string",
      "defaultValue": "v0.39.1",
      "metadata": {
        "description": "The version of AKS Engine to download"
      }
    },
    "galleryRepository": {
      "type": "string",
      "defaultValue": "msazurestackworkloads/azurestack-gallery",
      "metadata": {
        "description": "Marketplace item repository"
      }
    },
    "galleryBranch": {
      "type": "string",
      "defaultValue": "master",
      "metadata": {
        "description": "Marketplace item branch"
      }
    },
    "clusterDefinitionFileName": {
      "type": "string",
      "defaultValue": "clusterDefinition.json",
      "metadata": {
        "description": "The name of the file containing the cluster definition"
      }
    },
    "kubernetesImageBase": {
      "type": "string",
      "defaultValue": "mcr.microsoft.com/k8s/azurestack/core/",
      "metadata": {
        "description": "The base for Kubernetes images"
      }
    },
    "customVnetName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Name of the custom vnet"
      }
    },
    "masterSubnetName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Name of the master subnet"
      }
    },
    "agentSubnetName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Name of the agent subnet"
      }
    },
    "firstConsecutiveStaticIP": {
      "type": "string",
      "defaultValue": "10.100.0.5",
      "metadata": {
        "description": "First Consective Static IP"
      }
    },
    "networkPlugin": {
      "defaultValue": "flannel",
      "allowedValues": [
        "flannel",
        "azure",
        "kubenet"
      ],
      "metadata": {
        "description": "Network plugin which will deployed in Kubernetes cluster"
      },
      "type": "string"
    },
    "availabilityProfile": {
      "defaultValue": "AvailabilitySet",
      "allowedValues": [
        "AvailabilitySet",
        "VirtualMachineScaleSets"
      ],
      "metadata": {
        "description": "Availability profile that nodes in the Kubernetes cluster will be deployed with"
      },
      "type": "string"
    },
    "windowsAgentPoolProfileCount": {
      "defaultValue": "0",      
      "metadata": {
        "description": "Kubernetes Windows node pool profile count"
      },
      "type": "string"
    },
    "windowsAgentPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The virtual machine size of the Kubernetes Windows agent nodes"
      },
      "type": "string"
    },
    "windowsAdminUsername": {
      "defaultValue": "azureuser",
      "metadata": {
        "description": "User name for the Windows virtual machines that are part of the Kubernetes cluster."
      },
      "type": "string"
    },
    "windowsAdminPassword": {
      "defaultValue": "",
      "metadata": {
        "description": "Password for the Windows virtual machines that are part of the Kubernetes cluster."
      },
      "type": "securestring"
    },
    "windowsPackageBaseURL": {
      "defaultValue": "",
      "metadata": {
        "description": "URL path from where Windows binaries will be downloaded."
      },
      "type": "string"
    },
    "windowsPackageName": {
      "defaultValue": "",
      "metadata": {
        "description": "Name of the Windows package which will be installed."
      },
      "type": "string"
    },
    "nodeDistro": {
      "defaultValue": "ubuntu",
      "allowedValues": [
        "ubuntu",
        "aks-ubuntu-16.04"
      ],
      "metadata": {
        "description": "Node distro to be used to deploy Kubernetes on Azure Stack."
      },
      "type": "string"
    }
  },
  "variables": {
    "resourceGroupName": "[resourceGroup().name]",
    "dnsNameForPublicIP": "[toLower(concat('vmd-dns', parameters('masterProfileDnsPrefix')))]",
    "location": "[resourceGroup().location]",
    "imagePublisher": "Canonical",
    "imageOffer": "UbuntuServer",
    "imageSku": "16.04-LTS",
    "imageVersion": "latest",
    "vmSize": "Standard_D2_v2",
    "OSDiskName": "osdisk",
    "nicName": "[concat('vmd-vnic', uniqueString(resourceGroup().id))]",
    "addressPrefix": "10.0.0.0/24",
    "subnetName": "mySubnet",
    "subnetPrefix": "10.0.0.0/24",
    "storageAccountName": "[concat('vmdsa', uniquestring(resourceGroup().id))]",
    "storageAccountType": "Standard_LRS",
    "publicIPAddressName": "[concat('vmd-publicIP', uniqueString(resourceGroup().id))]",
    "publicIPAddressType": "Static",
    "vmStorageAccountContainerName": "vhds",
    "vmName": "[concat('vmd-', uniqueString(resourceGroup().id))]",
    "virtualNetworkName": "[concat('vmd-vnet-', uniqueString(resourceGroup().id))]",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
    "subnetRef": "[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]",
    "networkSecurityGroupName": "[tolower(concat('vmd-nsg',uniquestring(resourceGroup().id)))]",
    "sshKeyPath": "[concat('/home/',parameters('linuxAdminUsername'),'/.ssh/authorized_keys')]",
    "tenantSubscriptionId": "[subscription().subscriptionId]",
    "scriptName": "script",
    "singleQuote": "'",
    "scriptParameters": "[concat('IDENTITY_SYSTEM=','\"',parameters('identitySystem'),'\"',' WINDOWS_PACKAGE_NAME=','\"',parameters('windowsPackageName'),'\"' ,' WINDOWS_PACKAGE_URL=','\"',parameters('windowsPackageBaseURL'),'\"' ,' WINDOWS_AGENT_COUNT=','\"',parameters('windowsAgentPoolProfileCount'),'\"' ,' WINDOWS_AGENT_SIZE=','\"',parameters('windowsAgentPoolProfileVMSize'),'\"',' WINDOWS_ADMIN_USERNAME=','\"',parameters('windowsAdminUsername'),'\"',' WINDOWS_ADMIN_PASSWORD=','\"',parameters('windowsAdminPassword'),'\"',' NETWORK_PLUGIN=','\"',parameters('networkPlugin'),'\"',' AVAILABILITY_PROFILE=','\"',parameters('availabilityProfile'),'\"',' FIRST_CONSECUTIVE_STATIC_IP=','\"',parameters('firstConsecutiveStaticIP'),'\"',' AGENT_SUBNET_NAME=','\"',parameters('agentSubnetName'),'\"',' MASTER_SUBNET_NAME=','\"',parameters('masterSubnetName'),'\"',' CUSTOM_VNET_NAME=','\"',parameters('customVnetName'),'\"',' NODE_DISTRO=','\"',parameters('nodeDistro'),'\"',' RESOURCE_GROUP_NAME=','\"',variables('resourceGroupName'),'\"',' PUBLICIP_DNS=','\"',variables('dnsNameForPublicIP'),'\"' ,' TENANT_ID=','\"',subscription().tenantId,'\"' ,' TENANT_SUBSCRIPTION_ID=','\"',variables('tenantSubscriptionId'),'\"',' ADMIN_USERNAME=','\"',parameters('linuxAdminUsername'),'\"',' MASTER_DNS_PREFIX=','\"',parameters('masterProfileDnsPrefix'),'\"' ,' AGENT_COUNT=','\"',parameters('agentPoolProfileCount'),'\"' ,' AGENT_SIZE=','\"',parameters('agentPoolProfileVMSize'),'\"' ,' MASTER_COUNT=','\"',parameters('masterPoolProfileCount'),'\"',' MASTER_SIZE=','\"',parameters('masterPoolProfileVMSize'),'\"' ,' SPN_CLIENT_ID=','\"',parameters('servicePrincipalClientId'),'\"' ,' SPN_CLIENT_SECRET=','\"',parameters('servicePrincipalClientSecret'),'\"' ,' K8S_AZURE_CLOUDPROVIDER_VERSION=','\"',parameters('kubernetesAzureCloudProviderVersion'),'\"' ,' REGION_NAME=','\"',variables('location'),'\"' ,' SSH_PUBLICKEY=','\"',parameters('sshPublicKey'),'\"' ,' STORAGE_PROFILE=','\"',parameters('storageProfile'),'\"',' AKSE_BASE_URL=','\"',parameters('aksEngineBaseURL'), '\"', ' AKSE_RELEASE_VERSION=','\"',parameters('aksEngineReleaseVersion'),'\"',' GALLERY_REPO=','\"',parameters('galleryRepository'),'\"',' GALLERY_BRANCH=','\"',parameters('galleryBranch'),'\"',' DEFINITION_TEMPLATE_NAME=','\"',parameters('clusterDefinitionFileName'),'\"',' K8S_IMAGE_BASE=','\"',parameters('kubernetesImageBase'),'\"')]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[toLower(variables('storageAccountName'))]",
      "apiVersion": "2015-06-15",
      "location": "[variables('location')]",
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('networkSecurityGroupName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": [
          {
            "name": "ssh",
            "properties": {
              "description": "Allow SSH",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 200,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddressName')]",
      "location": "[variables('location')]",
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[variables('dnsNameForPublicIP')]"
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[variables('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
        "[variables('networkSecurityGroupName')]"
      ],
      "properties": {
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
        },
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2016-03-30",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('vmName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "osProfile": {
          "customData": "[base64(concat('#cloud-config\n\nwrite_files:\n- path: \"/opt/azure/containers/script.sh\"\n  permissions: \"0744\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    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'))]",
          "computerName": "[variables('vmName')]",
          "adminUsername": "[parameters('linuxAdminUsername')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": "true",
            "ssh": {
              "publicKeys": [
                {
                  "keyData": "[parameters('sshPublicKey')]",
                  "path": "[variables('sshKeyPath')]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[variables('imageSku')]",
            "version": "[variables('imageVersion')]"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob, variables('vmStorageAccountContainerName'),'/',variables('OSDiskName'),'.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": "true",
            "storageUri": "[reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('vmName'),'/LinuxCustomScriptExtension')]",
      "apiVersion": "2016-03-30",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "CustomScript",
        "typeHandlerVersion": "2.0",
        "autoUpgradeMinorVersion": "true",
        "protectedSettings": {
          "commandToExecute": "[concat(variables('scriptParameters'), ' PUBLICIP_FQDN=', '\"', reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn,'\"',' /bin/bash /opt/azure/containers/script.sh >> /var/log/azure/deploy-script-dvm.log 2>&1')]"
        }
      }
    }
  ],
  "outputs": {
    "dvmPublicIpFqdn": {
      "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn]",
      "type": "string"
    }
  }
}
