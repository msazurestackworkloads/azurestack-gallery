{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "linuxAdminUsername": {
      "type": "string",
      "defaultValue": "azureuser",
      "metadata": {
        "description": "User name for the Linux virtual machines that are part of the Kubernetes cluster and DVM."
      }
    },
    "sshPublicKey": {
      "metadata": {
        "description": "SSH public key used for auth to all Linux machines created as part of the the Kubernetes cluster and DVM."
      },
      "type": "string"
    },
    "masterProfileDnsPrefix": {
      "type": "string",
      "metadata": {
        "description": "This must be a region-unique name e.g. k8s-12345. Try to chose it same as the resource group name as best practice."
      }
    },
    "agentPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes linux node pool profile count"
      },
      "type": "int"
    },
    "agentPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The virtual machine size of the Kubernetes linux agent nodes"
      },
      "type": "string"
    },
    "masterPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes master pool profile count"
      },
      "type": "int"
    },
    "masterPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The virtual machine size of the Kubernetes master nodes"
      },
      "type": "string"
    },
    "storageProfile": {
      "defaultValue": "manageddisk",
      "metadata": {
        "description": "The Storage Profile"
      },
      "type": "string"
    },
    "servicePrincipalClientId": {
      "metadata": {
        "description": "The Service Principal application ID (used by the Kubernetes Azure cloud provider). More help here: https://github.com/Azure/aks-engine/blob/master/docs/topics/service-principals.md"
      },
      "type": "securestring"
    },
    "servicePrincipalClientSecret": {
      "metadata": {
        "description": "The Service Principal Client Secret."
      },
      "type": "securestring"
    },
    "identitySystem": {
      "defaultValue": "AzureAD",
      "allowedValues": [
        "AzureAD",
        "ADFS"
      ],
      "metadata": {
        "description": "The identity system of Azure Stack. The value could be AzureAD or ADFS"
      },
      "type": "string"
    },
    "kubernetesAzureCloudProviderVersion": {
      "type": "string",
      "defaultValue": "1.14.7",
      "metadata": {
        "description": "This is the version for the Kubernetes Azure cloud provider. We would use a custom Kubernetes build specifically for Azure Stack for each version."
      }
    },
    "aksEngineBaseURL": {
      "type": "string",
      "defaultValue": "https://github.com/Azure/aks-engine/releases/download",
      "metadata": {
        "description": "The beginning of the URL for downloading the AKS Engine binary"
      }
    },
    "aksEngineReleaseVersion": {
      "type": "string",
      "defaultValue": "v0.48.0",
      "metadata": {
        "description": "The version of AKS Engine to download"
      }
    },
    "galleryRepository": {
      "type": "string",
      "defaultValue": "msazurestackworkloads/azurestack-gallery",
      "metadata": {
        "description": "Marketplace item repository"
      }
    },
    "galleryBranch": {
      "type": "string",
      "defaultValue": "master",
      "metadata": {
        "description": "Marketplace item branch"
      }
    },
    "clusterDefinitionFileName": {
      "type": "string",
      "defaultValue": "clusterDefinition.json",
      "metadata": {
        "description": "The name of the file containing the cluster definition"
      }
    },
    "customVnetName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Name of the custom vnet"
      }
    },
    "masterSubnetName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Name of the master subnet"
      }
    },
    "agentSubnetName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Name of the agent subnet"
      }
    },
    "firstConsecutiveStaticIP": {
      "type": "string",
      "defaultValue": "10.100.0.5",
      "metadata": {
        "description": "First Consective Static IP"
      }
    },
    "networkPlugin": {
      "defaultValue": "kubenet",
      "allowedValues": [
        "flannel",
        "azure",
        "kubenet"
      ],
      "metadata": {
        "description": "Network plugin which will deployed in Kubernetes cluster"
      },
      "type": "string"
    },
    "networkPolicy": {
      "defaultValue": "",
      "allowedValues": [
        "",
        "azure"
      ],
      "metadata": {
        "description": "Network policy which will deployed in Kubernetes cluster"
      },
      "type": "string"
    },
    "availabilityProfile": {
      "defaultValue": "AvailabilitySet",
      "allowedValues": [
        "AvailabilitySet",
        "VirtualMachineScaleSets"
      ],
      "metadata": {
        "description": "Availability profile that nodes in the Kubernetes cluster will be deployed with"
      },
      "type": "string"
    },
    "windowsAgentPoolProfileCount": {
      "defaultValue": "0",
      "metadata": {
        "description": "Kubernetes Windows node pool profile count"
      },
      "type": "string"
    },
    "windowsAgentPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The virtual machine size of the Kubernetes Windows agent nodes"
      },
      "type": "string"
    },
    "windowsAdminUsername": {
      "defaultValue": "azureuser",
      "metadata": {
        "description": "User name for the Windows virtual machines that are part of the Kubernetes cluster."
      },
      "type": "string"
    },
    "windowsAdminPassword": {
      "defaultValue": "",
      "metadata": {
        "description": "Password for the Windows virtual machines that are part of the Kubernetes cluster."
      },
      "type": "securestring"
    },
    "customWindowsPackageURL": {
      "defaultValue": "",
      "metadata": {
        "description": "Custom Windows K8s zip location which will be used to deploy(kubelet, kubeproxy) on Windows node."
      },
      "type": "string"
    },
    "nodeDistro": {
      "defaultValue": "aks-ubuntu-16.04",
      "allowedValues": [
        "ubuntu",
        "aks-ubuntu-16.04"
      ],
      "metadata": {
        "description": "Node distro to be used to deploy Kubernetes on Azure Stack."
      },
      "type": "string"
    },
    "enableTillerAddOn": {
      "type": "string",
      "defaultValue": "false",
      "metadata": {
        "description": "Flag to enable Tiller addon"
      }
    },
    "containerRuntime": {
      "type": "string",
      "defaultValue": "docker",
      "allowedValues": [
        "docker",
        "containerd"
      ],
      "metadata": {
        "description": "Container runtime to deploy on each cluster node."
      }
    },
    "localAKSeBinaryURL": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Azure Stack blob url to download AKS engine from a blob store in disconnected environment "
      }
    },
    "dvmImagePublisher": {
      "type": "string",
      "defaultValue": "microsoft-aks",
      "metadata": {
        "description": "Azure VM image publisher to be used for the DVM"
      }
    },
    "dvmImageOffer": {
      "type": "string",
      "defaultValue": "aks",
      "metadata": {
        "description": "Azure VM image offer to be used for the DVM"
      }
    },
    "dvmImageSku": {
      "type": "string",
      "defaultValue": "aks-engine-ubuntu-1604-202003",
      "metadata": {
        "description": "Azure VM image sku to be used for the DVM"
      }
    },
    "dvmImageVersion": {
      "type": "string",
      "defaultValue": "2020.03.19",
      "metadata": {
        "description": "Azure VM image version to be used for the DVM"
      }
    }
  },
  "variables": {
    "resourceGroupName": "[resourceGroup().name]",
    "dnsNameForPublicIP": "[toLower(concat('vmd-dns', parameters('masterProfileDnsPrefix')))]",
    "location": "[resourceGroup().location]",
    "vmSize": "Standard_D2_v2",
    "OSDiskName": "osdisk",
    "nicName": "[concat('vmd-vnic', uniqueString(resourceGroup().id))]",
    "addressPrefix": "10.0.0.0/24",
    "subnetName": "mySubnet",
    "subnetPrefix": "10.0.0.0/24",
    "storageAccountName": "[concat('vmdsa', uniquestring(resourceGroup().id))]",
    "storageAccountType": "Standard_LRS",
    "publicIPAddressName": "[concat('vmd-publicIP', uniqueString(resourceGroup().id))]",
    "publicIPAddressType": "Static",
    "vmStorageAccountContainerName": "vhds",
    "vmName": "[concat('vmd-', uniqueString(resourceGroup().id))]",
    "virtualNetworkName": "[concat('vmd-vnet-', uniqueString(resourceGroup().id))]",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
    "subnetRef": "[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]",
    "networkSecurityGroupName": "[tolower(concat('vmd-nsg',uniquestring(resourceGroup().id)))]",
    "sshKeyPath": "[concat('/home/',parameters('linuxAdminUsername'),'/.ssh/authorized_keys')]",
    "tenantSubscriptionId": "[subscription().subscriptionId]",
    "scriptName": "script",
    "singleQuote": "'",
    "scriptParameters": "[concat('IDENTITY_SYSTEM=','\"',parameters('identitySystem'),'\"',' ENABLE_TILLER=','\"',parameters('enableTillerAddOn'),'\"' ,' CONTAINER_RUNTIME=','\"',parameters('containerRuntime'),'\"' ,' WINDOWS_CUSTOM_PACKAGE=','\"',parameters('customWindowsPackageURL'),'\"' ,' WINDOWS_AGENT_COUNT=','\"',parameters('windowsAgentPoolProfileCount'),'\"' ,' WINDOWS_AGENT_SIZE=','\"',parameters('windowsAgentPoolProfileVMSize'),'\"',' WINDOWS_ADMIN_USERNAME=','\"',parameters('windowsAdminUsername'),'\"',' WINDOWS_ADMIN_PASSWORD=','\"',parameters('windowsAdminPassword'),'\"',' NETWORK_PLUGIN=','\"',parameters('networkPlugin'),'\"',' NETWORK_POLICY=','\"',parameters('networkPolicy'),'\"',' AVAILABILITY_PROFILE=','\"',parameters('availabilityProfile'),'\"',' FIRST_CONSECUTIVE_STATIC_IP=','\"',parameters('firstConsecutiveStaticIP'),'\"',' AGENT_SUBNET_NAME=','\"',parameters('agentSubnetName'),'\"',' MASTER_SUBNET_NAME=','\"',parameters('masterSubnetName'),'\"',' CUSTOM_VNET_NAME=','\"',parameters('customVnetName'),'\"',' NODE_DISTRO=','\"',parameters('nodeDistro'),'\"',' RESOURCE_GROUP_NAME=','\"',variables('resourceGroupName'),'\"',' PUBLICIP_DNS=','\"',variables('dnsNameForPublicIP'),'\"' ,' TENANT_ID=','\"',subscription().tenantId,'\"' ,' TENANT_SUBSCRIPTION_ID=','\"',variables('tenantSubscriptionId'),'\"',' ADMIN_USERNAME=','\"',parameters('linuxAdminUsername'),'\"',' MASTER_DNS_PREFIX=','\"',parameters('masterProfileDnsPrefix'),'\"' ,' AGENT_COUNT=','\"',parameters('agentPoolProfileCount'),'\"' ,' AGENT_SIZE=','\"',parameters('agentPoolProfileVMSize'),'\"' ,' MASTER_COUNT=','\"',parameters('masterPoolProfileCount'),'\"',' MASTER_SIZE=','\"',parameters('masterPoolProfileVMSize'),'\"' ,' SPN_CLIENT_ID=','\"',parameters('servicePrincipalClientId'),'\"' ,' SPN_CLIENT_SECRET=','\"',parameters('servicePrincipalClientSecret'),'\"' ,' K8S_AZURE_CLOUDPROVIDER_VERSION=','\"',parameters('kubernetesAzureCloudProviderVersion'),'\"' ,' REGION_NAME=','\"',variables('location'),'\"' ,' SSH_PUBLICKEY=','\"',parameters('sshPublicKey'),'\"' ,' STORAGE_PROFILE=','\"',parameters('storageProfile'),'\"',' AKSE_BASE_URL=','\"',parameters('aksEngineBaseURL'), '\"', ' AKSE_RELEASE_VERSION=','\"',parameters('aksEngineReleaseVersion'),'\"',' GALLERY_REPO=','\"',parameters('galleryRepository'),'\"',' GALLERY_BRANCH=','\"',parameters('galleryBranch'),'\"',' DEFINITION_TEMPLATE_NAME=','\"',parameters('clusterDefinitionFileName'),'\"',' DISCONNECTED_AKS_ENGINE_URL=','\"',parameters('localAKSeBinaryURL'),'\"')]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[toLower(variables('storageAccountName'))]",
      "apiVersion": "2015-06-15",
      "location": "[variables('location')]",
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('networkSecurityGroupName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": [
          {
            "name": "ssh",
            "properties": {
              "description": "Allow SSH",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 200,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddressName')]",
      "location": "[variables('location')]",
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[variables('dnsNameForPublicIP')]"
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[variables('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
        "[variables('networkSecurityGroupName')]"
      ],
      "properties": {
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
        },
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2016-03-30",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('vmName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "osProfile": {
          "customData": "[base64(concat('#cloud-config\n\nwrite_files:\n- path: \"/opt/azure/containers/script.sh\"\n  permissions: \"0744\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    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'))]",
          "computerName": "[variables('vmName')]",
          "adminUsername": "[parameters('linuxAdminUsername')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": "true",
            "ssh": {
              "publicKeys": [
                {
                  "keyData": "[parameters('sshPublicKey')]",
                  "path": "[variables('sshKeyPath')]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[parameters('dvmImagePublisher')]",
            "offer": "[parameters('dvmImageOffer')]",
            "sku": "[parameters('dvmImageSku')]",
            "version": "[parameters('dvmImageVersion')]"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob, variables('vmStorageAccountContainerName'),'/',variables('OSDiskName'),'.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": "true",
            "storageUri": "[reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('vmName'),'/LinuxCustomScriptExtension')]",
      "apiVersion": "2016-03-30",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "CustomScript",
        "typeHandlerVersion": "2.0",
        "autoUpgradeMinorVersion": "true",
        "protectedSettings": {
          "commandToExecute": "[concat(variables('scriptParameters'), ' PUBLICIP_FQDN=', '\"', reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn,'\"',' /bin/bash /opt/azure/containers/script.sh >> /var/log/azure/deploy-script-dvm.log 2>&1')]"
        }
      }
    }
  ],
  "outputs": {
    "dvmPublicIpFqdn": {
      "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn]",
      "type": "string"
    }
  }
}
