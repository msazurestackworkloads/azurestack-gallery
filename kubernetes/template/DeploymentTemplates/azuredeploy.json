{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "linuxAdminUsername": {
      "type": "string",
      "defaultValue": "azureuser",
      "metadata": {
        "description": "User name for the Linux Virtual Machines that are part of the Kubernetes cluster and DVM."
      }
    },
    "sshPublicKey": {
      "metadata": {
        "description": "SSH public key used for auth to all Linux machines created as part of the the Kubernetes cluster and DVM."
      },
      "type": "string"
    },
    "masterProfileDnsPrefix": {
      "type": "string",
      "metadata": {
        "description": "This must be a region-unique name e.g. k8s-12345. Try to chose it same as the resource group name as best practice."
      }
    },
    "agentPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes Node Pool Profile Count"
      },
      "type": "int"
    },
    "agentPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The VMSize of Kubernetes node VMs"
      },
      "type": "string"
    },
    "masterPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes Master Pool Profile Count"
      },
      "type": "int"
    },
    "masterPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The VMSize of Kubernetes master VMs"
      },
      "type": "string"
    },
    "storageProfile": {
      "defaultValue": "manageddisk",
      "metadata": {
        "description": "The Storage Profile"
      },
      "type": "string"
    },
    "servicePrincipalClientId": {
      "metadata": {
        "description": "The Service Principal application ID (used by the Kubernetes Azure cloud provider). More help here: https://github.com/Azure/aks-engine/blob/master/docs/topics/service-principals.md"
      },
      "type": "securestring"
    },
    "servicePrincipalClientSecret": {
      "metadata": {
        "description": "The Service Principal Client Secret."
      },
      "type": "securestring"
    },
    "identitySystem": {
      "defaultValue": "AzureAD",
      "allowedValues": [
        "AzureAD",
        "ADFS"
      ],
      "metadata": {
        "description": "The identity system of Azure Stack. The value could be AzureAD or ADFS"
      },
      "type": "string"
    },
    "kubernetesAzureCloudProviderVersion": {
      "type": "string",
      "defaultValue": "1.11",
      "metadata": {
        "description": "This is the version for the Kubernetes Azure cloud provider. We would use a custom Kubernetes build specifically for Azure Stack for each version."
      }
    },
    "aksEngineBaseURL": {
      "type": "string",
      "defaultValue": "https://github.com/Azure/aks-engine/releases/download",
      "metadata": {
        "description": "The beginning of the URL for downloading the AKS Engine binary"
      }
    },
    "aksEngineReleaseVersion": {
      "type": "string",
      "defaultValue": "v0.36.2",
      "metadata": {
        "description": "The version of AKS Engine to download"
      }
    },
    "galleryRepository": {
      "type": "string",
      "defaultValue": "msazurestackworkloads/azurestack-gallery",
      "metadata": {
        "description": "Marketplace item repository"
      }
    },
    "galleryBranch": {
      "type": "string",
      "defaultValue": "master",
      "metadata": {
        "description": "Marketplace item branch"
      }
    },
    "clusterDefinitionFileName": {
      "type": "string",
      "defaultValue": "clusterDefinition.json",
      "metadata": {
        "description": "The name of the file containing the cluster definition"
      }
    },
    "kubernetesImageBase": {
      "type": "string",
      "defaultValue": "mcr.microsoft.com/k8s/azurestack/core/",
      "metadata": {
        "description": "The base for Kubernetes images"
      }
    }
  },
  "variables": {
    "resourceGroupName": "[resourceGroup().name]",
    "dnsNameForPublicIP": "[toLower(concat('vmd-dns', parameters('masterProfileDnsPrefix')))]",
    "location": "[resourceGroup().location]",
    "imagePublisher": "Canonical",
    "imageOffer": "UbuntuServer",
    "imageSku": "16.04-LTS",
    "imageVersion": "latest",
    "vmSize": "Standard_D2_v2",
    "OSDiskName": "osdisk",
    "nicName": "[concat('vmd-vnic', uniqueString(resourceGroup().id))]",
    "addressPrefix": "10.0.0.0/24",
    "subnetName": "mySubnet",
    "subnetPrefix": "10.0.0.0/24",
    "storageAccountName": "[concat('vmdsa', uniquestring(resourceGroup().id))]",
    "storageAccountType": "Standard_LRS",
    "publicIPAddressName": "[concat('vmd-publicIP', uniqueString(resourceGroup().id))]",
    "publicIPAddressType": "Static",
    "vmStorageAccountContainerName": "vhds",
    "vmName": "[concat('vmd-', uniqueString(resourceGroup().id))]",
    "virtualNetworkName": "[concat('vmd-vnet-', uniqueString(resourceGroup().id))]",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
    "subnetRef": "[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]",
    "networkSecurityGroupName": "[tolower(concat('vmd-nsg',uniquestring(resourceGroup().id)))]",
    "sshKeyPath": "[concat('/home/',parameters('linuxAdminUsername'),'/.ssh/authorized_keys')]",
    "tenantSubscriptionId": "[subscription().subscriptionId]",
    "scriptName": "script",
    "singleQuote": "'",
    "scriptParameters": "[concat('IDENTITY_SYSTEM=','\"',parameters('identitySystem'),'\"',' RESOURCE_GROUP_NAME=','\"',variables('resourceGroupName'),'\"',' PUBLICIP_DNS=','\"',variables('dnsNameForPublicIP'),'\"' ,' TENANT_ID=','\"',subscription().tenantId,'\"' ,' TENANT_SUBSCRIPTION_ID=','\"',variables('tenantSubscriptionId'),'\"',' ADMIN_USERNAME=','\"',parameters('linuxAdminUsername'),'\"',' MASTER_DNS_PREFIX=','\"',parameters('masterProfileDnsPrefix'),'\"' ,' AGENT_COUNT=','\"',parameters('agentPoolProfileCount'),'\"' ,' AGENT_SIZE=','\"',parameters('agentPoolProfileVMSize'),'\"' ,' MASTER_COUNT=','\"',parameters('masterPoolProfileCount'),'\"',' MASTER_SIZE=','\"',parameters('masterPoolProfileVMSize'),'\"' ,' SPN_CLIENT_ID=','\"',parameters('servicePrincipalClientId'),'\"' ,' SPN_CLIENT_SECRET=','\"',parameters('servicePrincipalClientSecret'),'\"' ,' K8S_AZURE_CLOUDPROVIDER_VERSION=','\"',parameters('kubernetesAzureCloudProviderVersion'),'\"' ,' REGION_NAME=','\"',variables('location'),'\"' ,' SSH_PUBLICKEY=','\"',parameters('sshPublicKey'),'\"' ,' STORAGE_PROFILE=','\"',parameters('storageProfile'),'\"',' AKSE_BASE_URL=','\"',parameters('aksEngineBaseURL'), '\"', ' AKSE_RELEASE_VERSION=','\"',parameters('aksEngineReleaseVersion'),'\"',' GALLERY_REPO=','\"',parameters('galleryRepository'),'\"',' GALLERY_BRANCH=','\"',parameters('galleryBranch'),'\"',' DEFINITION_TEMPLATE_NAME=','\"',parameters('clusterDefinitionFileName'),'\"',' K8S_IMAGE_BASE=','\"',parameters('kubernetesImageBase'),'\"')]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[toLower(variables('storageAccountName'))]",
      "apiVersion": "2015-06-15",
      "location": "[variables('location')]",
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('networkSecurityGroupName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": [
          {
            "name": "ssh",
            "properties": {
              "description": "Allow SSH",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 200,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddressName')]",
      "location": "[variables('location')]",
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[variables('dnsNameForPublicIP')]"
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[variables('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
        "[variables('networkSecurityGroupName')]"
      ],
      "properties": {
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
        },
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2016-03-30",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('vmName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "osProfile": {
          "customData": "[base64(concat('#cloud-config\n\nwrite_files:\n- path: \"/opt/azure/containers/script.sh\"\n  permissions: \"0744\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    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'))]",
          "computerName": "[variables('vmName')]",
          "adminUsername": "[parameters('linuxAdminUsername')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": "true",
            "ssh": {
              "publicKeys": [
                {
                  "keyData": "[parameters('sshPublicKey')]",
                  "path": "[variables('sshKeyPath')]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[variables('imageSku')]",
            "version": "[variables('imageVersion')]"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob, variables('vmStorageAccountContainerName'),'/',variables('OSDiskName'),'.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": "true",
            "storageUri": "[reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('vmName'),'/LinuxCustomScriptExtension')]",
      "apiVersion": "2016-03-30",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "CustomScript",
        "typeHandlerVersion": "2.0",
        "autoUpgradeMinorVersion": "true",
        "protectedSettings": {
          "commandToExecute": "[concat(variables('scriptParameters'), ' PUBLICIP_FQDN=', '\"', reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn,'\"',' /bin/bash /opt/azure/containers/script.sh >> /var/log/azure/deploy-script-dvm.log 2>&1')]"
        }
      }
    }
  ],
  "outputs": {
    "dvmPublicIpFqdn": {
      "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn]",
      "type": "string"
    }
  }
}
