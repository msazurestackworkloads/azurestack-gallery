{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "linuxAdminUsername": {
      "type": "string",
      "defaultValue": "azureuser",
      "metadata": {
        "description": "User name for the Linux Virtual Machines that are part of the Kubernetes cluster and DVM."
      }
    },
    "sshPublicKey": {
      "metadata": {
        "description": "SSH public key used for auth to all Linux machines created as part of the the Kubernetes cluster and DVM."
      },
      "type": "string"
    },
    "masterProfileDnsPrefix": {
      "type": "string",
      "metadata": {
        "description": "This must be a region-unique name e.g. k8s-12345. Try to chose it same as the resource group name as best practice."
      }
    },
    "agentPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes Node Pool Profile Count"
      },
      "type": "int"
    },
    "agentPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The VMSize of Kubernetes node VMs"
      },
      "type": "string"
    },
    "masterPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes Master Pool Profile Count"
      },
      "type": "int"
    },
    "masterPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The VMSize of Kubernetes master VMs"
      },
      "type": "string"
    },
    "storageProfile": {
      "defaultValue": "manageddisk",
      "metadata": {
        "description": "The Storage Profile"
      },
      "type": "string"
    },
    "aksEngineRepository": {
      "defaultValue": "msazurestackworkloads/aks-engine",
      "metadata": {
        "description": "AKS engine repository"
      },
      "type": "string"
    },
    "aksEngineBranch": {
      "defaultValue": "azsmaster",
      "metadata": {
        "description": "AKS engine branch"
      },
      "type": "string"
    },
    "aksEngineReleaseFileName": {
      "defaultValue": "aks-engine-patch-release-v0.34.2-azs-1904-17-linux-amd64.gz",
      "metadata": {
        "description": "AKS engine release file name"
      },
      "type": "string"
    },
    "aksEngineAPIModelPrefix": {
      "defaultValue": "azurestack-kubernetes",
      "metadata": {
        "description": "AKS engine API Model Prefix name"
      },
      "type": "string"
    },
    "servicePrincipalClientId": {
      "metadata": {
        "description": "The Service Principal application ID (used by the Kubernetes Azure cloud provider). More help here: https://github.com/Azure/aks-engine/blob/master/docs/topics/service-principals.md"
      },
      "type": "securestring"
    },
    "servicePrincipalClientSecret": {
      "metadata": {
        "description": "The Service Principal Client Secret."
      },
      "type": "securestring"
    },
    "servicePrincipalCertificateKeyVaultId": {
      "defaultValue": "servicePrincipalCertificateKeyVaultId",
      "metadata": {
        "description": "the service Principal Certificate KeyVault Id"
      },
      "type": "string"
    },
    "servicePrincipalCertificateKeyVaultSecretName": {
      "defaultValue": "servicePrincipalCertificateKeyVaultSecretName",
      "metadata": {
        "description": "The service Principal Certificate KeyVault SecretName"
      },
      "type": "string"
    },
    "identitySystem": {
      "defaultValue": "AzureAD",
      "allowedValues": [
        "AzureAD",
        "ADFS"
      ],
      "metadata": {
        "description": "The identity system of Azure Stack. The value could be AzureAD or ADFS"
      },
      "type": "string"
    },
    "kubernetesAzureCloudProviderVersion": {
      "type": "string",
      "defaultValue": "1.11",
      "metadata": {
        "description": "This is the version for the Kubernetes Azure cloud provider. We would use a custom Kubernetes build specifically for Azure Stack for each version."
      }
    }
  },
  "variables": {
    "resourceGroupName": "[resourceGroup().name]",
    "dnsNameForPublicIP": "[toLower(concat('vmd-dns', parameters('masterProfileDnsPrefix')))]",
    "location": "[resourceGroup().location]",
    "imagePublisher": "Canonical",
    "imageOffer": "UbuntuServer",
    "imageSku": "16.04-LTS",
    "imageVersion": "latest",
    "vmSize": "Standard_D2_v2",
    "OSDiskName": "osdisk",
    "nicName": "[concat('vmd-vnic', uniqueString(resourceGroup().id))]",
    "addressPrefix": "10.0.0.0/24",
    "subnetName": "mySubnet",
    "subnetPrefix": "10.0.0.0/24",
    "storageAccountName": "[concat('vmdsa', uniquestring(resourceGroup().id))]",
    "storageAccountType": "Standard_LRS",
    "publicIPAddressName": "[concat('vmd-publicIP', uniqueString(resourceGroup().id))]",
    "publicIPAddressType": "Static",
    "vmStorageAccountContainerName": "vhds",
    "vmName": "[concat('vmd-', uniqueString(resourceGroup().id))]",
    "virtualNetworkName": "[concat('vmd-vnet-', uniqueString(resourceGroup().id))]",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
    "subnetRef": "[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]",
    "networkSecurityGroupName": "[tolower(concat('vmd-nsg',uniquestring(resourceGroup().id)))]",
    "sshKeyPath": "[concat('/home/',parameters('linuxAdminUsername'),'/.ssh/authorized_keys')]",
    "tenantSubscriptionId": "[subscription().subscriptionId]",
    "scriptName": "script",
    "singleQuote": "'",
    "scriptParameters": "[concat('IDENTITY_SYSTEM=','\"',parameters('identitySystem'),'\"',' AKS_ENGINE_REPOSITORY=','\"',parameters('aksEngineRepository'),'\"',' AKS_ENGINE_BRANCH=','\"',parameters('aksEngineBranch'),'\"',' AKS_ENGINE_APIMODEL_PREFIX=','\"',parameters('aksEngineAPIModelPrefix'),'\"',' AKS_ENGINE_RELEASE_FILE_NAME=','\"',parameters('aksEngineReleaseFileName'),'\"',' RESOURCE_GROUP_NAME=','\"',variables('resourceGroupName'),'\"',' PUBLICIP_DNS=','\"',variables('dnsNameForPublicIP'),'\"' ,' TENANT_ID=','\"',subscription().tenantId,'\"' ,' TENANT_SUBSCRIPTION_ID=','\"',variables('tenantSubscriptionId'),'\"',' ADMIN_USERNAME=','\"',parameters('linuxAdminUsername'),'\"',' MASTER_DNS_PREFIX=','\"',parameters('masterProfileDnsPrefix'),'\"' ,' AGENT_COUNT=','\"',parameters('agentPoolProfileCount'),'\"' ,' AGENT_SIZE=','\"',parameters('agentPoolProfileVMSize'),'\"' ,' MASTER_COUNT=','\"',parameters('masterPoolProfileCount'),'\"',' MASTER_SIZE=','\"',parameters('masterPoolProfileVMSize'),'\"' ,' SPN_CLIENT_ID=','\"',parameters('servicePrincipalClientId'),'\"' ,' SPN_CLIENT_SECRET=','\"',parameters('servicePrincipalClientSecret'),'\"' ,' SPN_CLIENT_SECRET_KEYVAULT_ID=','\"',parameters('servicePrincipalCertificateKeyVaultId'),'\"' ,' SPN_CLIENT_SECRET_KEYVAULT_SECRET_NAME=','\"',parameters('servicePrincipalCertificateKeyVaultSecretName'),'\"' ,' K8S_AZURE_CLOUDPROVIDER_VERSION=','\"',parameters('kubernetesAzureCloudProviderVersion'),'\"' ,' REGION_NAME=','\"',variables('location'),'\"' ,' SSH_PUBLICKEY=','\"',parameters('sshPublicKey'),'\"' ,' STORAGE_PROFILE=','\"',parameters('storageProfile'),'\"')]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[toLower(variables('storageAccountName'))]",
      "apiVersion": "2015-06-15",
      "location": "[variables('location')]",
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('networkSecurityGroupName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": [
          {
            "name": "ssh",
            "properties": {
              "description": "Allow SSH",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 200,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddressName')]",
      "location": "[variables('location')]",
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[variables('dnsNameForPublicIP')]"
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[variables('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
        "[variables('networkSecurityGroupName')]"
      ],
      "properties": {
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
        },
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2016-03-30",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('vmName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "osProfile": {
          "customData": "[base64(concat('#cloud-config\n\nwrite_files:\n- path: \"/opt/azure/containers/script.sh\"\n  permissions: \"0744\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    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'))]",
          "computerName": "[variables('vmName')]",
          "adminUsername": "[parameters('linuxAdminUsername')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": "true",
            "ssh": {
              "publicKeys": [
                {
                  "keyData": "[parameters('sshPublicKey')]",
                  "path": "[variables('sshKeyPath')]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[variables('imageSku')]",
            "version": "[variables('imageVersion')]"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob, variables('vmStorageAccountContainerName'),'/',variables('OSDiskName'),'.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": "true",
            "storageUri": "[reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('vmName'),'/LinuxCustomScriptExtension')]",
      "apiVersion": "2016-03-30",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "CustomScript",
        "typeHandlerVersion": "2.0",
        "autoUpgradeMinorVersion": "true",
        "protectedSettings": {
          "commandToExecute": "[concat(variables('scriptParameters'), ' PUBLICIP_FQDN=', '\"', reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn,'\"',' /bin/bash /opt/azure/containers/script.sh >> /var/log/azure/deploy-script-dvm.log 2>&1')]"
        }
      }
    }
  ],
  "outputs": {
    "dvmPublicIpFqdn": {
      "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn]",
      "type": "string"
    }
  }
}
