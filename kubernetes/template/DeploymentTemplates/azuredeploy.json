{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "linuxAdminUsername": {
      "type": "string",
      "defaultValue": "azureuser",
      "metadata": {
        "description": "User name for the Linux Virtual Machines that are part of the Kubernetes cluster and DVM."
      }
    },
    "sshPublicKey": {
      "metadata": {
        "description": "SSH public key used for auth to all Linux machines created as part of the the Kubernetes cluster and DVM."
      },
      "type": "string"
    },
    "masterProfileDnsPrefix": {
      "type": "string",
      "metadata": {
        "description": "This must be a region-unique name e.g. k8s-12345. Try to chose it same as the resource group name as best practice."
      }
    },
    "agentPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes Node Pool Profile Count"
      },
      "type": "int"
    },
    "agentPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The VMSize of Kubernetes node VMs"
      },
      "type": "string"
    },
    "masterPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes Master Pool Profile Count"
      },
      "type": "int"
    },
    "masterPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The VMSize of Kubernetes master VMs"
      },
      "type": "string"
    },
    "storageProfile": {
      "defaultValue": "manageddisk",
      "metadata": {
        "description": "The Storage Profile"
      },
      "type": "string"
    },
    "servicePrincipalClientId": {
      "metadata": {
        "description": "The Service Principal application ID (used by the Kubernetes Azure cloud provider). More help here: https://github.com/Azure/aks-engine/blob/master/docs/topics/service-principals.md"
      },
      "type": "securestring"
    },
    "servicePrincipalClientSecret": {
      "metadata": {
        "description": "The Service Principal Client Secret."
      },
      "type": "securestring"
    },
    "identitySystem": {
      "defaultValue": "AzureAD",
      "allowedValues": [
        "AzureAD",
        "ADFS"
      ],
      "metadata": {
        "description": "The identity system of Azure Stack. The value could be AzureAD or ADFS"
      },
      "type": "string"
    },
    "kubernetesAzureCloudProviderVersion": {
      "type": "string",
      "defaultValue": "1.11",
      "metadata": {
        "description": "This is the version for the Kubernetes Azure cloud provider. We would use a custom Kubernetes build specifically for Azure Stack for each version."
      }
    },
    "aksEngineBaseURL": {
      "type": "string",
      "defaultValue": "https://github.com/Azure/aks-engine/releases/download",
      "metadata": {
        "description": "The beginning of the URL for downloading the AKS Engine binary"
      }
    },
    "aksEngineReleaseVersion": {
      "type": "string",
      "defaultValue": "v0.36.4",
      "metadata": {
        "description": "The version of AKS Engine to download"
      }
    },
    "galleryRepository": {
      "type": "string",
      "defaultValue": "msazurestackworkloads/azurestack-gallery",
      "metadata": {
        "description": "Marketplace item repository"
      }
    },
    "galleryBranch": {
      "type": "string",
      "defaultValue": "master",
      "metadata": {
        "description": "Marketplace item branch"
      }
    },
    "clusterDefinitionFileName": {
      "type": "string",
      "defaultValue": "clusterDefinition.json",
      "metadata": {
        "description": "The name of the file containing the cluster definition"
      }
    },
    "kubernetesImageBase": {
      "type": "string",
      "defaultValue": "mcr.microsoft.com/k8s/azurestack/core/",
      "metadata": {
        "description": "The base for Kubernetes images"
      }
    }
  },
  "variables": {
    "resourceGroupName": "[resourceGroup().name]",
    "dnsNameForPublicIP": "[toLower(concat('vmd-dns', parameters('masterProfileDnsPrefix')))]",
    "location": "[resourceGroup().location]",
    "imagePublisher": "Canonical",
    "imageOffer": "UbuntuServer",
    "imageSku": "16.04-LTS",
    "imageVersion": "latest",
    "vmSize": "Standard_D2_v2",
    "OSDiskName": "osdisk",
    "nicName": "[concat('vmd-vnic', uniqueString(resourceGroup().id))]",
    "addressPrefix": "10.0.0.0/24",
    "subnetName": "mySubnet",
    "subnetPrefix": "10.0.0.0/24",
    "storageAccountName": "[concat('vmdsa', uniquestring(resourceGroup().id))]",
    "storageAccountType": "Standard_LRS",
    "publicIPAddressName": "[concat('vmd-publicIP', uniqueString(resourceGroup().id))]",
    "publicIPAddressType": "Static",
    "vmStorageAccountContainerName": "vhds",
    "vmName": "[concat('vmd-', uniqueString(resourceGroup().id))]",
    "virtualNetworkName": "[concat('vmd-vnet-', uniqueString(resourceGroup().id))]",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
    "subnetRef": "[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]",
    "networkSecurityGroupName": "[tolower(concat('vmd-nsg',uniquestring(resourceGroup().id)))]",
    "sshKeyPath": "[concat('/home/',parameters('linuxAdminUsername'),'/.ssh/authorized_keys')]",
    "tenantSubscriptionId": "[subscription().subscriptionId]",
    "scriptName": "script",
    "singleQuote": "'",
    "scriptParameters": "[concat('IDENTITY_SYSTEM=','\"',parameters('identitySystem'),'\"',' RESOURCE_GROUP_NAME=','\"',variables('resourceGroupName'),'\"',' PUBLICIP_DNS=','\"',variables('dnsNameForPublicIP'),'\"' ,' TENANT_ID=','\"',subscription().tenantId,'\"' ,' TENANT_SUBSCRIPTION_ID=','\"',variables('tenantSubscriptionId'),'\"',' ADMIN_USERNAME=','\"',parameters('linuxAdminUsername'),'\"',' MASTER_DNS_PREFIX=','\"',parameters('masterProfileDnsPrefix'),'\"' ,' AGENT_COUNT=','\"',parameters('agentPoolProfileCount'),'\"' ,' AGENT_SIZE=','\"',parameters('agentPoolProfileVMSize'),'\"' ,' MASTER_COUNT=','\"',parameters('masterPoolProfileCount'),'\"',' MASTER_SIZE=','\"',parameters('masterPoolProfileVMSize'),'\"' ,' SPN_CLIENT_ID=','\"',parameters('servicePrincipalClientId'),'\"' ,' SPN_CLIENT_SECRET=','\"',parameters('servicePrincipalClientSecret'),'\"' ,' K8S_AZURE_CLOUDPROVIDER_VERSION=','\"',parameters('kubernetesAzureCloudProviderVersion'),'\"' ,' REGION_NAME=','\"',variables('location'),'\"' ,' SSH_PUBLICKEY=','\"',parameters('sshPublicKey'),'\"' ,' STORAGE_PROFILE=','\"',parameters('storageProfile'),'\"',' AKSE_BASE_URL=','\"',parameters('aksEngineBaseURL'), '\"', ' AKSE_RELEASE_VERSION=','\"',parameters('aksEngineReleaseVersion'),'\"',' GALLERY_REPO=','\"',parameters('galleryRepository'),'\"',' GALLERY_BRANCH=','\"',parameters('galleryBranch'),'\"',' DEFINITION_TEMPLATE_NAME=','\"',parameters('clusterDefinitionFileName'),'\"',' K8S_IMAGE_BASE=','\"',parameters('kubernetesImageBase'),'\"')]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[toLower(variables('storageAccountName'))]",
      "apiVersion": "2015-06-15",
      "location": "[variables('location')]",
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('networkSecurityGroupName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": [
          {
            "name": "ssh",
            "properties": {
              "description": "Allow SSH",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 200,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddressName')]",
      "location": "[variables('location')]",
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[variables('dnsNameForPublicIP')]"
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[variables('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
        "[variables('networkSecurityGroupName')]"
      ],
      "properties": {
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
        },
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2016-03-30",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('vmName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "osProfile": {
          "customData": "[base64(concat('#cloud-config\n\nwrite_files:\n- path: \"/opt/azure/containers/script.sh\"\n  permissions: \"0744\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    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'))]",
          "computerName": "[variables('vmName')]",
          "adminUsername": "[parameters('linuxAdminUsername')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": "true",
            "ssh": {
              "publicKeys": [
                {
                  "keyData": "[parameters('sshPublicKey')]",
                  "path": "[variables('sshKeyPath')]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[variables('imageSku')]",
            "version": "[variables('imageVersion')]"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob, variables('vmStorageAccountContainerName'),'/',variables('OSDiskName'),'.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": "true",
            "storageUri": "[reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('vmName'),'/LinuxCustomScriptExtension')]",
      "apiVersion": "2016-03-30",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "CustomScript",
        "typeHandlerVersion": "2.0",
        "autoUpgradeMinorVersion": "true",
        "protectedSettings": {
          "commandToExecute": "[concat(variables('scriptParameters'), ' PUBLICIP_FQDN=', '\"', reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn,'\"',' /bin/bash /opt/azure/containers/script.sh >> /var/log/azure/deploy-script-dvm.log 2>&1')]"
        }
      }
    }
  ],
  "outputs": {
    "dvmPublicIpFqdn": {
      "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn]",
      "type": "string"
    }
  }
}
