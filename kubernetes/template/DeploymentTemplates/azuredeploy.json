{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "linuxAdminUsername": {
      "type": "string",
      "defaultValue": "azureuser",
      "metadata": {
        "description": "User name for the Linux Virtual Machines that are part of the Kubernetes cluster and DVM."
      }
    },
    "sshPublicKey": {
      "metadata": {
        "description": "SSH public key used for auth to all Linux machines created as part of the the Kubernetes cluster and DVM."
      },
      "type": "string"
    },
    "masterProfileDnsPrefix": {
      "type": "string",
      "metadata": {
        "description": "This must be a region-unique name e.g. k8s-12345. Try to chose it same as the resource group name as best practice."
      }
    },
    "agentPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes Node Pool Profile Count"
      },
      "type": "int"
    },
    "agentPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The VMSize of Kubernetes node VMs"
      },
      "type": "string"
    },
    "masterPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes Master Pool Profile Count"
      },
      "type": "int"
    },
    "masterPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The VMSize of Kubernetes master VMs"
      },
      "type": "string"
    },
    "storageProfile": {
      "defaultValue": "blobdisk",
      "metadata": {
        "description": "The Storage Profile"
      },
      "type": "string"
    },
    "servicePrincipalClientId": {
      "metadata": {
        "description": "The Service Principal application ID (used by the Kubernetes Azure cloud provider). More help here: https://github.com/Azure/acs-engine/blob/master/docs/serviceprincipal.md"
      },
      "type": "securestring"
    },
    "servicePrincipalClientSecret": {
      "metadata": {
        "description": "The Service Principal Client Secret."
      },
      "type": "securestring"
    },
    "servicePrincipalCertificateKeyVaultId": {
      "defaultValue": "servicePrincipalCertificateKeyVaultId",
      "metadata": {
        "description": "the service Principal Certificate KeyVault Id"
      },
      "type": "string"
    },
    "servicePrincipalCertificateKeyVaultSecretName": {
      "defaultValue": "servicePrincipalCertificateKeyVaultSecretName",
      "metadata": {
        "description": "The service Principal Certificate KeyVault SecretName"
      },
      "type": "string"
    },
    "identitySystem": {
      "defaultValue": "AzureAD",
      "allowedValues": [
        "AzureAD",
        "ADFS"
      ],
      "metadata": {
        "description": "The identity system of azure stack. The value could be AzureAD or ADFS"
      },
      "type": "string"
    },
    "kubernetesAzureCloudProviderVersion": {
      "type": "string",
      "defaultValue": "1.11",
      "metadata": {
        "description": "This is the version for the kubernetes Azure cloud provider. We would use a custom kubernetes build specifically for AzureStack for each version."
      }
    }
  },
  "variables": {
    "resourceGroupName": "[resourceGroup().name]",
    "dnsNameForPublicIP": "[toLower(concat('vmd-dns', parameters('masterProfileDnsPrefix')))]",
    "location": "[resourceGroup().location]",
    "imagePublisher": "Canonical",
    "imageOffer": "UbuntuServer",
    "imageSku": "16.04-LTS",
    "imageVersion": "latest",
    "vmSize": "Standard_D2_v2",
    "OSDiskName": "osdisk",
    "nicName": "[concat('vmd-vnic', uniqueString(resourceGroup().id))]",
    "addressPrefix": "10.0.0.0/24",
    "subnetName": "mySubnet",
    "subnetPrefix": "10.0.0.0/24",
    "storageAccountName": "[concat('vmdsa', uniquestring(resourceGroup().id))]",
    "storageAccountType": "Standard_LRS",
    "publicIPAddressName": "[concat('vmd-publicIP', uniqueString(resourceGroup().id))]",
    "publicIPAddressType": "Static",
    "vmStorageAccountContainerName": "vhds",
    "vmName": "[concat('vmd-', uniqueString(resourceGroup().id))]",
    "virtualNetworkName": "[concat('vmd-vnet-', uniqueString(resourceGroup().id))]",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
    "subnetRef": "[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]",
    "networkSecurityGroupName": "[tolower(concat('vmd-nsg',uniquestring(resourceGroup().id)))]",
    "sshKeyPath": "[concat('/home/',parameters('linuxAdminUsername'),'/.ssh/authorized_keys')]",
    "tenantSubscriptionId": "[subscription().subscriptionId]",
    "scriptName": "script",
    "singleQuote": "'",
    "scriptParameters": "[concat('IDENTITY_SYSTEM=','\"',parameters('identitySystem'),'\"',' RESOURCE_GROUP_NAME=','\"',variables('resourceGroupName'),'\"',' PUBLICIP_DNS=','\"',variables('dnsNameForPublicIP'),'\"' ,' TENANT_ID=','\"',subscription().tenantId,'\"' ,' TENANT_SUBSCRIPTION_ID=','\"',variables('tenantSubscriptionId'),'\"',' ADMIN_USERNAME=','\"',parameters('linuxAdminUsername'),'\"',' MASTER_DNS_PREFIX=','\"',parameters('masterProfileDnsPrefix'),'\"' ,' AGENT_COUNT=','\"',parameters('agentPoolProfileCount'),'\"' ,' AGENT_SIZE=','\"',parameters('agentPoolProfileVMSize'),'\"' ,' MASTER_COUNT=','\"',parameters('masterPoolProfileCount'),'\"',' MASTER_SIZE=','\"',parameters('masterPoolProfileVMSize'),'\"' ,' SPN_CLIENT_ID=','\"',parameters('servicePrincipalClientId'),'\"' ,' SPN_CLIENT_SECRET=','\"',parameters('servicePrincipalClientSecret'),'\"' ,' SPN_CLIENT_SECRET_KEYVAULT_ID=','\"',parameters('servicePrincipalCertificateKeyVaultId'),'\"' ,' SPN_CLIENT_SECRET_KEYVAULT_SECRET_NAME=','\"',parameters('servicePrincipalCertificateKeyVaultSecretName'),'\"' ,' K8S_AZURE_CLOUDPROVIDER_VERSION=','\"',parameters('kubernetesAzureCloudProviderVersion'),'\"' ,' REGION_NAME=','\"',variables('location'),'\"' ,' SSH_PUBLICKEY=','\"',parameters('sshPublicKey'),'\"' ,' STORAGE_PROFILE=','\"',parameters('storageProfile'),'\"')]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[toLower(variables('storageAccountName'))]",
      "apiVersion": "2015-06-15",
      "location": "[variables('location')]",
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('networkSecurityGroupName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": [
          {
            "name": "ssh",
            "properties": {
              "description": "Allow SSH",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 200,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddressName')]",
      "location": "[variables('location')]",
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[variables('dnsNameForPublicIP')]"
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[variables('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
        "[variables('networkSecurityGroupName')]"
      ],
      "properties": {
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
        },
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2016-03-30",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('vmName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "osProfile": {
          "customData": "[base64(concat('#cloud-config\n\nwrite_files:\n- path: \"/opt/azure/containers/script.sh\"\n  permissions: \"0744\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    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'))]",
          "computerName": "[variables('vmName')]",
          "adminUsername": "[parameters('linuxAdminUsername')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": "true",
            "ssh": {
              "publicKeys": [
                {
                  "keyData": "[parameters('sshPublicKey')]",
                  "path": "[variables('sshKeyPath')]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[variables('imageSku')]",
            "version": "[variables('imageVersion')]"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob, variables('vmStorageAccountContainerName'),'/',variables('OSDiskName'),'.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": "true",
            "storageUri": "[reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('vmName'),'/LinuxCustomScriptExtension')]",
      "apiVersion": "2016-03-30",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "CustomScript",
        "typeHandlerVersion": "2.0",
        "autoUpgradeMinorVersion": "true",
        "protectedSettings": {
          "commandToExecute": "[concat(variables('scriptParameters'), ' PUBLICIP_FQDN=', '\"', reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn,'\"',' /bin/bash /opt/azure/containers/script.sh >> /var/log/azure/acsengine-kubernetes-dvm.log 2>&1')]"
        }
      }
    }
  ],
  "outputs": {
    "dvmPublicIpFqdn": {
      "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn]",
      "type": "string"
    }
  }
}