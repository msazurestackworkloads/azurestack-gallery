{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "linuxAdminUsername": {
      "type": "string",
      "defaultValue": "azureuser",
      "metadata": {
        "description": "User name for the Linux virtual machines that are part of the Kubernetes cluster and DVM."
      }
    },
    "sshPublicKey": {
      "metadata": {
        "description": "SSH public key used for auth to all Linux machines created as part of the the Kubernetes cluster and DVM."
      },
      "type": "string"
    },
    "masterProfileDnsPrefix": {
      "type": "string",
      "metadata": {
        "description": "This must be a region-unique name e.g. k8s-12345. Try to chose it same as the resource group name as best practice."
      }
    },
    "agentPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes linux node pool profile count"
      },
      "type": "int"
    },
    "agentPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The virtual machine size of the Kubernetes linux agent nodes"
      },
      "type": "string"
    },
    "masterPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes master pool profile count"
      },
      "type": "int"
    },
    "masterPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The virtual machine size of the Kubernetes master nodes"
      },
      "type": "string"
    },
    "storageProfile": {
      "defaultValue": "manageddisk",
      "metadata": {
        "description": "The Storage Profile"
      },
      "type": "string"
    },
    "servicePrincipalClientId": {
      "metadata": {
        "description": "The Service Principal application ID (used by the Kubernetes Azure cloud provider). More help here: https://github.com/Azure/aks-engine/blob/master/docs/topics/service-principals.md"
      },
      "type": "securestring"
    },
    "servicePrincipalClientSecret": {
      "metadata": {
        "description": "The Service Principal Client Secret."
      },
      "type": "securestring"
    },
    "identitySystem": {
      "defaultValue": "AzureAD",
      "allowedValues": [
        "AzureAD",
        "ADFS"
      ],
      "metadata": {
        "description": "The identity system of Azure Stack. The value could be AzureAD or ADFS"
      },
      "type": "string"
    },
    "kubernetesAzureCloudProviderVersion": {
      "type": "string",
      "defaultValue": "1.14",
      "metadata": {
        "description": "This is the version for the Kubernetes Azure cloud provider. We would use a custom Kubernetes build specifically for Azure Stack for each version."
      }
    },
    "aksEngineBaseURL": {
      "type": "string",
      "defaultValue": "https://github.com/Azure/aks-engine/releases/download",
      "metadata": {
        "description": "The beginning of the URL for downloading the AKS Engine binary"
      }
    },
    "aksEngineReleaseVersion": {
      "type": "string",
      "defaultValue": "v0.43.0",
      "metadata": {
        "description": "The version of AKS Engine to download"
      }
    },
    "galleryRepository": {
      "type": "string",
      "defaultValue": "msazurestackworkloads/azurestack-gallery",
      "metadata": {
        "description": "Marketplace item repository"
      }
    },
    "galleryBranch": {
      "type": "string",
      "defaultValue": "master",
      "metadata": {
        "description": "Marketplace item branch"
      }
    },
    "clusterDefinitionFileName": {
      "type": "string",
      "defaultValue": "clusterDefinition.json",
      "metadata": {
        "description": "The name of the file containing the cluster definition"
      }
    },
    "kubernetesImageBase": {
      "type": "string",
      "defaultValue": "mcr.microsoft.com/k8s/azurestack/core/",
      "metadata": {
        "description": "The base for Kubernetes images"
      }
    },
    "customVnetName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Name of the custom vnet"
      }
    },
    "masterSubnetName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Name of the master subnet"
      }
    },
    "agentSubnetName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Name of the agent subnet"
      }
    },
    "firstConsecutiveStaticIP": {
      "type": "string",
      "defaultValue": "10.100.0.5",
      "metadata": {
        "description": "First Consective Static IP"
      }
    },
    "networkPlugin": {
      "defaultValue": "kubenet",
      "allowedValues": [
        "flannel",
        "azure",
        "kubenet"
      ],
      "metadata": {
        "description": "Network plugin which will deployed in Kubernetes cluster"
      },
      "type": "string"
    },
    "networkPolicy": {
      "defaultValue": "",
      "allowedValues": [
        "",
        "azure"
      ],
      "metadata": {
        "description": "Network policy which will deployed in Kubernetes cluster"
      },
      "type": "string"
    },
    "availabilityProfile": {
      "defaultValue": "AvailabilitySet",
      "allowedValues": [
        "AvailabilitySet",
        "VirtualMachineScaleSets"
      ],
      "metadata": {
        "description": "Availability profile that nodes in the Kubernetes cluster will be deployed with"
      },
      "type": "string"
    },
    "windowsAgentPoolProfileCount": {
      "defaultValue": "0",      
      "metadata": {
        "description": "Kubernetes Windows node pool profile count"
      },
      "type": "string"
    },
    "windowsAgentPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The virtual machine size of the Kubernetes Windows agent nodes"
      },
      "type": "string"
    },
    "windowsAdminUsername": {
      "defaultValue": "azureuser",
      "metadata": {
        "description": "User name for the Windows virtual machines that are part of the Kubernetes cluster."
      },
      "type": "string"
    },
    "windowsAdminPassword": {
      "defaultValue": "",
      "metadata": {
        "description": "Password for the Windows virtual machines that are part of the Kubernetes cluster."
      },
      "type": "securestring"
    },
    "customWindowsPackageURL": {
      "defaultValue": "",
      "metadata": {
        "description": "Custom Windows K8s zip location which will be used to deploy(kubelet, kubeproxy) on Windows node."
      },
      "type": "string"
    },
    "nodeDistro": {
      "defaultValue": "ubuntu",
      "allowedValues": [
        "ubuntu",
        "aks-ubuntu-16.04"
      ],
      "metadata": {
        "description": "Node distro to be used to deploy Kubernetes on Azure Stack."
      },
      "type": "string"
    },
    "enableTillerAddOn": {
      "type": "string",
      "defaultValue": "false",
      "metadata": {
        "description": "Flag to enable Tiller addon"
      }
    },
    "containerRuntime": {
      "type": "string",
      "defaultValue": "docker",
      "allowedValues": [
        "docker",
        "containerd"
      ],
      "metadata": {
        "description": "Container runtime to deploy on each cluster node."
      }
    },
    "disconnectedAKSeURL": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Azure Stack blob url to download AKS engine from a blob store in disconnected environment "
      }
    }
  },
  "variables": {
    "resourceGroupName": "[resourceGroup().name]",
    "dnsNameForPublicIP": "[toLower(concat('vmd-dns', parameters('masterProfileDnsPrefix')))]",
    "location": "[resourceGroup().location]",
    "imagePublisher": "microsoft-aks",
    "imageOffer": "aks",
    "imageSku": "aks-ubuntu-1604-201910",
    "imageVersion": "2019.10.24",
    "vmSize": "Standard_D2_v2",
    "OSDiskName": "osdisk",
    "nicName": "[concat('vmd-vnic', uniqueString(resourceGroup().id))]",
    "addressPrefix": "10.0.0.0/24",
    "subnetName": "mySubnet",
    "subnetPrefix": "10.0.0.0/24",
    "storageAccountName": "[concat('vmdsa', uniquestring(resourceGroup().id))]",
    "storageAccountType": "Standard_LRS",
    "publicIPAddressName": "[concat('vmd-publicIP', uniqueString(resourceGroup().id))]",
    "publicIPAddressType": "Static",
    "vmStorageAccountContainerName": "vhds",
    "vmName": "[concat('vmd-', uniqueString(resourceGroup().id))]",
    "virtualNetworkName": "[concat('vmd-vnet-', uniqueString(resourceGroup().id))]",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
    "subnetRef": "[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]",
    "networkSecurityGroupName": "[tolower(concat('vmd-nsg',uniquestring(resourceGroup().id)))]",
    "sshKeyPath": "[concat('/home/',parameters('linuxAdminUsername'),'/.ssh/authorized_keys')]",
    "tenantSubscriptionId": "[subscription().subscriptionId]",
    "scriptName": "script",
    "singleQuote": "'",
    "scriptParameters": "[concat('IDENTITY_SYSTEM=','\"',parameters('identitySystem'),'\"',' ENABLE_TILLER=','\"',parameters('enableTillerAddOn'),'\"' ,' CONTAINER_RUNTIME=','\"',parameters('containerRuntime'),'\"' ,' WINDOWS_CUSTOM_PACKAGE=','\"',parameters('customWindowsPackageURL'),'\"' ,' WINDOWS_AGENT_COUNT=','\"',parameters('windowsAgentPoolProfileCount'),'\"' ,' WINDOWS_AGENT_SIZE=','\"',parameters('windowsAgentPoolProfileVMSize'),'\"',' WINDOWS_ADMIN_USERNAME=','\"',parameters('windowsAdminUsername'),'\"',' WINDOWS_ADMIN_PASSWORD=','\"',parameters('windowsAdminPassword'),'\"',' NETWORK_PLUGIN=','\"',parameters('networkPlugin'),'\"',' NETWORK_POLICY=','\"',parameters('networkPolicy'),'\"',' AVAILABILITY_PROFILE=','\"',parameters('availabilityProfile'),'\"',' FIRST_CONSECUTIVE_STATIC_IP=','\"',parameters('firstConsecutiveStaticIP'),'\"',' AGENT_SUBNET_NAME=','\"',parameters('agentSubnetName'),'\"',' MASTER_SUBNET_NAME=','\"',parameters('masterSubnetName'),'\"',' CUSTOM_VNET_NAME=','\"',parameters('customVnetName'),'\"',' NODE_DISTRO=','\"',parameters('nodeDistro'),'\"',' RESOURCE_GROUP_NAME=','\"',variables('resourceGroupName'),'\"',' PUBLICIP_DNS=','\"',variables('dnsNameForPublicIP'),'\"' ,' TENANT_ID=','\"',subscription().tenantId,'\"' ,' TENANT_SUBSCRIPTION_ID=','\"',variables('tenantSubscriptionId'),'\"',' ADMIN_USERNAME=','\"',parameters('linuxAdminUsername'),'\"',' MASTER_DNS_PREFIX=','\"',parameters('masterProfileDnsPrefix'),'\"' ,' AGENT_COUNT=','\"',parameters('agentPoolProfileCount'),'\"' ,' AGENT_SIZE=','\"',parameters('agentPoolProfileVMSize'),'\"' ,' MASTER_COUNT=','\"',parameters('masterPoolProfileCount'),'\"',' MASTER_SIZE=','\"',parameters('masterPoolProfileVMSize'),'\"' ,' SPN_CLIENT_ID=','\"',parameters('servicePrincipalClientId'),'\"' ,' SPN_CLIENT_SECRET=','\"',parameters('servicePrincipalClientSecret'),'\"' ,' K8S_AZURE_CLOUDPROVIDER_VERSION=','\"',parameters('kubernetesAzureCloudProviderVersion'),'\"' ,' REGION_NAME=','\"',variables('location'),'\"' ,' SSH_PUBLICKEY=','\"',parameters('sshPublicKey'),'\"' ,' STORAGE_PROFILE=','\"',parameters('storageProfile'),'\"',' AKSE_BASE_URL=','\"',parameters('aksEngineBaseURL'), '\"', ' AKSE_RELEASE_VERSION=','\"',parameters('aksEngineReleaseVersion'),'\"',' GALLERY_REPO=','\"',parameters('galleryRepository'),'\"',' GALLERY_BRANCH=','\"',parameters('galleryBranch'),'\"',' DEFINITION_TEMPLATE_NAME=','\"',parameters('clusterDefinitionFileName'),'\"',' K8S_IMAGE_BASE=','\"',parameters('kubernetesImageBase'),'\"',' DISCONNECTED_AKS_ENGINE_URL=','\"',parameters('disconnectedAKSeURL'),'\"')]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[toLower(variables('storageAccountName'))]",
      "apiVersion": "2015-06-15",
      "location": "[variables('location')]",
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('networkSecurityGroupName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": [
          {
            "name": "ssh",
            "properties": {
              "description": "Allow SSH",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 200,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddressName')]",
      "location": "[variables('location')]",
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[variables('dnsNameForPublicIP')]"
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[variables('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
        "[variables('networkSecurityGroupName')]"
      ],
      "properties": {
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
        },
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2016-03-30",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('vmName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "osProfile": {
          "customData": "[base64(concat('#cloud-config\n\nwrite_files:\n- path: \"/opt/azure/containers/script.sh\"\n  permissions: \"0744\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    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'))]",
          "computerName": "[variables('vmName')]",
          "adminUsername": "[parameters('linuxAdminUsername')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": "true",
            "ssh": {
              "publicKeys": [
                {
                  "keyData": "[parameters('sshPublicKey')]",
                  "path": "[variables('sshKeyPath')]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[variables('imageSku')]",
            "version": "[variables('imageVersion')]"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob, variables('vmStorageAccountContainerName'),'/',variables('OSDiskName'),'.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": "true",
            "storageUri": "[reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('vmName'),'/LinuxCustomScriptExtension')]",
      "apiVersion": "2016-03-30",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "CustomScript",
        "typeHandlerVersion": "2.0",
        "autoUpgradeMinorVersion": "true",
        "protectedSettings": {
          "commandToExecute": "[concat(variables('scriptParameters'), ' PUBLICIP_FQDN=', '\"', reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn,'\"',' /bin/bash /opt/azure/containers/script.sh >> /var/log/azure/deploy-script-dvm.log 2>&1')]"
        }
      }
    }
  ],
  "outputs": {
    "dvmPublicIpFqdn": {
      "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn]",
      "type": "string"
    }
  }
}
