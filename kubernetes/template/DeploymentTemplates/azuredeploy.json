{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "linuxAdminUsername": {
      "type": "string",
      "defaultValue": "azureuser",
      "metadata": {
        "description": "User name for the Linux Virtual Machines that are part of the Kubernetes cluster and DVM."
      }
    },
    "sshPublicKey": {
      "metadata": {
        "description": "SSH public key used for auth to all Linux machines created as part of the the Kubernetes cluster and DVM."
      },
      "type": "string"
    },
    "masterProfileDnsPrefix": {
      "type": "string",
      "metadata": {
        "description": "This must be a region-unique name e.g. k8s-12345. Try to chose it same as the resource group name as best practice."
      }
    },
    "agentPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes Node Pool Profile Count"
      },
      "type": "int"
    },
    "agentPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The VMSize of Kubernetes node VMs"
      },
      "type": "string"
    },
    "masterPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes Master Pool Profile Count"
      },
      "type": "int"
    },
    "masterPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The VMSize of Kubernetes master VMs"
      },
      "type": "string"
    },
    "storageProfile": {
      "defaultValue": "blobdisk",
      "metadata": {
        "description": "The Storage Profile"
      },
      "type": "string"
    },
    "servicePrincipalClientId": {
      "metadata": {
        "description": "The Service Principal application ID (used by the Kubernetes Azure cloud provider). More help here: https://github.com/Azure/acs-engine/blob/master/docs/serviceprincipal.md"
      },
      "type": "securestring"
    },
    "servicePrincipalClientSecret": {
      "metadata": {
        "description": "The Service Principal Client Secret."
      },
      "type": "securestring"
    },
    "servicePrincipalCertificateKeyVaultId": {
      "defaultValue": "servicePrincipalCertificateKeyVaultId",
      "metadata": {
        "description": "the service Principal Certificate KeyVault Id"
      },
      "type": "string"
    },
    "servicePrincipalCertificateKeyVaultSecretName": {
      "defaultValue": "servicePrincipalCertificateKeyVaultSecretName",
      "metadata": {
        "description": "The service Principal Certificate KeyVault SecretName"
      },
      "type": "string"
    },
    "identitySystem": {
      "defaultValue": "AzureAD",
      "allowedValues": [
        "AzureAD",
        "ADFS"
      ],
      "metadata": {
        "description": "The identity system of azure stack. The value could be AzureAD or ADFS"
      },
      "type": "string"
    },
    "kubernetesAzureCloudProviderVersion": {
      "type": "string",
      "defaultValue": "1.11",
      "metadata": {
        "description": "This is the version for the kubernetes Azure cloud provider. We would use a custom kubernetes build specifically for AzureStack for each version."
      }
    }
  },
  "variables": {
    "resourceGroupName": "[resourceGroup().name]",
    "dnsNameForPublicIP": "[toLower(concat('vmd-dns', parameters('masterProfileDnsPrefix')))]",
    "location": "[resourceGroup().location]",
    "imagePublisher": "Canonical",
    "imageOffer": "UbuntuServer",
    "imageSku": "16.04-LTS",
    "imageVersion": "latest",
    "vmSize": "Standard_D2_v2",
    "OSDiskName": "osdisk",
    "nicName": "[concat('vmd-vnic', uniqueString(resourceGroup().id))]",
    "addressPrefix": "10.0.0.0/24",
    "subnetName": "mySubnet",
    "subnetPrefix": "10.0.0.0/24",
    "storageAccountName": "[concat('vmdsa', uniquestring(resourceGroup().id))]",
    "storageAccountType": "Standard_LRS",
    "publicIPAddressName": "[concat('vmd-publicIP', uniqueString(resourceGroup().id))]",
    "publicIPAddressType": "Static",
    "vmStorageAccountContainerName": "vhds",
    "vmName": "[concat('vmd-', uniqueString(resourceGroup().id))]",
    "virtualNetworkName": "[concat('vmd-vnet-', uniqueString(resourceGroup().id))]",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
    "subnetRef": "[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]",
    "networkSecurityGroupName": "[tolower(concat('vmd-nsg',uniquestring(resourceGroup().id)))]",
    "sshKeyPath": "[concat('/home/',parameters('linuxAdminUsername'),'/.ssh/authorized_keys')]",
    "tenantSubscriptionId": "[subscription().subscriptionId]",
    "scriptName": "script",
    "singleQuote": "'",
    "scriptParameters": "[concat('IDENTITY_SYSTEM=','\"',parameters('identitySystem'),'\"',' RESOURCE_GROUP_NAME=','\"',variables('resourceGroupName'),'\"',' PUBLICIP_DNS=','\"',variables('dnsNameForPublicIP'),'\"' ,' TENANT_ID=','\"',subscription().tenantId,'\"' ,' TENANT_SUBSCRIPTION_ID=','\"',variables('tenantSubscriptionId'),'\"',' ADMIN_USERNAME=','\"',parameters('linuxAdminUsername'),'\"',' MASTER_DNS_PREFIX=','\"',parameters('masterProfileDnsPrefix'),'\"' ,' AGENT_COUNT=','\"',parameters('agentPoolProfileCount'),'\"' ,' AGENT_SIZE=','\"',parameters('agentPoolProfileVMSize'),'\"' ,' MASTER_COUNT=','\"',parameters('masterPoolProfileCount'),'\"',' MASTER_SIZE=','\"',parameters('masterPoolProfileVMSize'),'\"' ,' SPN_CLIENT_ID=','\"',parameters('servicePrincipalClientId'),'\"' ,' SPN_CLIENT_SECRET=','\"',parameters('servicePrincipalClientSecret'),'\"' ,' SPN_CLIENT_SECRET_KEYVAULT_ID=','\"',parameters('servicePrincipalCertificateKeyVaultId'),'\"' ,' SPN_CLIENT_SECRET_KEYVAULT_SECRET_NAME=','\"',parameters('servicePrincipalCertificateKeyVaultSecretName'),'\"' ,' K8S_AZURE_CLOUDPROVIDER_VERSION=','\"',parameters('kubernetesAzureCloudProviderVersion'),'\"' ,' REGION_NAME=','\"',variables('location'),'\"' ,' SSH_PUBLICKEY=','\"',parameters('sshPublicKey'),'\"' ,' STORAGE_PROFILE=','\"',parameters('storageProfile'),'\"')]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[toLower(variables('storageAccountName'))]",
      "apiVersion": "2015-06-15",
      "location": "[variables('location')]",
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('networkSecurityGroupName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": [
          {
            "name": "ssh",
            "properties": {
              "description": "Allow SSH",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 200,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddressName')]",
      "location": "[variables('location')]",
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[variables('dnsNameForPublicIP')]"
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[variables('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
        "[variables('networkSecurityGroupName')]"
      ],
      "properties": {
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
        },
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2016-03-30",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('vmName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "osProfile": {
          "customData": "[base64(concat('#cloud-config\n\nwrite_files:\n- path: \"/opt/azure/containers/script.sh\"\n  permissions: \"0744\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    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'))]",
          "computerName": "[variables('vmName')]",
          "adminUsername": "[parameters('linuxAdminUsername')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": "true",
            "ssh": {
              "publicKeys": [
                {
                  "keyData": "[parameters('sshPublicKey')]",
                  "path": "[variables('sshKeyPath')]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[variables('imageSku')]",
            "version": "[variables('imageVersion')]"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob, variables('vmStorageAccountContainerName'),'/',variables('OSDiskName'),'.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": "true",
            "storageUri": "[reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('vmName'),'/LinuxCustomScriptExtension')]",
      "apiVersion": "2016-03-30",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "CustomScript",
        "typeHandlerVersion": "2.0",
        "autoUpgradeMinorVersion": "true",
        "protectedSettings": {
          "commandToExecute": "[concat(variables('scriptParameters'), ' PUBLICIP_FQDN=', '\"', reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn,'\"',' /bin/bash /opt/azure/containers/script.sh >> /var/log/azure/acsengine-kubernetes-dvm.log 2>&1')]"
        }
      }
    }
  ],
  "outputs": {
    "dvmPublicIpFqdn": {
      "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn]",
      "type": "string"
    }
  }
}