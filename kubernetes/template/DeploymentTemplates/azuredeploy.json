{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "linuxAdminUsername": {
      "type": "string",
      "defaultValue": "azureuser",
      "metadata": {
        "description": "User name for the Linux Virtual Machines that are part of the Kubernetes cluster and DVM."
      }
    },
    "sshPublicKey": {
      "metadata": {
        "description": "SSH public key used for auth to all Linux machines created as part of the the Kubernetes cluster and DVM."
      },
      "type": "string"
    },
    "masterProfileDnsPrefix": {
      "type": "string",
      "metadata": {
        "description": "This must be a region-unique name e.g. k8s-12345. Try to chose it same as the resource group name as best practice."
      }
    },
    "agentPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes Node Pool Profile Count"
      },
      "type": "int"
    },
    "agentPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The VMSize of Kubernetes node VMs"
      },
      "type": "string"
    },
    "masterPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes Master Pool Profile Count"
      },
      "type": "int"
    },
    "masterPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The VMSize of Kubernetes master VMs"
      },
      "type": "string"
    },
    "storageProfile": {
      "defaultValue": "manageddisk",
      "metadata": {
        "description": "The Storage Profile"
      },
      "type": "string"
    },
    "servicePrincipalClientId": {
      "metadata": {
        "description": "The Service Principal application ID (used by the Kubernetes Azure cloud provider). More help here: https://github.com/Azure/aks-engine/blob/master/docs/topics/service-principals.md"
      },
      "type": "securestring"
    },
    "servicePrincipalClientSecret": {
      "metadata": {
        "description": "The Service Principal Client Secret."
      },
      "type": "securestring"
    },
    "servicePrincipalCertificateKeyVaultId": {
      "defaultValue": "servicePrincipalCertificateKeyVaultId",
      "metadata": {
        "description": "the service Principal Certificate KeyVault Id"
      },
      "type": "string"
    },
    "servicePrincipalCertificateKeyVaultSecretName": {
      "defaultValue": "servicePrincipalCertificateKeyVaultSecretName",
      "metadata": {
        "description": "The service Principal Certificate KeyVault SecretName"
      },
      "type": "string"
    },
    "identitySystem": {
      "defaultValue": "AzureAD",
      "allowedValues": [
        "AzureAD",
        "ADFS"
      ],
      "metadata": {
        "description": "The identity system of Azure Stack. The value could be AzureAD or ADFS"
      },
      "type": "string"
    },
    "kubernetesAzureCloudProviderVersion": {
      "type": "string",
      "defaultValue": "1.11",
      "metadata": {
        "description": "This is the version for the Kubernetes Azure cloud provider. We would use a custom Kubernetes build specifically for Azure Stack for each version."
      }
    }
  },
  "variables": {
    "resourceGroupName": "[resourceGroup().name]",
    "dnsNameForPublicIP": "[toLower(concat('vmd-dns', parameters('masterProfileDnsPrefix')))]",
    "location": "[resourceGroup().location]",
    "imagePublisher": "Canonical",
    "imageOffer": "UbuntuServer",
    "imageSku": "16.04-LTS",
    "imageVersion": "latest",
    "vmSize": "Standard_D2_v2",
    "OSDiskName": "osdisk",
    "nicName": "[concat('vmd-vnic', uniqueString(resourceGroup().id))]",
    "addressPrefix": "10.0.0.0/24",
    "subnetName": "mySubnet",
    "subnetPrefix": "10.0.0.0/24",
    "storageAccountName": "[concat('vmdsa', uniquestring(resourceGroup().id))]",
    "storageAccountType": "Standard_LRS",
    "publicIPAddressName": "[concat('vmd-publicIP', uniqueString(resourceGroup().id))]",
    "publicIPAddressType": "Static",
    "vmStorageAccountContainerName": "vhds",
    "vmName": "[concat('vmd-', uniqueString(resourceGroup().id))]",
    "virtualNetworkName": "[concat('vmd-vnet-', uniqueString(resourceGroup().id))]",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
    "subnetRef": "[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]",
    "networkSecurityGroupName": "[tolower(concat('vmd-nsg',uniquestring(resourceGroup().id)))]",
    "sshKeyPath": "[concat('/home/',parameters('linuxAdminUsername'),'/.ssh/authorized_keys')]",
    "tenantSubscriptionId": "[subscription().subscriptionId]",
    "scriptName": "script",
    "singleQuote": "'",
    "scriptParameters": "[concat('IDENTITY_SYSTEM=','\"',parameters('identitySystem'),'\"',' RESOURCE_GROUP_NAME=','\"',variables('resourceGroupName'),'\"',' PUBLICIP_DNS=','\"',variables('dnsNameForPublicIP'),'\"' ,' TENANT_ID=','\"',subscription().tenantId,'\"' ,' TENANT_SUBSCRIPTION_ID=','\"',variables('tenantSubscriptionId'),'\"',' ADMIN_USERNAME=','\"',parameters('linuxAdminUsername'),'\"',' MASTER_DNS_PREFIX=','\"',parameters('masterProfileDnsPrefix'),'\"' ,' AGENT_COUNT=','\"',parameters('agentPoolProfileCount'),'\"' ,' AGENT_SIZE=','\"',parameters('agentPoolProfileVMSize'),'\"' ,' MASTER_COUNT=','\"',parameters('masterPoolProfileCount'),'\"',' MASTER_SIZE=','\"',parameters('masterPoolProfileVMSize'),'\"' ,' SPN_CLIENT_ID=','\"',parameters('servicePrincipalClientId'),'\"' ,' SPN_CLIENT_SECRET=','\"',parameters('servicePrincipalClientSecret'),'\"' ,' SPN_CLIENT_SECRET_KEYVAULT_ID=','\"',parameters('servicePrincipalCertificateKeyVaultId'),'\"' ,' SPN_CLIENT_SECRET_KEYVAULT_SECRET_NAME=','\"',parameters('servicePrincipalCertificateKeyVaultSecretName'),'\"' ,' K8S_AZURE_CLOUDPROVIDER_VERSION=','\"',parameters('kubernetesAzureCloudProviderVersion'),'\"' ,' REGION_NAME=','\"',variables('location'),'\"' ,' SSH_PUBLICKEY=','\"',parameters('sshPublicKey'),'\"' ,' STORAGE_PROFILE=','\"',parameters('storageProfile'),'\"')]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[toLower(variables('storageAccountName'))]",
      "apiVersion": "2015-06-15",
      "location": "[variables('location')]",
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('networkSecurityGroupName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": [
          {
            "name": "ssh",
            "properties": {
              "description": "Allow SSH",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 200,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddressName')]",
      "location": "[variables('location')]",
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[variables('dnsNameForPublicIP')]"
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[variables('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
        "[variables('networkSecurityGroupName')]"
      ],
      "properties": {
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
        },
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2016-03-30",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('vmName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "osProfile": {
          "customData": "[base64(concat('#cloud-config\n\nwrite_files:\n- path: \"/opt/azure/containers/script.sh\"\n  permissions: \"0744\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    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'))]",
          "computerName": "[variables('vmName')]",
          "adminUsername": "[parameters('linuxAdminUsername')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": "true",
            "ssh": {
              "publicKeys": [
                {
                  "keyData": "[parameters('sshPublicKey')]",
                  "path": "[variables('sshKeyPath')]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[variables('imageSku')]",
            "version": "[variables('imageVersion')]"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob, variables('vmStorageAccountContainerName'),'/',variables('OSDiskName'),'.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": "true",
            "storageUri": "[reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('vmName'),'/LinuxCustomScriptExtension')]",
      "apiVersion": "2016-03-30",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "CustomScript",
        "typeHandlerVersion": "2.0",
        "autoUpgradeMinorVersion": "true",
        "protectedSettings": {
          "commandToExecute": "[concat(variables('scriptParameters'), ' PUBLICIP_FQDN=', '\"', reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn,'\"',' /bin/bash /opt/azure/containers/script.sh >> /var/log/azure/deploy-script-dvm.log 2>&1')]"
        }
      }
    }
  ],
  "outputs": {
    "dvmPublicIpFqdn": {
      "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn]",
      "type": "string"
    }
  }
}