{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "linuxAdminUsername": {
      "type": "string",
      "defaultValue": "azureuser",
      "metadata": {
        "description": "User name for the Linux Virtual Machines that are part of the Kubernetes cluster and DVM."
      }
    },
    "sshPublicKey": {
      "metadata": {
        "description": "SSH public key used for auth to all Linux machines created as part of the the Kubernetes cluster and DVM."
      },
      "type": "string"
    },
    "masterProfileDnsPrefix": {
      "type": "string",
      "metadata": {
        "description": "This must be a region-unique name e.g. k8s-12345. Try to chose it same as the resource group name as best practice."
      }
    },
    "agentPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes Node Pool Profile Count"
      },
      "type": "int"
    },
    "agentPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The VMSize of Kubernetes node VMs"
      },
      "type": "string"
    },
    "masterPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes Master Pool Profile Count"
      },
      "type": "int"
    },
    "masterPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The VMSize of Kubernetes master VMs"
      },
      "type": "string"
    },
    "storageProfile": {
      "defaultValue": "manageddisk",
      "metadata": {
        "description": "The Storage Profile"
      },
      "type": "string"
    },
    "servicePrincipalClientId": {
      "metadata": {
        "description": "The Service Principal application ID (used by the Kubernetes Azure cloud provider). More help here: https://github.com/Azure/aks-engine/blob/master/docs/topics/service-principals.md"
      },
      "type": "securestring"
    },
    "servicePrincipalClientSecret": {
      "metadata": {
        "description": "The Service Principal Client Secret."
      },
      "type": "securestring"
    },
    "identitySystem": {
      "defaultValue": "AzureAD",
      "allowedValues": [
        "AzureAD",
        "ADFS"
      ],
      "metadata": {
        "description": "The identity system of Azure Stack. The value could be AzureAD or ADFS"
      },
      "type": "string"
    },
    "kubernetesAzureCloudProviderVersion": {
      "type": "string",
      "defaultValue": "1.11",
      "metadata": {
        "description": "This is the version for the Kubernetes Azure cloud provider. We would use a custom Kubernetes build specifically for Azure Stack for each version."
      }
    },
    "aksEngineBaseURL": {
      "type": "string",
      "defaultValue": "https://github.com/Azure/aks-engine/releases/download",
      "metadata": {
        "description": "The beginning of the URL for downloading the AKS Engine binary"
      }
    },
    "aksEngineReleaseVersion": {
      "type": "string",
      "defaultValue": "v0.36.4",
      "metadata": {
        "description": "The version of AKS Engine to download"
      }
    },
    "galleryRepository": {
      "type": "string",
      "defaultValue": "msazurestackworkloads/azurestack-gallery",
      "metadata": {
        "description": "Marketplace item repository"
      }
    },
    "galleryBranch": {
      "type": "string",
      "defaultValue": "master",
      "metadata": {
        "description": "Marketplace item branch"
      }
    },
    "clusterDefinitionFileName": {
      "type": "string",
      "defaultValue": "clusterDefinition.json",
      "metadata": {
        "description": "The name of the file containing the cluster definition"
      }
    },
    "kubernetesImageBase": {
      "type": "string",
      "defaultValue": "mcr.microsoft.com/k8s/azurestack/core/",
      "metadata": {
        "description": "The base for Kubernetes images"
      }
    }
  },
  "variables": {
    "resourceGroupName": "[resourceGroup().name]",
    "dnsNameForPublicIP": "[toLower(concat('vmd-dns', parameters('masterProfileDnsPrefix')))]",
    "location": "[resourceGroup().location]",
    "imagePublisher": "Canonical",
    "imageOffer": "UbuntuServer",
    "imageSku": "16.04-LTS",
    "imageVersion": "latest",
    "vmSize": "Standard_D2_v2",
    "OSDiskName": "osdisk",
    "nicName": "[concat('vmd-vnic', uniqueString(resourceGroup().id))]",
    "addressPrefix": "10.0.0.0/24",
    "subnetName": "mySubnet",
    "subnetPrefix": "10.0.0.0/24",
    "storageAccountName": "[concat('vmdsa', uniquestring(resourceGroup().id))]",
    "storageAccountType": "Standard_LRS",
    "publicIPAddressName": "[concat('vmd-publicIP', uniqueString(resourceGroup().id))]",
    "publicIPAddressType": "Static",
    "vmStorageAccountContainerName": "vhds",
    "vmName": "[concat('vmd-', uniqueString(resourceGroup().id))]",
    "virtualNetworkName": "[concat('vmd-vnet-', uniqueString(resourceGroup().id))]",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
    "subnetRef": "[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]",
    "networkSecurityGroupName": "[tolower(concat('vmd-nsg',uniquestring(resourceGroup().id)))]",
    "sshKeyPath": "[concat('/home/',parameters('linuxAdminUsername'),'/.ssh/authorized_keys')]",
    "tenantSubscriptionId": "[subscription().subscriptionId]",
    "scriptName": "script",
    "singleQuote": "'",
    "scriptParameters": "[concat('IDENTITY_SYSTEM=','\"',parameters('identitySystem'),'\"',' RESOURCE_GROUP_NAME=','\"',variables('resourceGroupName'),'\"',' PUBLICIP_DNS=','\"',variables('dnsNameForPublicIP'),'\"' ,' TENANT_ID=','\"',subscription().tenantId,'\"' ,' TENANT_SUBSCRIPTION_ID=','\"',variables('tenantSubscriptionId'),'\"',' ADMIN_USERNAME=','\"',parameters('linuxAdminUsername'),'\"',' MASTER_DNS_PREFIX=','\"',parameters('masterProfileDnsPrefix'),'\"' ,' AGENT_COUNT=','\"',parameters('agentPoolProfileCount'),'\"' ,' AGENT_SIZE=','\"',parameters('agentPoolProfileVMSize'),'\"' ,' MASTER_COUNT=','\"',parameters('masterPoolProfileCount'),'\"',' MASTER_SIZE=','\"',parameters('masterPoolProfileVMSize'),'\"' ,' SPN_CLIENT_ID=','\"',parameters('servicePrincipalClientId'),'\"' ,' SPN_CLIENT_SECRET=','\"',parameters('servicePrincipalClientSecret'),'\"' ,' K8S_AZURE_CLOUDPROVIDER_VERSION=','\"',parameters('kubernetesAzureCloudProviderVersion'),'\"' ,' REGION_NAME=','\"',variables('location'),'\"' ,' SSH_PUBLICKEY=','\"',parameters('sshPublicKey'),'\"' ,' STORAGE_PROFILE=','\"',parameters('storageProfile'),'\"',' AKSE_BASE_URL=','\"',parameters('aksEngineBaseURL'), '\"', ' AKSE_RELEASE_VERSION=','\"',parameters('aksEngineReleaseVersion'),'\"',' GALLERY_REPO=','\"',parameters('galleryRepository'),'\"',' GALLERY_BRANCH=','\"',parameters('galleryBranch'),'\"',' DEFINITION_TEMPLATE_NAME=','\"',parameters('clusterDefinitionFileName'),'\"',' K8S_IMAGE_BASE=','\"',parameters('kubernetesImageBase'),'\"')]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[toLower(variables('storageAccountName'))]",
      "apiVersion": "2015-06-15",
      "location": "[variables('location')]",
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('networkSecurityGroupName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": [
          {
            "name": "ssh",
            "properties": {
              "description": "Allow SSH",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 200,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddressName')]",
      "location": "[variables('location')]",
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[variables('dnsNameForPublicIP')]"
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[variables('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
        "[variables('networkSecurityGroupName')]"
      ],
      "properties": {
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
        },
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2016-03-30",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('vmName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "osProfile": {
          "customData": "[base64(concat('#cloud-config\n\nwrite_files:\n- path: \"/opt/azure/containers/script.sh\"\n  permissions: \"0744\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    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'))]",
          "computerName": "[variables('vmName')]",
          "adminUsername": "[parameters('linuxAdminUsername')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": "true",
            "ssh": {
              "publicKeys": [
                {
                  "keyData": "[parameters('sshPublicKey')]",
                  "path": "[variables('sshKeyPath')]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[variables('imageSku')]",
            "version": "[variables('imageVersion')]"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob, variables('vmStorageAccountContainerName'),'/',variables('OSDiskName'),'.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": "true",
            "storageUri": "[reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('vmName'),'/LinuxCustomScriptExtension')]",
      "apiVersion": "2016-03-30",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "CustomScript",
        "typeHandlerVersion": "2.0",
        "autoUpgradeMinorVersion": "true",
        "protectedSettings": {
          "commandToExecute": "[concat(variables('scriptParameters'), ' PUBLICIP_FQDN=', '\"', reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn,'\"',' /bin/bash /opt/azure/containers/script.sh >> /var/log/azure/deploy-script-dvm.log 2>&1')]"
        }
      }
    }
  ],
  "outputs": {
    "dvmPublicIpFqdn": {
      "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn]",
      "type": "string"
    }
  }
}
