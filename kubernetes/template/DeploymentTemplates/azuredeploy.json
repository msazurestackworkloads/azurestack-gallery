{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "linuxAdminUsername": {
      "type": "string",
      "defaultValue": "azureuser",
      "metadata": {
        "description": "User name for the Linux Virtual Machines that are part of the Kubernetes cluster and DVM."
      }
    },
    "sshPublicKey": {
      "metadata": {
        "description": "SSH public key used for auth to all Linux machines created as part of the the Kubernetes cluster and DVM."
      },
      "type": "string"
    },
    "masterProfileDnsPrefix": {
      "type": "string",
      "metadata": {
        "description": "This must be a region-unique name e.g. k8s-12345. Try to chose it same as the resource group name as best practice."
      }
    },
    "agentPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes Node Pool Profile Count"
      },
      "type": "int"
    },
    "agentPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The VMSize of Kubernetes node VMs"
      },
      "type": "string"
    },
    "masterPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes Master Pool Profile Count"
      },
      "type": "int"
    },
    "masterPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The VMSize of Kubernetes master VMs"
      },
      "type": "string"
    },
    "storageProfile": {
      "defaultValue": "manageddisk",
      "metadata": {
        "description": "The Storage Profile"
      },
      "type": "string"
    },
    "servicePrincipalClientId": {
      "metadata": {
        "description": "The Service Principal application ID (used by the Kubernetes Azure cloud provider). More help here: https://github.com/Azure/aks-engine/blob/master/docs/topics/service-principals.md"
      },
      "type": "securestring"
    },
    "servicePrincipalClientSecret": {
      "metadata": {
        "description": "The Service Principal Client Secret."
      },
      "type": "securestring"
    },
    "identitySystem": {
      "defaultValue": "AzureAD",
      "allowedValues": [
        "AzureAD",
        "ADFS"
      ],
      "metadata": {
        "description": "The identity system of Azure Stack. The value could be AzureAD or ADFS"
      },
      "type": "string"
    },
    "kubernetesAzureCloudProviderVersion": {
      "type": "string",
      "defaultValue": "1.12",
      "metadata": {
        "description": "This is the version for the Kubernetes Azure cloud provider. We would use a custom Kubernetes build specifically for Azure Stack for each version."
      }
    },
    "aksEngineBaseURL": {
      "type": "string",
      "defaultValue": "https://github.com/Azure/aks-engine/releases/download",
      "metadata": {
        "description": "The beginning of the URL for downloading the AKS Engine binary"
      }
    },
    "aksEngineReleaseVersion": {
      "type": "string",
      "defaultValue": "v0.38.5",
      "metadata": {
        "description": "The version of AKS Engine to download"
      }
    },
    "galleryRepository": {
      "type": "string",
      "defaultValue": "msazurestackworkloads/azurestack-gallery",
      "metadata": {
        "description": "Marketplace item repository"
      }
    },
    "galleryBranch": {
      "type": "string",
      "defaultValue": "master",
      "metadata": {
        "description": "Marketplace item branch"
      }
    },
    "clusterDefinitionFileName": {
      "type": "string",
      "defaultValue": "clusterDefinition.json",
      "metadata": {
        "description": "The name of the file containing the cluster definition"
      }
    },
    "kubernetesImageBase": {
      "type": "string",
      "defaultValue": "mcr.microsoft.com/k8s/azurestack/core/",
      "metadata": {
        "description": "The base for Kubernetes images"
      }
    },
    "customVnetName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Name of the custom vnet"
      }
    },
    "masterSubnetName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Name of the master subnet"
      }
    },
    "agentSubnetName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Name of the agent subnet"
      }
    },
    "firstConsecutiveStaticIP": {
      "type": "string",
      "defaultValue": "10.100.0.5",
      "metadata": {
        "description": "First Consective Static IP"
      }
    },
    "networkPlugin": {
      "defaultValue": "flannel",
      "allowedValues": [
        "flannel",
        "azure",
        "kubenet"
      ],
      "metadata": {
        "description": "Network plugin which will deployed in Kubernetes cluster"
      },
      "type": "string"
    },
    "availabilityProfile": {
      "defaultValue": "AvailabilitySet",
      "allowedValues": [
        "AvailabilitySet",
        "VirtualMachineScaleSets"
      ],
      "metadata": {
        "description": "Availability profile that nodes in the Kubernetes cluster will be deployed with"
      },
      "type": "string"
    },
    "nodeDistro": {
      "defaultValue": "ubuntu",
      "allowedValues": [
        "ubuntu",
        "aks-ubuntu-16.04"
      ],
      "metadata": {
        "description": "Node distro to be used to deploy Kubernetes on Azure Stack."
      },
      "type": "string"
    }
  },
  "variables": {
    "resourceGroupName": "[resourceGroup().name]",
    "dnsNameForPublicIP": "[toLower(concat('vmd-dns', parameters('masterProfileDnsPrefix')))]",
    "location": "[resourceGroup().location]",
    "imagePublisher": "Canonical",
    "imageOffer": "UbuntuServer",
    "imageSku": "16.04-LTS",
    "imageVersion": "latest",
    "vmSize": "Standard_D2_v2",
    "OSDiskName": "osdisk",
    "nicName": "[concat('vmd-vnic', uniqueString(resourceGroup().id))]",
    "addressPrefix": "10.0.0.0/24",
    "subnetName": "mySubnet",
    "subnetPrefix": "10.0.0.0/24",
    "storageAccountName": "[concat('vmdsa', uniquestring(resourceGroup().id))]",
    "storageAccountType": "Standard_LRS",
    "publicIPAddressName": "[concat('vmd-publicIP', uniqueString(resourceGroup().id))]",
    "publicIPAddressType": "Static",
    "vmStorageAccountContainerName": "vhds",
    "vmName": "[concat('vmd-', uniqueString(resourceGroup().id))]",
    "virtualNetworkName": "[concat('vmd-vnet-', uniqueString(resourceGroup().id))]",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
    "subnetRef": "[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]",
    "networkSecurityGroupName": "[tolower(concat('vmd-nsg',uniquestring(resourceGroup().id)))]",
    "sshKeyPath": "[concat('/home/',parameters('linuxAdminUsername'),'/.ssh/authorized_keys')]",
    "tenantSubscriptionId": "[subscription().subscriptionId]",
    "scriptName": "script",
    "singleQuote": "'",
    "scriptParameters": "[concat('IDENTITY_SYSTEM=','\"',parameters('identitySystem'),'\"',' NETWORK_PLUGIN=','\"',parameters('networkPlugin'),'\"',' AVAILABILITY_PROFILE=','\"',parameters('availabilityProfile'),'\"',' FIRST_CONSECUTIVE_STATIC_IP=','\"',parameters('firstConsecutiveStaticIP'),'\"',' AGENT_SUBNET_NAME=','\"',parameters('agentSubnetName'),'\"',' MASTER_SUBNET_NAME=','\"',parameters('masterSubnetName'),'\"',' CUSTOM_VNET_NAME=','\"',parameters('customVnetName'),'\"',' NODE_DISTRO=','\"',parameters('nodeDistro'),'\"',' RESOURCE_GROUP_NAME=','\"',variables('resourceGroupName'),'\"',' PUBLICIP_DNS=','\"',variables('dnsNameForPublicIP'),'\"' ,' TENANT_ID=','\"',subscription().tenantId,'\"' ,' TENANT_SUBSCRIPTION_ID=','\"',variables('tenantSubscriptionId'),'\"',' ADMIN_USERNAME=','\"',parameters('linuxAdminUsername'),'\"',' MASTER_DNS_PREFIX=','\"',parameters('masterProfileDnsPrefix'),'\"' ,' AGENT_COUNT=','\"',parameters('agentPoolProfileCount'),'\"' ,' AGENT_SIZE=','\"',parameters('agentPoolProfileVMSize'),'\"' ,' MASTER_COUNT=','\"',parameters('masterPoolProfileCount'),'\"',' MASTER_SIZE=','\"',parameters('masterPoolProfileVMSize'),'\"' ,' SPN_CLIENT_ID=','\"',parameters('servicePrincipalClientId'),'\"' ,' SPN_CLIENT_SECRET=','\"',parameters('servicePrincipalClientSecret'),'\"' ,' K8S_AZURE_CLOUDPROVIDER_VERSION=','\"',parameters('kubernetesAzureCloudProviderVersion'),'\"' ,' REGION_NAME=','\"',variables('location'),'\"' ,' SSH_PUBLICKEY=','\"',parameters('sshPublicKey'),'\"' ,' STORAGE_PROFILE=','\"',parameters('storageProfile'),'\"',' AKSE_BASE_URL=','\"',parameters('aksEngineBaseURL'), '\"', ' AKSE_RELEASE_VERSION=','\"',parameters('aksEngineReleaseVersion'),'\"',' GALLERY_REPO=','\"',parameters('galleryRepository'),'\"',' GALLERY_BRANCH=','\"',parameters('galleryBranch'),'\"',' DEFINITION_TEMPLATE_NAME=','\"',parameters('clusterDefinitionFileName'),'\"',' K8S_IMAGE_BASE=','\"',parameters('kubernetesImageBase'),'\"')]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[toLower(variables('storageAccountName'))]",
      "apiVersion": "2015-06-15",
      "location": "[variables('location')]",
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('networkSecurityGroupName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": [
          {
            "name": "ssh",
            "properties": {
              "description": "Allow SSH",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 200,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddressName')]",
      "location": "[variables('location')]",
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[variables('dnsNameForPublicIP')]"
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[variables('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
        "[variables('networkSecurityGroupName')]"
      ],
      "properties": {
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
        },
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2016-03-30",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('vmName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "osProfile": {
          "customData": "[base64(concat('#cloud-config\n\nwrite_files:\n- path: \"/opt/azure/containers/script.sh\"\n  permissions: \"0744\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    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'))]",
          "computerName": "[variables('vmName')]",
          "adminUsername": "[parameters('linuxAdminUsername')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": "true",
            "ssh": {
              "publicKeys": [
                {
                  "keyData": "[parameters('sshPublicKey')]",
                  "path": "[variables('sshKeyPath')]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[variables('imageSku')]",
            "version": "[variables('imageVersion')]"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob, variables('vmStorageAccountContainerName'),'/',variables('OSDiskName'),'.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": "true",
            "storageUri": "[reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('vmName'),'/LinuxCustomScriptExtension')]",
      "apiVersion": "2016-03-30",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "CustomScript",
        "typeHandlerVersion": "2.0",
        "autoUpgradeMinorVersion": "true",
        "protectedSettings": {
          "commandToExecute": "[concat(variables('scriptParameters'), ' PUBLICIP_FQDN=', '\"', reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn,'\"',' /bin/bash /opt/azure/containers/script.sh >> /var/log/azure/deploy-script-dvm.log 2>&1')]"
        }
      }
    }
  ],
  "outputs": {
    "dvmPublicIpFqdn": {
      "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn]",
      "type": "string"
    }
  }
}
