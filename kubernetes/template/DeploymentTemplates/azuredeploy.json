{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "linuxAdminUsername": {
      "type": "string",
      "defaultValue": "azureuser",
      "metadata": {
        "description": "User name for the Linux virtual machines that are part of the Kubernetes cluster and DVM."
      }
    },
    "sshPublicKey": {
      "metadata": {
        "description": "SSH public key used for auth to all Linux machines created as part of the the Kubernetes cluster and DVM."
      },
      "type": "string"
    },
    "masterProfileDnsPrefix": {
      "type": "string",
      "metadata": {
        "description": "This must be a region-unique name e.g. k8s-12345. Try to chose it same as the resource group name as best practice."
      }
    },
    "agentPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes linux node pool profile count"
      },
      "type": "int"
    },
    "agentPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The virtual machine size of the Kubernetes linux agent nodes"
      },
      "type": "string"
    },
    "masterPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes master pool profile count"
      },
      "type": "int"
    },
    "masterPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The virtual machine size of the Kubernetes master nodes"
      },
      "type": "string"
    },
    "storageProfile": {
      "defaultValue": "manageddisk",
      "metadata": {
        "description": "The Storage Profile"
      },
      "type": "string"
    },
    "servicePrincipalClientId": {
      "metadata": {
        "description": "The Service Principal application ID (used by the Kubernetes Azure cloud provider). More help here: https://github.com/Azure/aks-engine/blob/master/docs/topics/service-principals.md"
      },
      "type": "securestring"
    },
    "servicePrincipalClientSecret": {
      "metadata": {
        "description": "The Service Principal Client Secret."
      },
      "type": "securestring"
    },
    "identitySystem": {
      "defaultValue": "AzureAD",
      "allowedValues": [
        "AzureAD",
        "ADFS"
      ],
      "metadata": {
        "description": "The identity system of Azure Stack. The value could be AzureAD or ADFS"
      },
      "type": "string"
    },
    "kubernetesAzureCloudProviderVersion": {
      "type": "string",
      "defaultValue": "1.13",
      "metadata": {
        "description": "This is the version for the Kubernetes Azure cloud provider. We would use a custom Kubernetes build specifically for Azure Stack for each version."
      }
    },
    "aksEngineBaseURL": {
      "type": "string",
      "defaultValue": "https://github.com/Azure/aks-engine/releases/download",
      "metadata": {
        "description": "The beginning of the URL for downloading the AKS Engine binary"
      }
    },
    "aksEngineReleaseVersion": {
      "type": "string",
      "defaultValue": "v0.41.2",
      "metadata": {
        "description": "The version of AKS Engine to download"
      }
    },
    "galleryRepository": {
      "type": "string",
      "defaultValue": "msazurestackworkloads/azurestack-gallery",
      "metadata": {
        "description": "Marketplace item repository"
      }
    },
    "galleryBranch": {
      "type": "string",
      "defaultValue": "master",
      "metadata": {
        "description": "Marketplace item branch"
      }
    },
    "clusterDefinitionFileName": {
      "type": "string",
      "defaultValue": "clusterDefinition.json",
      "metadata": {
        "description": "The name of the file containing the cluster definition"
      }
    },
    "kubernetesImageBase": {
      "type": "string",
      "defaultValue": "mcr.microsoft.com/k8s/azurestack/core/",
      "metadata": {
        "description": "The base for Kubernetes images"
      }
    },
    "customVnetName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Name of the custom vnet"
      }
    },
    "masterSubnetName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Name of the master subnet"
      }
    },
    "agentSubnetName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Name of the agent subnet"
      }
    },
    "firstConsecutiveStaticIP": {
      "type": "string",
      "defaultValue": "10.100.0.5",
      "metadata": {
        "description": "First Consective Static IP"
      }
    },
    "networkPlugin": {
      "defaultValue": "kubenet",
      "allowedValues": [
        "flannel",
        "azure",
        "kubenet"
      ],
      "metadata": {
        "description": "Network plugin which will deployed in Kubernetes cluster"
      },
      "type": "string"
    },
    "availabilityProfile": {
      "defaultValue": "AvailabilitySet",
      "allowedValues": [
        "AvailabilitySet",
        "VirtualMachineScaleSets"
      ],
      "metadata": {
        "description": "Availability profile that nodes in the Kubernetes cluster will be deployed with"
      },
      "type": "string"
    },
    "windowsAgentPoolProfileCount": {
      "defaultValue": "0",      
      "metadata": {
        "description": "Kubernetes Windows node pool profile count"
      },
      "type": "string"
    },
    "windowsAgentPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The virtual machine size of the Kubernetes Windows agent nodes"
      },
      "type": "string"
    },
    "windowsAdminUsername": {
      "defaultValue": "azureuser",
      "metadata": {
        "description": "User name for the Windows virtual machines that are part of the Kubernetes cluster."
      },
      "type": "string"
    },
    "windowsAdminPassword": {
      "defaultValue": "",
      "metadata": {
        "description": "Password for the Windows virtual machines that are part of the Kubernetes cluster."
      },
      "type": "securestring"
    },
    "customWindowsPackageURL": {
      "defaultValue": "",
      "metadata": {
        "description": "Custom Windows K8s zip location which will be used to deploy(kubelet, kubeproxy) on Windows node."
      },
      "type": "string"
    },
    "nodeDistro": {
      "defaultValue": "ubuntu",
      "allowedValues": [
        "ubuntu",
        "aks-ubuntu-16.04"
      ],
      "metadata": {
        "description": "Node distro to be used to deploy Kubernetes on Azure Stack."
      },
      "type": "string"
    }
  },
  "variables": {
    "resourceGroupName": "[resourceGroup().name]",
    "dnsNameForPublicIP": "[toLower(concat('vmd-dns', parameters('masterProfileDnsPrefix')))]",
    "location": "[resourceGroup().location]",
    "imagePublisher": "Canonical",
    "imageOffer": "UbuntuServer",
    "imageSku": "16.04-LTS",
    "imageVersion": "latest",
    "vmSize": "Standard_D2_v2",
    "OSDiskName": "osdisk",
    "nicName": "[concat('vmd-vnic', uniqueString(resourceGroup().id))]",
    "addressPrefix": "10.0.0.0/24",
    "subnetName": "mySubnet",
    "subnetPrefix": "10.0.0.0/24",
    "storageAccountName": "[concat('vmdsa', uniquestring(resourceGroup().id))]",
    "storageAccountType": "Standard_LRS",
    "publicIPAddressName": "[concat('vmd-publicIP', uniqueString(resourceGroup().id))]",
    "publicIPAddressType": "Static",
    "vmStorageAccountContainerName": "vhds",
    "vmName": "[concat('vmd-', uniqueString(resourceGroup().id))]",
    "virtualNetworkName": "[concat('vmd-vnet-', uniqueString(resourceGroup().id))]",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
    "subnetRef": "[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]",
    "networkSecurityGroupName": "[tolower(concat('vmd-nsg',uniquestring(resourceGroup().id)))]",
    "sshKeyPath": "[concat('/home/',parameters('linuxAdminUsername'),'/.ssh/authorized_keys')]",
    "tenantSubscriptionId": "[subscription().subscriptionId]",
    "scriptName": "script",
    "singleQuote": "'",
    "scriptParameters": "[concat('IDENTITY_SYSTEM=','\"',parameters('identitySystem'),'\"',' WINDOWS_CUSTOM_PACKAGE=','\"',parameters('customWindowsPackageURL'),'\"' ,' WINDOWS_AGENT_COUNT=','\"',parameters('windowsAgentPoolProfileCount'),'\"' ,' WINDOWS_AGENT_SIZE=','\"',parameters('windowsAgentPoolProfileVMSize'),'\"',' WINDOWS_ADMIN_USERNAME=','\"',parameters('windowsAdminUsername'),'\"',' WINDOWS_ADMIN_PASSWORD=','\"',parameters('windowsAdminPassword'),'\"',' NETWORK_PLUGIN=','\"',parameters('networkPlugin'),'\"',' AVAILABILITY_PROFILE=','\"',parameters('availabilityProfile'),'\"',' FIRST_CONSECUTIVE_STATIC_IP=','\"',parameters('firstConsecutiveStaticIP'),'\"',' AGENT_SUBNET_NAME=','\"',parameters('agentSubnetName'),'\"',' MASTER_SUBNET_NAME=','\"',parameters('masterSubnetName'),'\"',' CUSTOM_VNET_NAME=','\"',parameters('customVnetName'),'\"',' NODE_DISTRO=','\"',parameters('nodeDistro'),'\"',' RESOURCE_GROUP_NAME=','\"',variables('resourceGroupName'),'\"',' PUBLICIP_DNS=','\"',variables('dnsNameForPublicIP'),'\"' ,' TENANT_ID=','\"',subscription().tenantId,'\"' ,' TENANT_SUBSCRIPTION_ID=','\"',variables('tenantSubscriptionId'),'\"',' ADMIN_USERNAME=','\"',parameters('linuxAdminUsername'),'\"',' MASTER_DNS_PREFIX=','\"',parameters('masterProfileDnsPrefix'),'\"' ,' AGENT_COUNT=','\"',parameters('agentPoolProfileCount'),'\"' ,' AGENT_SIZE=','\"',parameters('agentPoolProfileVMSize'),'\"' ,' MASTER_COUNT=','\"',parameters('masterPoolProfileCount'),'\"',' MASTER_SIZE=','\"',parameters('masterPoolProfileVMSize'),'\"' ,' SPN_CLIENT_ID=','\"',parameters('servicePrincipalClientId'),'\"' ,' SPN_CLIENT_SECRET=','\"',parameters('servicePrincipalClientSecret'),'\"' ,' K8S_AZURE_CLOUDPROVIDER_VERSION=','\"',parameters('kubernetesAzureCloudProviderVersion'),'\"' ,' REGION_NAME=','\"',variables('location'),'\"' ,' SSH_PUBLICKEY=','\"',parameters('sshPublicKey'),'\"' ,' STORAGE_PROFILE=','\"',parameters('storageProfile'),'\"',' AKSE_BASE_URL=','\"',parameters('aksEngineBaseURL'), '\"', ' AKSE_RELEASE_VERSION=','\"',parameters('aksEngineReleaseVersion'),'\"',' GALLERY_REPO=','\"',parameters('galleryRepository'),'\"',' GALLERY_BRANCH=','\"',parameters('galleryBranch'),'\"',' DEFINITION_TEMPLATE_NAME=','\"',parameters('clusterDefinitionFileName'),'\"',' K8S_IMAGE_BASE=','\"',parameters('kubernetesImageBase'),'\"')]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[toLower(variables('storageAccountName'))]",
      "apiVersion": "2015-06-15",
      "location": "[variables('location')]",
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('networkSecurityGroupName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": [
          {
            "name": "ssh",
            "properties": {
              "description": "Allow SSH",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 200,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddressName')]",
      "location": "[variables('location')]",
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[variables('dnsNameForPublicIP')]"
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[variables('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
        "[variables('networkSecurityGroupName')]"
      ],
      "properties": {
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
        },
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2016-03-30",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('vmName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "osProfile": {
          "customData": "[base64(concat('#cloud-config\n\nwrite_files:\n- path: \"/opt/azure/containers/script.sh\"\n  permissions: \"0744\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    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'))]",
          "computerName": "[variables('vmName')]",
          "adminUsername": "[parameters('linuxAdminUsername')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": "true",
            "ssh": {
              "publicKeys": [
                {
                  "keyData": "[parameters('sshPublicKey')]",
                  "path": "[variables('sshKeyPath')]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[variables('imageSku')]",
            "version": "[variables('imageVersion')]"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob, variables('vmStorageAccountContainerName'),'/',variables('OSDiskName'),'.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": "true",
            "storageUri": "[reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('vmName'),'/LinuxCustomScriptExtension')]",
      "apiVersion": "2016-03-30",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "CustomScript",
        "typeHandlerVersion": "2.0",
        "autoUpgradeMinorVersion": "true",
        "protectedSettings": {
          "commandToExecute": "[concat(variables('scriptParameters'), ' PUBLICIP_FQDN=', '\"', reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn,'\"',' /bin/bash /opt/azure/containers/script.sh >> /var/log/azure/deploy-script-dvm.log 2>&1')]"
        }
      }
    }
  ],
  "outputs": {
    "dvmPublicIpFqdn": {
      "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn]",
      "type": "string"
    }
  }
}
