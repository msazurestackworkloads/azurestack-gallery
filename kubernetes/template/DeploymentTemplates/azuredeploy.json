{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "linuxAdminUsername": {
      "type": "string",
      "defaultValue": "azureuser",
      "metadata": {
        "description": "User name for the Linux Virtual Machines that are part of the Kubernetes cluster and DVM."
      }
    },
    "sshPublicKey": {
      "metadata": {
        "description": "SSH public key used for auth to all Linux machines created as part of the the Kubernetes cluster and DVM."
      },
      "type": "string"
    },
    "masterProfileDnsPrefix": {
      "type": "string",
      "metadata": {
        "description": "This must be a region-unique name e.g. k8s-12345. Try to chose it same as the resource group name as best practice."
      }
    },
    "agentPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes Node Pool Profile Count"
      },
      "type": "int"
    },
    "agentPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The VMSize of Kubernetes node VMs"
      },
      "type": "string"
    },
    "masterPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes Master Pool Profile Count"
      },
      "type": "int"
    },
    "masterPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The VMSize of Kubernetes master VMs"
      },
      "type": "string"
    },
    "storageProfile": {
      "defaultValue": "manageddisk",
      "metadata": {
        "description": "The Storage Profile"
      },
      "type": "string"
    },
    "servicePrincipalClientId": {
      "metadata": {
        "description": "The Service Principal application ID (used by the Kubernetes Azure cloud provider). More help here: https://github.com/Azure/aks-engine/blob/master/docs/topics/service-principals.md"
      },
      "type": "securestring"
    },
    "servicePrincipalClientSecret": {
      "metadata": {
        "description": "The Service Principal Client Secret."
      },
      "type": "securestring"
    },
    "identitySystem": {
      "defaultValue": "AzureAD",
      "allowedValues": [
        "AzureAD",
        "ADFS"
      ],
      "metadata": {
        "description": "The identity system of Azure Stack. The value could be AzureAD or ADFS"
      },
      "type": "string"
    },
    "kubernetesAzureCloudProviderVersion": {
      "type": "string",
      "defaultValue": "1.11",
      "metadata": {
        "description": "This is the version for the Kubernetes Azure cloud provider. We would use a custom Kubernetes build specifically for Azure Stack for each version."
      }
    }
  },
  "variables": {
    "resourceGroupName": "[resourceGroup().name]",
    "dnsNameForPublicIP": "[toLower(concat('vmd-dns', parameters('masterProfileDnsPrefix')))]",
    "location": "[resourceGroup().location]",
    "imagePublisher": "Canonical",
    "imageOffer": "UbuntuServer",
    "imageSku": "16.04-LTS",
    "imageVersion": "latest",
    "vmSize": "Standard_D2_v2",
    "OSDiskName": "osdisk",
    "nicName": "[concat('vmd-vnic', uniqueString(resourceGroup().id))]",
    "addressPrefix": "10.0.0.0/24",
    "subnetName": "mySubnet",
    "subnetPrefix": "10.0.0.0/24",
    "storageAccountName": "[concat('vmdsa', uniquestring(resourceGroup().id))]",
    "storageAccountType": "Standard_LRS",
    "publicIPAddressName": "[concat('vmd-publicIP', uniqueString(resourceGroup().id))]",
    "publicIPAddressType": "Static",
    "vmStorageAccountContainerName": "vhds",
    "vmName": "[concat('vmd-', uniqueString(resourceGroup().id))]",
    "virtualNetworkName": "[concat('vmd-vnet-', uniqueString(resourceGroup().id))]",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
    "subnetRef": "[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]",
    "networkSecurityGroupName": "[tolower(concat('vmd-nsg',uniquestring(resourceGroup().id)))]",
    "sshKeyPath": "[concat('/home/',parameters('linuxAdminUsername'),'/.ssh/authorized_keys')]",
    "tenantSubscriptionId": "[subscription().subscriptionId]",
    "scriptName": "script",
    "singleQuote": "'",
    "scriptParameters": "[concat('IDENTITY_SYSTEM=','\"',parameters('identitySystem'),'\"',' RESOURCE_GROUP_NAME=','\"',variables('resourceGroupName'),'\"',' PUBLICIP_DNS=','\"',variables('dnsNameForPublicIP'),'\"' ,' TENANT_ID=','\"',subscription().tenantId,'\"' ,' TENANT_SUBSCRIPTION_ID=','\"',variables('tenantSubscriptionId'),'\"',' ADMIN_USERNAME=','\"',parameters('linuxAdminUsername'),'\"',' MASTER_DNS_PREFIX=','\"',parameters('masterProfileDnsPrefix'),'\"' ,' AGENT_COUNT=','\"',parameters('agentPoolProfileCount'),'\"' ,' AGENT_SIZE=','\"',parameters('agentPoolProfileVMSize'),'\"' ,' MASTER_COUNT=','\"',parameters('masterPoolProfileCount'),'\"',' MASTER_SIZE=','\"',parameters('masterPoolProfileVMSize'),'\"' ,' SPN_CLIENT_ID=','\"',parameters('servicePrincipalClientId'),'\"' ,' SPN_CLIENT_SECRET=','\"',parameters('servicePrincipalClientSecret'),'\"' ,' K8S_AZURE_CLOUDPROVIDER_VERSION=','\"',parameters('kubernetesAzureCloudProviderVersion'),'\"' ,' REGION_NAME=','\"',variables('location'),'\"' ,' SSH_PUBLICKEY=','\"',parameters('sshPublicKey'),'\"' ,' STORAGE_PROFILE=','\"',parameters('storageProfile'),'\"')]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[toLower(variables('storageAccountName'))]",
      "apiVersion": "2015-06-15",
      "location": "[variables('location')]",
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('networkSecurityGroupName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": [
          {
            "name": "ssh",
            "properties": {
              "description": "Allow SSH",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 200,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddressName')]",
      "location": "[variables('location')]",
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[variables('dnsNameForPublicIP')]"
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[variables('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
        "[variables('networkSecurityGroupName')]"
      ],
      "properties": {
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
        },
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2016-03-30",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('vmName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "osProfile": {
          "customData": "[base64(concat('#cloud-config\n\nwrite_files:\n- path: \"/opt/azure/containers/script.sh\"\n  permissions: \"0744\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    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'))]",
          "computerName": "[variables('vmName')]",
          "adminUsername": "[parameters('linuxAdminUsername')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": "true",
            "ssh": {
              "publicKeys": [
                {
                  "keyData": "[parameters('sshPublicKey')]",
                  "path": "[variables('sshKeyPath')]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[variables('imageSku')]",
            "version": "[variables('imageVersion')]"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob, variables('vmStorageAccountContainerName'),'/',variables('OSDiskName'),'.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": "true",
            "storageUri": "[reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('vmName'),'/LinuxCustomScriptExtension')]",
      "apiVersion": "2016-03-30",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "CustomScript",
        "typeHandlerVersion": "2.0",
        "autoUpgradeMinorVersion": "true",
        "protectedSettings": {
          "commandToExecute": "[concat(variables('scriptParameters'), ' PUBLICIP_FQDN=', '\"', reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn,'\"',' /bin/bash /opt/azure/containers/script.sh >> /var/log/azure/deploy-script-dvm.log 2>&1')]"
        }
      }
    }
  ],
  "outputs": {
    "dvmPublicIpFqdn": {
      "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn]",
      "type": "string"
    }
  }
}
