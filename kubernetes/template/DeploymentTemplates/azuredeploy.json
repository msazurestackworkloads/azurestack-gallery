{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "linuxAdminUsername": {
      "type": "string",
      "defaultValue": "azureuser",
      "metadata": {
        "description": "User name for the Linux Virtual Machines that are part of the Kubernetes cluster and DVM."
      }
    },
    "sshPublicKey": {
      "metadata": {
        "description": "SSH public key used for auth to all Linux machines created as part of the the Kubernetes cluster and DVM."
      },
      "type": "string"
    },
    "masterProfileDnsPrefix": {
      "type": "string",
      "metadata": {
        "description": "This must be a region-unique name e.g. k8s-12345. Try to chose it same as the resource group name as best practice."
      }
    },
    "agentPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes Node Pool Profile Count"
      },
      "type": "int"
    },
    "agentPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The VMSize of Kubernetes node VMs"
      },
      "type": "string"
    },
    "masterPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes Master Pool Profile Count"
      },
      "type": "int"
    },
    "masterPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The VMSize of Kubernetes master VMs"
      },
      "type": "string"
    },
    "storageProfile": {
      "defaultValue": "blobdisk",
      "metadata": {
        "description": "The Storage Profile"
      },
      "type": "string"
    },
    "servicePrincipalClientId": {
      "metadata": {
        "description": "The Service Principal application ID (used by the Kubernetes Azure cloud provider). More help here: https://github.com/Azure/acs-engine/blob/master/docs/serviceprincipal.md"
      },
      "type": "securestring"
    },
    "servicePrincipalClientSecret": {
      "metadata": {
        "description": "The Service Principal Client Secret."
      },
      "type": "securestring"
    },
    "servicePrincipalCertificateKeyVaultId": {
      "defaultValue": "servicePrincipalCertificateKeyVaultId",
      "metadata": {
        "description": "the service Principal Certificate KeyVault Id"
      },
      "type": "string"
    },
    "servicePrincipalCertificateKeyVaultSecretName": {
      "defaultValue": "servicePrincipalCertificateKeyVaultSecretName",
      "metadata": {
        "description": "The service Principal Certificate KeyVault SecretName"
      },
      "type": "string"
    },
    "identitySystem": {
      "defaultValue": "AzureAD",
      "allowedValues": [
        "AzureAD",
        "ADFS"
      ],
      "metadata": {
        "description": "The identity system of azure stack. The value could be AzureAD or ADFS"
      },
      "type": "string"
    },
    "kubernetesAzureCloudProviderVersion": {
      "type": "string",
      "defaultValue": "1.11",
      "metadata": {
        "description": "This is the version for the kubernetes Azure cloud provider. We would use a custom kubernetes build specifically for AzureStack for each version."
      }
    }
  },
  "variables": {
    "resourceGroupName": "[resourceGroup().name]",
    "dnsNameForPublicIP": "[toLower(concat('vmd-dns', parameters('masterProfileDnsPrefix')))]",
    "location": "[resourceGroup().location]",
    "imagePublisher": "Canonical",
    "imageOffer": "UbuntuServer",
    "imageSku": "16.04-LTS",
    "imageVersion": "latest",
    "vmSize": "Standard_D2_v2",
    "OSDiskName": "osdisk",
    "nicName": "[concat('vmd-vnic', uniqueString(resourceGroup().id))]",
    "addressPrefix": "10.0.0.0/24",
    "subnetName": "mySubnet",
    "subnetPrefix": "10.0.0.0/24",
    "storageAccountName": "[concat('vmdsa', uniquestring(resourceGroup().id))]",
    "storageAccountType": "Standard_LRS",
    "publicIPAddressName": "[concat('vmd-publicIP', uniqueString(resourceGroup().id))]",
    "publicIPAddressType": "Static",
    "vmStorageAccountContainerName": "vhds",
    "vmName": "[concat('vmd-', uniqueString(resourceGroup().id))]",
    "virtualNetworkName": "[concat('vmd-vnet-', uniqueString(resourceGroup().id))]",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
    "subnetRef": "[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]",
    "networkSecurityGroupName": "[tolower(concat('vmd-nsg',uniquestring(resourceGroup().id)))]",
    "sshKeyPath": "[concat('/home/',parameters('linuxAdminUsername'),'/.ssh/authorized_keys')]",
    "tenantSubscriptionId": "[subscription().subscriptionId]",
    "scriptName": "script",
    "singleQuote": "'",
    "scriptParameters": "[concat('IDENTITY_SYSTEM=','\"',parameters('identitySystem'),'\"',' RESOURCE_GROUP_NAME=','\"',variables('resourceGroupName'),'\"',' PUBLICIP_DNS=','\"',variables('dnsNameForPublicIP'),'\"' ,' TENANT_ID=','\"',subscription().tenantId,'\"' ,' TENANT_SUBSCRIPTION_ID=','\"',variables('tenantSubscriptionId'),'\"',' ADMIN_USERNAME=','\"',parameters('linuxAdminUsername'),'\"',' MASTER_DNS_PREFIX=','\"',parameters('masterProfileDnsPrefix'),'\"' ,' AGENT_COUNT=','\"',parameters('agentPoolProfileCount'),'\"' ,' AGENT_SIZE=','\"',parameters('agentPoolProfileVMSize'),'\"' ,' MASTER_COUNT=','\"',parameters('masterPoolProfileCount'),'\"',' MASTER_SIZE=','\"',parameters('masterPoolProfileVMSize'),'\"' ,' SPN_CLIENT_ID=','\"',parameters('servicePrincipalClientId'),'\"' ,' SPN_CLIENT_SECRET=','\"',parameters('servicePrincipalClientSecret'),'\"' ,' SPN_CLIENT_SECRET_KEYVAULT_ID=','\"',parameters('servicePrincipalCertificateKeyVaultId'),'\"' ,' SPN_CLIENT_SECRET_KEYVAULT_SECRET_NAME=','\"',parameters('servicePrincipalCertificateKeyVaultSecretName'),'\"' ,' K8S_AZURE_CLOUDPROVIDER_VERSION=','\"',parameters('kubernetesAzureCloudProviderVersion'),'\"' ,' REGION_NAME=','\"',variables('location'),'\"' ,' SSH_PUBLICKEY=','\"',parameters('sshPublicKey'),'\"' ,' STORAGE_PROFILE=','\"',parameters('storageProfile'),'\"')]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[toLower(variables('storageAccountName'))]",
      "apiVersion": "2015-06-15",
      "location": "[variables('location')]",
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('networkSecurityGroupName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": [
          {
            "name": "ssh",
            "properties": {
              "description": "Allow SSH",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 200,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddressName')]",
      "location": "[variables('location')]",
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[variables('dnsNameForPublicIP')]"
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[variables('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
        "[variables('networkSecurityGroupName')]"
      ],
      "properties": {
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
        },
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2016-03-30",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('vmName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "osProfile": {
          "customData": "[base64(concat('#cloud-config\n\nwrite_files:\n- path: \"/opt/azure/containers/script.sh\"\n  permissions: \"0744\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    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'))]",
          "computerName": "[variables('vmName')]",
          "adminUsername": "[parameters('linuxAdminUsername')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": "true",
            "ssh": {
              "publicKeys": [
                {
                  "keyData": "[parameters('sshPublicKey')]",
                  "path": "[variables('sshKeyPath')]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[variables('imageSku')]",
            "version": "[variables('imageVersion')]"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob, variables('vmStorageAccountContainerName'),'/',variables('OSDiskName'),'.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": "true",
            "storageUri": "[reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('vmName'),'/LinuxCustomScriptExtension')]",
      "apiVersion": "2016-03-30",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "CustomScript",
        "typeHandlerVersion": "2.0",
        "autoUpgradeMinorVersion": "true",
        "protectedSettings": {
          "commandToExecute": "[concat(variables('scriptParameters'), ' PUBLICIP_FQDN=', '\"', reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn,'\"',' /bin/bash /opt/azure/containers/script.sh >> /var/log/azure/acsengine-kubernetes-dvm.log 2>&1')]"
        }
      }
    }
  ],
  "outputs": {
    "dvmPublicIpFqdn": {
      "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn]",
      "type": "string"
    }
  }
}