{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "linuxAdminUsername": {
      "type": "string",
      "defaultValue": "azureuser",
      "metadata": {
        "description": "User name for the Linux virtual machines that are part of the Kubernetes cluster and DVM."
      }
    },
    "sshPublicKey": {
      "metadata": {
        "description": "SSH public key used for auth to all Linux machines created as part of the the Kubernetes cluster and DVM."
      },
      "type": "string"
    },
    "masterProfileDnsPrefix": {
      "type": "string",
      "metadata": {
        "description": "This must be a region-unique name e.g. k8s-12345. Try to chose it same as the resource group name as best practice."
      }
    },
    "agentPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes linux node pool profile count"
      },
      "type": "int"
    },
    "agentPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The virtual machine size of the Kubernetes linux agent nodes"
      },
      "type": "string"
    },
    "masterPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes master pool profile count"
      },
      "type": "int"
    },
    "masterPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The virtual machine size of the Kubernetes master nodes"
      },
      "type": "string"
    },
    "storageProfile": {
      "defaultValue": "manageddisk",
      "metadata": {
        "description": "The Storage Profile"
      },
      "type": "string"
    },
    "servicePrincipalClientId": {
      "metadata": {
        "description": "The Service Principal application ID (used by the Kubernetes Azure cloud provider). More help here: https://github.com/Azure/aks-engine/blob/master/docs/topics/service-principals.md"
      },
      "type": "securestring"
    },
    "servicePrincipalClientSecret": {
      "metadata": {
        "description": "The Service Principal Client Secret."
      },
      "type": "securestring"
    },
    "identitySystem": {
      "defaultValue": "AzureAD",
      "allowedValues": [
        "AzureAD",
        "ADFS"
      ],
      "metadata": {
        "description": "The identity system of Azure Stack. The value could be AzureAD or ADFS"
      },
      "type": "string"
    },
    "kubernetesAzureCloudProviderVersion": {
      "type": "string",
      "defaultValue": "1.14.7",
      "metadata": {
        "description": "This is the version for the Kubernetes Azure cloud provider. We would use a custom Kubernetes build specifically for Azure Stack for each version."
      }
    },
    "aksEngineBaseURL": {
      "type": "string",
      "defaultValue": "https://github.com/Azure/aks-engine/releases/download",
      "metadata": {
        "description": "The beginning of the URL for downloading the AKS Engine binary"
      }
    },
    "aksEngineReleaseVersion": {
      "type": "string",
      "defaultValue": "v0.48.0",
      "metadata": {
        "description": "The version of AKS Engine to download"
      }
    },
    "galleryRepository": {
      "type": "string",
      "defaultValue": "msazurestackworkloads/azurestack-gallery",
      "metadata": {
        "description": "Marketplace item repository"
      }
    },
    "galleryBranch": {
      "type": "string",
      "defaultValue": "master",
      "metadata": {
        "description": "Marketplace item branch"
      }
    },
    "clusterDefinitionFileName": {
      "type": "string",
      "defaultValue": "clusterDefinition.json",
      "metadata": {
        "description": "The name of the file containing the cluster definition"
      }
    },
    "customVnetName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Name of the custom vnet"
      }
    },
    "masterSubnetName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Name of the master subnet"
      }
    },
    "agentSubnetName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Name of the agent subnet"
      }
    },
    "firstConsecutiveStaticIP": {
      "type": "string",
      "defaultValue": "10.100.0.5",
      "metadata": {
        "description": "First Consective Static IP"
      }
    },
    "networkPlugin": {
      "defaultValue": "kubenet",
      "allowedValues": [
        "flannel",
        "azure",
        "kubenet"
      ],
      "metadata": {
        "description": "Network plugin which will deployed in Kubernetes cluster"
      },
      "type": "string"
    },
    "networkPolicy": {
      "defaultValue": "",
      "allowedValues": [
        "",
        "azure"
      ],
      "metadata": {
        "description": "Network policy which will deployed in Kubernetes cluster"
      },
      "type": "string"
    },
    "availabilityProfile": {
      "defaultValue": "AvailabilitySet",
      "allowedValues": [
        "AvailabilitySet",
        "VirtualMachineScaleSets"
      ],
      "metadata": {
        "description": "Availability profile that nodes in the Kubernetes cluster will be deployed with"
      },
      "type": "string"
    },
    "windowsAgentPoolProfileCount": {
      "defaultValue": "0",
      "metadata": {
        "description": "Kubernetes Windows node pool profile count"
      },
      "type": "string"
    },
    "windowsAgentPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The virtual machine size of the Kubernetes Windows agent nodes"
      },
      "type": "string"
    },
    "windowsAdminUsername": {
      "defaultValue": "azureuser",
      "metadata": {
        "description": "User name for the Windows virtual machines that are part of the Kubernetes cluster."
      },
      "type": "string"
    },
    "windowsAdminPassword": {
      "defaultValue": "",
      "metadata": {
        "description": "Password for the Windows virtual machines that are part of the Kubernetes cluster."
      },
      "type": "securestring"
    },
    "customWindowsPackageURL": {
      "defaultValue": "",
      "metadata": {
        "description": "Custom Windows K8s zip location which will be used to deploy(kubelet, kubeproxy) on Windows node."
      },
      "type": "string"
    },
    "nodeDistro": {
      "defaultValue": "aks-ubuntu-16.04",
      "allowedValues": [
        "ubuntu",
        "aks-ubuntu-16.04"
      ],
      "metadata": {
        "description": "Node distro to be used to deploy Kubernetes on Azure Stack."
      },
      "type": "string"
    },
    "enableTillerAddOn": {
      "type": "string",
      "defaultValue": "false",
      "metadata": {
        "description": "Flag to enable Tiller addon"
      }
    },
    "containerRuntime": {
      "type": "string",
      "defaultValue": "docker",
      "allowedValues": [
        "docker",
        "containerd"
      ],
      "metadata": {
        "description": "Container runtime to deploy on each cluster node."
      }
    },
    "localAKSeBinaryURL": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Azure Stack blob url to download AKS engine from a blob store in disconnected environment "
      }
    },
    "dvmImagePublisher": {
      "type": "string",
      "defaultValue": "microsoft-aks",
      "metadata": {
        "description": "Azure VM image publisher to be used for the DVM"
      }
    },
    "dvmImageOffer": {
      "type": "string",
      "defaultValue": "aks",
      "metadata": {
        "description": "Azure VM image offer to be used for the DVM"
      }
    },
    "dvmImageSku": {
      "type": "string",
      "defaultValue": "aks-engine-ubuntu-1604-202003",
      "metadata": {
        "description": "Azure VM image sku to be used for the DVM"
      }
    },
    "dvmImageVersion": {
      "type": "string",
      "defaultValue": "2020.03.19",
      "metadata": {
        "description": "Azure VM image version to be used for the DVM"
      }
    }
  },
  "variables": {
    "resourceGroupName": "[resourceGroup().name]",
    "dnsNameForPublicIP": "[toLower(concat('vmd-dns', parameters('masterProfileDnsPrefix')))]",
    "location": "[resourceGroup().location]",
    "vmSize": "Standard_D2_v2",
    "OSDiskName": "osdisk",
    "nicName": "[concat('vmd-vnic', uniqueString(resourceGroup().id))]",
    "addressPrefix": "10.0.0.0/24",
    "subnetName": "mySubnet",
    "subnetPrefix": "10.0.0.0/24",
    "storageAccountName": "[concat('vmdsa', uniquestring(resourceGroup().id))]",
    "storageAccountType": "Standard_LRS",
    "publicIPAddressName": "[concat('vmd-publicIP', uniqueString(resourceGroup().id))]",
    "publicIPAddressType": "Static",
    "vmStorageAccountContainerName": "vhds",
    "vmName": "[concat('vmd-', uniqueString(resourceGroup().id))]",
    "virtualNetworkName": "[concat('vmd-vnet-', uniqueString(resourceGroup().id))]",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
    "subnetRef": "[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]",
    "networkSecurityGroupName": "[tolower(concat('vmd-nsg',uniquestring(resourceGroup().id)))]",
    "sshKeyPath": "[concat('/home/',parameters('linuxAdminUsername'),'/.ssh/authorized_keys')]",
    "tenantSubscriptionId": "[subscription().subscriptionId]",
    "scriptName": "script",
    "singleQuote": "'",
    "scriptParameters": "[concat('IDENTITY_SYSTEM=','\"',parameters('identitySystem'),'\"',' ENABLE_TILLER=','\"',parameters('enableTillerAddOn'),'\"' ,' CONTAINER_RUNTIME=','\"',parameters('containerRuntime'),'\"' ,' WINDOWS_CUSTOM_PACKAGE=','\"',parameters('customWindowsPackageURL'),'\"' ,' WINDOWS_AGENT_COUNT=','\"',parameters('windowsAgentPoolProfileCount'),'\"' ,' WINDOWS_AGENT_SIZE=','\"',parameters('windowsAgentPoolProfileVMSize'),'\"',' WINDOWS_ADMIN_USERNAME=','\"',parameters('windowsAdminUsername'),'\"',' WINDOWS_ADMIN_PASSWORD=','\"',parameters('windowsAdminPassword'),'\"',' NETWORK_PLUGIN=','\"',parameters('networkPlugin'),'\"',' NETWORK_POLICY=','\"',parameters('networkPolicy'),'\"',' AVAILABILITY_PROFILE=','\"',parameters('availabilityProfile'),'\"',' FIRST_CONSECUTIVE_STATIC_IP=','\"',parameters('firstConsecutiveStaticIP'),'\"',' AGENT_SUBNET_NAME=','\"',parameters('agentSubnetName'),'\"',' MASTER_SUBNET_NAME=','\"',parameters('masterSubnetName'),'\"',' CUSTOM_VNET_NAME=','\"',parameters('customVnetName'),'\"',' NODE_DISTRO=','\"',parameters('nodeDistro'),'\"',' RESOURCE_GROUP_NAME=','\"',variables('resourceGroupName'),'\"',' PUBLICIP_DNS=','\"',variables('dnsNameForPublicIP'),'\"' ,' TENANT_ID=','\"',subscription().tenantId,'\"' ,' TENANT_SUBSCRIPTION_ID=','\"',variables('tenantSubscriptionId'),'\"',' ADMIN_USERNAME=','\"',parameters('linuxAdminUsername'),'\"',' MASTER_DNS_PREFIX=','\"',parameters('masterProfileDnsPrefix'),'\"' ,' AGENT_COUNT=','\"',parameters('agentPoolProfileCount'),'\"' ,' AGENT_SIZE=','\"',parameters('agentPoolProfileVMSize'),'\"' ,' MASTER_COUNT=','\"',parameters('masterPoolProfileCount'),'\"',' MASTER_SIZE=','\"',parameters('masterPoolProfileVMSize'),'\"' ,' SPN_CLIENT_ID=','\"',parameters('servicePrincipalClientId'),'\"' ,' SPN_CLIENT_SECRET=','\"',parameters('servicePrincipalClientSecret'),'\"' ,' K8S_AZURE_CLOUDPROVIDER_VERSION=','\"',parameters('kubernetesAzureCloudProviderVersion'),'\"' ,' REGION_NAME=','\"',variables('location'),'\"' ,' SSH_PUBLICKEY=','\"',parameters('sshPublicKey'),'\"' ,' STORAGE_PROFILE=','\"',parameters('storageProfile'),'\"',' AKSE_BASE_URL=','\"',parameters('aksEngineBaseURL'), '\"', ' AKSE_RELEASE_VERSION=','\"',parameters('aksEngineReleaseVersion'),'\"',' GALLERY_REPO=','\"',parameters('galleryRepository'),'\"',' GALLERY_BRANCH=','\"',parameters('galleryBranch'),'\"',' DEFINITION_TEMPLATE_NAME=','\"',parameters('clusterDefinitionFileName'),'\"',' DISCONNECTED_AKS_ENGINE_URL=','\"',parameters('localAKSeBinaryURL'),'\"')]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[toLower(variables('storageAccountName'))]",
      "apiVersion": "2015-06-15",
      "location": "[variables('location')]",
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('networkSecurityGroupName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": [
          {
            "name": "ssh",
            "properties": {
              "description": "Allow SSH",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 200,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddressName')]",
      "location": "[variables('location')]",
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[variables('dnsNameForPublicIP')]"
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[variables('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
        "[variables('networkSecurityGroupName')]"
      ],
      "properties": {
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
        },
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2016-03-30",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('vmName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "osProfile": {
          "customData": "[base64(concat('#cloud-config\n\nwrite_files:\n- path: \"/opt/azure/containers/script.sh\"\n  permissions: \"0744\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    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'))]",
          "computerName": "[variables('vmName')]",
          "adminUsername": "[parameters('linuxAdminUsername')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": "true",
            "ssh": {
              "publicKeys": [
                {
                  "keyData": "[parameters('sshPublicKey')]",
                  "path": "[variables('sshKeyPath')]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[parameters('dvmImagePublisher')]",
            "offer": "[parameters('dvmImageOffer')]",
            "sku": "[parameters('dvmImageSku')]",
            "version": "[parameters('dvmImageVersion')]"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob, variables('vmStorageAccountContainerName'),'/',variables('OSDiskName'),'.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": "true",
            "storageUri": "[reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('vmName'),'/LinuxCustomScriptExtension')]",
      "apiVersion": "2016-03-30",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "CustomScript",
        "typeHandlerVersion": "2.0",
        "autoUpgradeMinorVersion": "true",
        "protectedSettings": {
          "commandToExecute": "[concat(variables('scriptParameters'), ' PUBLICIP_FQDN=', '\"', reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn,'\"',' /bin/bash /opt/azure/containers/script.sh >> /var/log/azure/deploy-script-dvm.log 2>&1')]"
        }
      }
    }
  ],
  "outputs": {
    "dvmPublicIpFqdn": {
      "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn]",
      "type": "string"
    }
  }
}
