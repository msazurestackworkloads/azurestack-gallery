{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "linuxAdminUsername": {
      "type": "string",
      "defaultValue": "azureuser",
      "metadata": {
        "description": "User name for the Linux Virtual Machines that are part of the Kubernetes cluster and DVM."
      }
    },
    "sshPublicKey": {
      "metadata": {
        "description": "SSH public key used for auth to all Linux machines created as part of the the Kubernetes cluster and DVM."
      },
      "type": "string"
    },
    "masterProfileDnsPrefix": {
      "type": "string",
      "metadata": {
        "description": "This must be a region-unique name e.g. k8s-12345. Try to chose it same as the resource group name as best practice."
      }
    },
    "agentPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes Node Pool Profile Count"
      },
      "type": "int"
    },
    "agentPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The VMSize of Kubernetes node VMs"
      },
      "type": "string"
    },
    "masterPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes Master Pool Profile Count"
      },
      "type": "int"
    },
    "masterPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The VMSize of Kubernetes master VMs"
      },
      "type": "string"
    },
    "storageProfile": {
      "defaultValue": "blobdisk",
      "metadata": {
        "description": "The Storage Profile"
      },
      "type": "string"
    },
    "servicePrincipalClientId": {
      "metadata": {
        "description": "The Service Principal application ID (used by the Kubernetes Azure cloud provider). More help here: https://github.com/Azure/acs-engine/blob/master/docs/serviceprincipal.md"
      },
      "type": "securestring"
    },
    "servicePrincipalClientSecret": {
      "metadata": {
        "description": "The Service Principal Client Secret."
      },
      "type": "securestring"
    },
    "servicePrincipalCertificateKeyVaultId": {
      "defaultValue": "servicePrincipalCertificateKeyVaultId",
      "metadata": {
        "description": "the service Principal Certificate KeyVault Id"
      },
      "type": "string"
    },
    "servicePrincipalCertificateKeyVaultSecretName": {
      "defaultValue": "servicePrincipalCertificateKeyVaultSecretName",
      "metadata": {
        "description": "The service Principal Certificate KeyVault SecretName"
      },
      "type": "string"
    },
    "identitySystem": {
      "defaultValue": "AzureAD",
      "allowedValues": [
        "AzureAD",
        "ADFS"
      ],
      "metadata": {
        "description": "The identity system of azure stack. The value could be AzureAD or ADFS"
      },
      "type": "string"
    },
    "kubernetesAzureCloudProviderVersion": {
      "type": "string",
      "defaultValue": "1.11",
      "metadata": {
        "description": "This is the version for the kubernetes Azure cloud provider. We would use a custom kubernetes build specifically for AzureStack for each version."
      }
    }
  },
  "variables": {
    "resourceGroupName": "[resourceGroup().name]",
    "dnsNameForPublicIP": "[toLower(concat('vmd-dns', parameters('masterProfileDnsPrefix')))]",
    "location": "[resourceGroup().location]",
    "imagePublisher": "Canonical",
    "imageOffer": "UbuntuServer",
    "imageSku": "16.04-LTS",
    "imageVersion": "latest",
    "vmSize": "Standard_D2_v2",
    "OSDiskName": "osdisk",
    "nicName": "[concat('vmd-vnic', uniqueString(resourceGroup().id))]",
    "addressPrefix": "10.0.0.0/24",
    "subnetName": "mySubnet",
    "subnetPrefix": "10.0.0.0/24",
    "storageAccountName": "[concat('vmdsa', uniquestring(resourceGroup().id))]",
    "storageAccountType": "Standard_LRS",
    "publicIPAddressName": "[concat('vmd-publicIP', uniqueString(resourceGroup().id))]",
    "publicIPAddressType": "Static",
    "vmStorageAccountContainerName": "vhds",
    "vmName": "[concat('vmd-', uniqueString(resourceGroup().id))]",
    "virtualNetworkName": "[concat('vmd-vnet-', uniqueString(resourceGroup().id))]",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
    "subnetRef": "[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]",
    "networkSecurityGroupName": "[tolower(concat('vmd-nsg',uniquestring(resourceGroup().id)))]",
    "sshKeyPath": "[concat('/home/',parameters('linuxAdminUsername'),'/.ssh/authorized_keys')]",
    "tenantSubscriptionId": "[subscription().subscriptionId]",
    "scriptName": "script",
    "singleQuote": "'",
    "scriptParameters": "[concat('IDENTITY_SYSTEM=','\"',parameters('identitySystem'),'\"',' RESOURCE_GROUP_NAME=','\"',variables('resourceGroupName'),'\"',' PUBLICIP_DNS=','\"',variables('dnsNameForPublicIP'),'\"' ,' TENANT_ID=','\"',subscription().tenantId,'\"' ,' TENANT_SUBSCRIPTION_ID=','\"',variables('tenantSubscriptionId'),'\"',' ADMIN_USERNAME=','\"',parameters('linuxAdminUsername'),'\"',' MASTER_DNS_PREFIX=','\"',parameters('masterProfileDnsPrefix'),'\"' ,' AGENT_COUNT=','\"',parameters('agentPoolProfileCount'),'\"' ,' AGENT_SIZE=','\"',parameters('agentPoolProfileVMSize'),'\"' ,' MASTER_COUNT=','\"',parameters('masterPoolProfileCount'),'\"',' MASTER_SIZE=','\"',parameters('masterPoolProfileVMSize'),'\"' ,' SPN_CLIENT_ID=','\"',parameters('servicePrincipalClientId'),'\"' ,' SPN_CLIENT_SECRET=','\"',parameters('servicePrincipalClientSecret'),'\"' ,' SPN_CLIENT_SECRET_KEYVAULT_ID=','\"',parameters('servicePrincipalCertificateKeyVaultId'),'\"' ,' SPN_CLIENT_SECRET_KEYVAULT_SECRET_NAME=','\"',parameters('servicePrincipalCertificateKeyVaultSecretName'),'\"' ,' K8S_AZURE_CLOUDPROVIDER_VERSION=','\"',parameters('kubernetesAzureCloudProviderVersion'),'\"' ,' REGION_NAME=','\"',variables('location'),'\"' ,' SSH_PUBLICKEY=','\"',parameters('sshPublicKey'),'\"' ,' STORAGE_PROFILE=','\"',parameters('storageProfile'),'\"')]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[toLower(variables('storageAccountName'))]",
      "apiVersion": "2015-06-15",
      "location": "[variables('location')]",
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('networkSecurityGroupName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": [
          {
            "name": "ssh",
            "properties": {
              "description": "Allow SSH",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 200,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddressName')]",
      "location": "[variables('location')]",
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[variables('dnsNameForPublicIP')]"
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[variables('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
        "[variables('networkSecurityGroupName')]"
      ],
      "properties": {
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
        },
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2016-03-30",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('vmName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "osProfile": {
          "customData": "[base64(concat('#cloud-config\n\nwrite_files:\n- path: \"/opt/azure/containers/script.sh\"\n  permissions: \"0744\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    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'))]",
          "computerName": "[variables('vmName')]",
          "adminUsername": "[parameters('linuxAdminUsername')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": "true",
            "ssh": {
              "publicKeys": [
                {
                  "keyData": "[parameters('sshPublicKey')]",
                  "path": "[variables('sshKeyPath')]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[variables('imageSku')]",
            "version": "[variables('imageVersion')]"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob, variables('vmStorageAccountContainerName'),'/',variables('OSDiskName'),'.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": "true",
            "storageUri": "[reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('vmName'),'/LinuxCustomScriptExtension')]",
      "apiVersion": "2016-03-30",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "CustomScript",
        "typeHandlerVersion": "2.0",
        "autoUpgradeMinorVersion": "true",
        "protectedSettings": {
          "commandToExecute": "[concat(variables('scriptParameters'), ' PUBLICIP_FQDN=', '\"', reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn,'\"',' /bin/bash /opt/azure/containers/script.sh >> /var/log/azure/acsengine-kubernetes-dvm.log 2>&1')]"
        }
      }
    }
  ],
  "outputs": {
    "dvmPublicIpFqdn": {
      "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn]",
      "type": "string"
    }
  }
}