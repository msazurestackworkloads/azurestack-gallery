{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "linuxAdminUsername": {
      "type": "string",
      "defaultValue": "azureuser",
      "metadata": {
        "description": "User name for the Linux virtual machines that are part of the Kubernetes cluster and DVM."
      }
    },
    "sshPublicKey": {
      "metadata": {
        "description": "SSH public key used for auth to all Linux machines created as part of the the Kubernetes cluster and DVM."
      },
      "type": "string"
    },
    "masterProfileDnsPrefix": {
      "type": "string",
      "metadata": {
        "description": "This must be a region-unique name e.g. k8s-12345. Try to chose it same as the resource group name as best practice."
      }
    },
    "agentPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes linux node pool profile count"
      },
      "type": "int"
    },
    "agentPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The virtual machine size of the Kubernetes linux agent nodes"
      },
      "type": "string"
    },
    "masterPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes master pool profile count"
      },
      "type": "int"
    },
    "masterPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The virtual machine size of the Kubernetes master nodes"
      },
      "type": "string"
    },
    "storageProfile": {
      "defaultValue": "manageddisk",
      "metadata": {
        "description": "The Storage Profile"
      },
      "type": "string"
    },
    "servicePrincipalClientId": {
      "metadata": {
        "description": "The Service Principal application ID (used by the Kubernetes Azure cloud provider). More help here: https://github.com/Azure/aks-engine/blob/master/docs/topics/service-principals.md"
      },
      "type": "securestring"
    },
    "servicePrincipalClientSecret": {
      "metadata": {
        "description": "The Service Principal Client Secret."
      },
      "type": "securestring"
    },
    "identitySystem": {
      "defaultValue": "AzureAD",
      "allowedValues": [
        "AzureAD",
        "ADFS"
      ],
      "metadata": {
        "description": "The identity system of Azure Stack. The value could be AzureAD or ADFS"
      },
      "type": "string"
    },
    "kubernetesAzureCloudProviderVersion": {
      "type": "string",
      "defaultValue": "1.12",
      "metadata": {
        "description": "This is the version for the Kubernetes Azure cloud provider. We would use a custom Kubernetes build specifically for Azure Stack for each version."
      }
    },
    "aksEngineBaseURL": {
      "type": "string",
      "defaultValue": "https://github.com/Azure/aks-engine/releases/download",
      "metadata": {
        "description": "The beginning of the URL for downloading the AKS Engine binary"
      }
    },
    "aksEngineReleaseVersion": {
      "type": "string",
      "defaultValue": "v0.39.1",
      "metadata": {
        "description": "The version of AKS Engine to download"
      }
    },
    "galleryRepository": {
      "type": "string",
      "defaultValue": "msazurestackworkloads/azurestack-gallery",
      "metadata": {
        "description": "Marketplace item repository"
      }
    },
    "galleryBranch": {
      "type": "string",
      "defaultValue": "master",
      "metadata": {
        "description": "Marketplace item branch"
      }
    },
    "clusterDefinitionFileName": {
      "type": "string",
      "defaultValue": "clusterDefinition.json",
      "metadata": {
        "description": "The name of the file containing the cluster definition"
      }
    },
    "kubernetesImageBase": {
      "type": "string",
      "defaultValue": "mcr.microsoft.com/k8s/azurestack/core/",
      "metadata": {
        "description": "The base for Kubernetes images"
      }
    },
    "customVnetName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Name of the custom vnet"
      }
    },
    "masterSubnetName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Name of the master subnet"
      }
    },
    "agentSubnetName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Name of the agent subnet"
      }
    },
    "firstConsecutiveStaticIP": {
      "type": "string",
      "defaultValue": "10.100.0.5",
      "metadata": {
        "description": "First Consective Static IP"
      }
    },
    "networkPlugin": {
      "defaultValue": "flannel",
      "allowedValues": [
        "flannel",
        "azure",
        "kubenet"
      ],
      "metadata": {
        "description": "Network plugin which will deployed in Kubernetes cluster"
      },
      "type": "string"
    },
    "availabilityProfile": {
      "defaultValue": "AvailabilitySet",
      "allowedValues": [
        "AvailabilitySet",
        "VirtualMachineScaleSets"
      ],
      "metadata": {
        "description": "Availability profile that nodes in the Kubernetes cluster will be deployed with"
      },
      "type": "string"
    },
    "windowsAgentPoolProfileCount": {
      "defaultValue": "0",      
      "metadata": {
        "description": "Kubernetes Windows node pool profile count"
      },
      "type": "string"
    },
    "windowsAgentPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The virtual machine size of the Kubernetes Windows agent nodes"
      },
      "type": "string"
    },
    "windowsAdminUsername": {
      "defaultValue": "azureuser",
      "metadata": {
        "description": "User name for the Windows virtual machines that are part of the Kubernetes cluster."
      },
      "type": "string"
    },
    "windowsAdminPassword": {
      "defaultValue": "",
      "metadata": {
        "description": "Password for the Windows virtual machines that are part of the Kubernetes cluster."
      },
      "type": "securestring"
    },
    "windowsPackageBaseURL": {
      "defaultValue": "",
      "metadata": {
        "description": "URL path from where Windows binaries will be downloaded."
      },
      "type": "string"
    },
    "windowsPackageName": {
      "defaultValue": "",
      "metadata": {
        "description": "Name of the Windows package which will be installed."
      },
      "type": "string"
    },
    "nodeDistro": {
      "defaultValue": "ubuntu",
      "allowedValues": [
        "ubuntu",
        "aks-ubuntu-16.04"
      ],
      "metadata": {
        "description": "Node distro to be used to deploy Kubernetes on Azure Stack."
      },
      "type": "string"
    }
  },
  "variables": {
    "resourceGroupName": "[resourceGroup().name]",
    "dnsNameForPublicIP": "[toLower(concat('vmd-dns', parameters('masterProfileDnsPrefix')))]",
    "location": "[resourceGroup().location]",
    "imagePublisher": "Canonical",
    "imageOffer": "UbuntuServer",
    "imageSku": "16.04-LTS",
    "imageVersion": "latest",
    "vmSize": "Standard_D2_v2",
    "OSDiskName": "osdisk",
    "nicName": "[concat('vmd-vnic', uniqueString(resourceGroup().id))]",
    "addressPrefix": "10.0.0.0/24",
    "subnetName": "mySubnet",
    "subnetPrefix": "10.0.0.0/24",
    "storageAccountName": "[concat('vmdsa', uniquestring(resourceGroup().id))]",
    "storageAccountType": "Standard_LRS",
    "publicIPAddressName": "[concat('vmd-publicIP', uniqueString(resourceGroup().id))]",
    "publicIPAddressType": "Static",
    "vmStorageAccountContainerName": "vhds",
    "vmName": "[concat('vmd-', uniqueString(resourceGroup().id))]",
    "virtualNetworkName": "[concat('vmd-vnet-', uniqueString(resourceGroup().id))]",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
    "subnetRef": "[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]",
    "networkSecurityGroupName": "[tolower(concat('vmd-nsg',uniquestring(resourceGroup().id)))]",
    "sshKeyPath": "[concat('/home/',parameters('linuxAdminUsername'),'/.ssh/authorized_keys')]",
    "tenantSubscriptionId": "[subscription().subscriptionId]",
    "scriptName": "script",
    "singleQuote": "'",
    "scriptParameters": "[concat('IDENTITY_SYSTEM=','\"',parameters('identitySystem'),'\"',' WINDOWS_PACKAGE_NAME=','\"',parameters('windowsPackageName'),'\"' ,' WINDOWS_PACKAGE_URL=','\"',parameters('windowsPackageBaseURL'),'\"' ,' WINDOWS_AGENT_COUNT=','\"',parameters('windowsAgentPoolProfileCount'),'\"' ,' WINDOWS_AGENT_SIZE=','\"',parameters('windowsAgentPoolProfileVMSize'),'\"',' WINDOWS_ADMIN_USERNAME=','\"',parameters('windowsAdminUsername'),'\"',' WINDOWS_ADMIN_PASSWORD=','\"',parameters('windowsAdminPassword'),'\"',' NETWORK_PLUGIN=','\"',parameters('networkPlugin'),'\"',' AVAILABILITY_PROFILE=','\"',parameters('availabilityProfile'),'\"',' FIRST_CONSECUTIVE_STATIC_IP=','\"',parameters('firstConsecutiveStaticIP'),'\"',' AGENT_SUBNET_NAME=','\"',parameters('agentSubnetName'),'\"',' MASTER_SUBNET_NAME=','\"',parameters('masterSubnetName'),'\"',' CUSTOM_VNET_NAME=','\"',parameters('customVnetName'),'\"',' NODE_DISTRO=','\"',parameters('nodeDistro'),'\"',' RESOURCE_GROUP_NAME=','\"',variables('resourceGroupName'),'\"',' PUBLICIP_DNS=','\"',variables('dnsNameForPublicIP'),'\"' ,' TENANT_ID=','\"',subscription().tenantId,'\"' ,' TENANT_SUBSCRIPTION_ID=','\"',variables('tenantSubscriptionId'),'\"',' ADMIN_USERNAME=','\"',parameters('linuxAdminUsername'),'\"',' MASTER_DNS_PREFIX=','\"',parameters('masterProfileDnsPrefix'),'\"' ,' AGENT_COUNT=','\"',parameters('agentPoolProfileCount'),'\"' ,' AGENT_SIZE=','\"',parameters('agentPoolProfileVMSize'),'\"' ,' MASTER_COUNT=','\"',parameters('masterPoolProfileCount'),'\"',' MASTER_SIZE=','\"',parameters('masterPoolProfileVMSize'),'\"' ,' SPN_CLIENT_ID=','\"',parameters('servicePrincipalClientId'),'\"' ,' SPN_CLIENT_SECRET=','\"',parameters('servicePrincipalClientSecret'),'\"' ,' K8S_AZURE_CLOUDPROVIDER_VERSION=','\"',parameters('kubernetesAzureCloudProviderVersion'),'\"' ,' REGION_NAME=','\"',variables('location'),'\"' ,' SSH_PUBLICKEY=','\"',parameters('sshPublicKey'),'\"' ,' STORAGE_PROFILE=','\"',parameters('storageProfile'),'\"',' AKSE_BASE_URL=','\"',parameters('aksEngineBaseURL'), '\"', ' AKSE_RELEASE_VERSION=','\"',parameters('aksEngineReleaseVersion'),'\"',' GALLERY_REPO=','\"',parameters('galleryRepository'),'\"',' GALLERY_BRANCH=','\"',parameters('galleryBranch'),'\"',' DEFINITION_TEMPLATE_NAME=','\"',parameters('clusterDefinitionFileName'),'\"',' K8S_IMAGE_BASE=','\"',parameters('kubernetesImageBase'),'\"')]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[toLower(variables('storageAccountName'))]",
      "apiVersion": "2015-06-15",
      "location": "[variables('location')]",
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('networkSecurityGroupName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": [
          {
            "name": "ssh",
            "properties": {
              "description": "Allow SSH",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 200,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddressName')]",
      "location": "[variables('location')]",
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[variables('dnsNameForPublicIP')]"
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[variables('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
        "[variables('networkSecurityGroupName')]"
      ],
      "properties": {
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
        },
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2016-03-30",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('vmName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "osProfile": {
          "customData": "[base64(concat('#cloud-config\n\nwrite_files:\n- path: \"/opt/azure/containers/script.sh\"\n  permissions: \"0744\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    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'))]",
          "computerName": "[variables('vmName')]",
          "adminUsername": "[parameters('linuxAdminUsername')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": "true",
            "ssh": {
              "publicKeys": [
                {
                  "keyData": "[parameters('sshPublicKey')]",
                  "path": "[variables('sshKeyPath')]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[variables('imageSku')]",
            "version": "[variables('imageVersion')]"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob, variables('vmStorageAccountContainerName'),'/',variables('OSDiskName'),'.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": "true",
            "storageUri": "[reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('vmName'),'/LinuxCustomScriptExtension')]",
      "apiVersion": "2016-03-30",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "CustomScript",
        "typeHandlerVersion": "2.0",
        "autoUpgradeMinorVersion": "true",
        "protectedSettings": {
          "commandToExecute": "[concat(variables('scriptParameters'), ' PUBLICIP_FQDN=', '\"', reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn,'\"',' /bin/bash /opt/azure/containers/script.sh >> /var/log/azure/deploy-script-dvm.log 2>&1')]"
        }
      }
    }
  ],
  "outputs": {
    "dvmPublicIpFqdn": {
      "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn]",
      "type": "string"
    }
  }
}
