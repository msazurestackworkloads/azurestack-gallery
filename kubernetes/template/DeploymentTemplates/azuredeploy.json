{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "linuxAdminUsername": {
      "type": "string",
      "defaultValue": "azureuser",
      "metadata": {
        "description": "User name for the Linux virtual machines that are part of the Kubernetes cluster and DVM."
      }
    },
    "sshPublicKey": {
      "metadata": {
        "description": "SSH public key used for auth to all Linux machines created as part of the the Kubernetes cluster and DVM."
      },
      "type": "string"
    },
    "masterProfileDnsPrefix": {
      "type": "string",
      "metadata": {
        "description": "This must be a region-unique name e.g. k8s-12345. Try to chose it same as the resource group name as best practice."
      }
    },
    "agentPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes linux node pool profile count"
      },
      "type": "int"
    },
    "agentPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The virtual machine size of the Kubernetes linux agent nodes"
      },
      "type": "string"
    },
    "masterPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes master pool profile count"
      },
      "type": "int"
    },
    "masterPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The virtual machine size of the Kubernetes master nodes"
      },
      "type": "string"
    },
    "storageProfile": {
      "defaultValue": "manageddisk",
      "metadata": {
        "description": "The Storage Profile"
      },
      "type": "string"
    },
    "servicePrincipalClientId": {
      "metadata": {
        "description": "The Service Principal application ID (used by the Kubernetes Azure cloud provider). More help here: https://github.com/Azure/aks-engine/blob/master/docs/topics/service-principals.md"
      },
      "type": "securestring"
    },
    "servicePrincipalClientSecret": {
      "metadata": {
        "description": "The Service Principal Client Secret."
      },
      "type": "securestring"
    },
    "identitySystem": {
      "defaultValue": "AzureAD",
      "allowedValues": [
        "AzureAD",
        "ADFS"
      ],
      "metadata": {
        "description": "The identity system of Azure Stack. The value could be AzureAD or ADFS"
      },
      "type": "string"
    },
    "kubernetesAzureCloudProviderVersion": {
      "type": "string",
      "defaultValue": "1.14",
      "metadata": {
        "description": "This is the version for the Kubernetes Azure cloud provider. We would use a custom Kubernetes build specifically for Azure Stack for each version."
      }
    },
    "aksEngineBaseURL": {
      "type": "string",
      "defaultValue": "https://github.com/jadarsie/aks-engine/releases/download",
      "metadata": {
        "description": "The beginning of the URL for downloading the AKS Engine binary"
      }
    },
    "aksEngineReleaseVersion": {
      "type": "string",
      "defaultValue": "44a35c0",
      "metadata": {
        "description": "The version of AKS Engine to download"
      }
    },
    "galleryRepository": {
      "type": "string",
      "defaultValue": "msazurestackworkloads/azurestack-gallery",
      "metadata": {
        "description": "Marketplace item repository"
      }
    },
    "galleryBranch": {
      "type": "string",
      "defaultValue": "master",
      "metadata": {
        "description": "Marketplace item branch"
      }
    },
    "clusterDefinitionFileName": {
      "type": "string",
      "defaultValue": "clusterDefinition.json",
      "metadata": {
        "description": "The name of the file containing the cluster definition"
      }
    },
    "customVnetName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Name of the custom vnet"
      }
    },
    "masterSubnetName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Name of the master subnet"
      }
    },
    "agentSubnetName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Name of the agent subnet"
      }
    },
    "firstConsecutiveStaticIP": {
      "type": "string",
      "defaultValue": "10.100.0.5",
      "metadata": {
        "description": "First Consective Static IP"
      }
    },
    "networkPlugin": {
      "defaultValue": "kubenet",
      "allowedValues": [
        "flannel",
        "azure",
        "kubenet"
      ],
      "metadata": {
        "description": "Network plugin which will deployed in Kubernetes cluster"
      },
      "type": "string"
    },
    "networkPolicy": {
      "defaultValue": "",
      "allowedValues": [
        "",
        "azure"
      ],
      "metadata": {
        "description": "Network policy which will deployed in Kubernetes cluster"
      },
      "type": "string"
    },
    "availabilityProfile": {
      "defaultValue": "AvailabilitySet",
      "allowedValues": [
        "AvailabilitySet",
        "VirtualMachineScaleSets"
      ],
      "metadata": {
        "description": "Availability profile that nodes in the Kubernetes cluster will be deployed with"
      },
      "type": "string"
    },
    "windowsAgentPoolProfileCount": {
      "defaultValue": "0",
      "metadata": {
        "description": "Kubernetes Windows node pool profile count"
      },
      "type": "string"
    },
    "windowsAgentPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The virtual machine size of the Kubernetes Windows agent nodes"
      },
      "type": "string"
    },
    "windowsAdminUsername": {
      "defaultValue": "azureuser",
      "metadata": {
        "description": "User name for the Windows virtual machines that are part of the Kubernetes cluster."
      },
      "type": "string"
    },
    "windowsAdminPassword": {
      "defaultValue": "",
      "metadata": {
        "description": "Password for the Windows virtual machines that are part of the Kubernetes cluster."
      },
      "type": "securestring"
    },
    "customWindowsPackageURL": {
      "defaultValue": "",
      "metadata": {
        "description": "Custom Windows K8s zip location which will be used to deploy(kubelet, kubeproxy) on Windows node."
      },
      "type": "string"
    },
    "nodeDistro": {
      "defaultValue": "aks-ubuntu-16.04",
      "allowedValues": [
        "ubuntu",
        "aks-ubuntu-16.04"
      ],
      "metadata": {
        "description": "Node distro to be used to deploy Kubernetes on Azure Stack."
      },
      "type": "string"
    },
    "enableTillerAddOn": {
      "type": "string",
      "defaultValue": "false",
      "metadata": {
        "description": "Flag to enable Tiller addon"
      }
    },
    "containerRuntime": {
      "type": "string",
      "defaultValue": "docker",
      "allowedValues": [
        "docker",
        "containerd"
      ],
      "metadata": {
        "description": "Container runtime to deploy on each cluster node."
      }
    },
    "localAKSeBinaryURL": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Azure Stack blob url to download AKS engine from a blob store in disconnected environment "
      }
    },
    "dvmImagePublisher": {
      "type": "string",
      "defaultValue": "microsoft-aks",
      "metadata": {
        "description": "Azure VM image publisher to be used for the DVM"
      }
    },
    "dvmImageOffer": {
      "type": "string",
      "defaultValue": "aks",
      "metadata": {
        "description": "Azure VM image offer to be used for the DVM"
      }
    },
    "dvmImageSku": {
      "type": "string",
      "defaultValue": "aks-engine-ubuntu-1604-202003",
      "metadata": {
        "description": "Azure VM image sku to be used for the DVM"
      }
    },
    "dvmImageVersion": {
      "type": "string",
      "defaultValue": "2020.03.19",
      "metadata": {
        "description": "Azure VM image version to be used for the DVM"
      }
    }
  },
  "variables": {
    "resourceGroupName": "[resourceGroup().name]",
    "dnsNameForPublicIP": "[toLower(concat('vmd-dns', parameters('masterProfileDnsPrefix')))]",
    "location": "[resourceGroup().location]",
    "vmSize": "Standard_D2_v2",
    "OSDiskName": "osdisk",
    "nicName": "[concat('vmd-vnic', uniqueString(resourceGroup().id))]",
    "addressPrefix": "10.0.0.0/24",
    "subnetName": "mySubnet",
    "subnetPrefix": "10.0.0.0/24",
    "storageAccountName": "[concat('vmdsa', uniquestring(resourceGroup().id))]",
    "storageAccountType": "Standard_LRS",
    "publicIPAddressName": "[concat('vmd-publicIP', uniqueString(resourceGroup().id))]",
    "publicIPAddressType": "Static",
    "vmStorageAccountContainerName": "vhds",
    "vmName": "[concat('vmd-', uniqueString(resourceGroup().id))]",
    "virtualNetworkName": "[concat('vmd-vnet-', uniqueString(resourceGroup().id))]",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
    "subnetRef": "[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]",
    "networkSecurityGroupName": "[tolower(concat('vmd-nsg',uniquestring(resourceGroup().id)))]",
    "sshKeyPath": "[concat('/home/',parameters('linuxAdminUsername'),'/.ssh/authorized_keys')]",
    "tenantSubscriptionId": "[subscription().subscriptionId]",
    "scriptName": "script",
    "singleQuote": "'",
    "scriptParameters": "[concat('IDENTITY_SYSTEM=','\"',parameters('identitySystem'),'\"',' ENABLE_TILLER=','\"',parameters('enableTillerAddOn'),'\"' ,' CONTAINER_RUNTIME=','\"',parameters('containerRuntime'),'\"' ,' WINDOWS_CUSTOM_PACKAGE=','\"',parameters('customWindowsPackageURL'),'\"' ,' WINDOWS_AGENT_COUNT=','\"',parameters('windowsAgentPoolProfileCount'),'\"' ,' WINDOWS_AGENT_SIZE=','\"',parameters('windowsAgentPoolProfileVMSize'),'\"',' WINDOWS_ADMIN_USERNAME=','\"',parameters('windowsAdminUsername'),'\"',' WINDOWS_ADMIN_PASSWORD=','\"',parameters('windowsAdminPassword'),'\"',' NETWORK_PLUGIN=','\"',parameters('networkPlugin'),'\"',' NETWORK_POLICY=','\"',parameters('networkPolicy'),'\"',' AVAILABILITY_PROFILE=','\"',parameters('availabilityProfile'),'\"',' FIRST_CONSECUTIVE_STATIC_IP=','\"',parameters('firstConsecutiveStaticIP'),'\"',' AGENT_SUBNET_NAME=','\"',parameters('agentSubnetName'),'\"',' MASTER_SUBNET_NAME=','\"',parameters('masterSubnetName'),'\"',' CUSTOM_VNET_NAME=','\"',parameters('customVnetName'),'\"',' NODE_DISTRO=','\"',parameters('nodeDistro'),'\"',' RESOURCE_GROUP_NAME=','\"',variables('resourceGroupName'),'\"',' PUBLICIP_DNS=','\"',variables('dnsNameForPublicIP'),'\"' ,' TENANT_ID=','\"',subscription().tenantId,'\"' ,' TENANT_SUBSCRIPTION_ID=','\"',variables('tenantSubscriptionId'),'\"',' ADMIN_USERNAME=','\"',parameters('linuxAdminUsername'),'\"',' MASTER_DNS_PREFIX=','\"',parameters('masterProfileDnsPrefix'),'\"' ,' AGENT_COUNT=','\"',parameters('agentPoolProfileCount'),'\"' ,' AGENT_SIZE=','\"',parameters('agentPoolProfileVMSize'),'\"' ,' MASTER_COUNT=','\"',parameters('masterPoolProfileCount'),'\"',' MASTER_SIZE=','\"',parameters('masterPoolProfileVMSize'),'\"' ,' SPN_CLIENT_ID=','\"',parameters('servicePrincipalClientId'),'\"' ,' SPN_CLIENT_SECRET=','\"',parameters('servicePrincipalClientSecret'),'\"' ,' K8S_AZURE_CLOUDPROVIDER_VERSION=','\"',parameters('kubernetesAzureCloudProviderVersion'),'\"' ,' REGION_NAME=','\"',variables('location'),'\"' ,' SSH_PUBLICKEY=','\"',parameters('sshPublicKey'),'\"' ,' STORAGE_PROFILE=','\"',parameters('storageProfile'),'\"',' AKSE_BASE_URL=','\"',parameters('aksEngineBaseURL'), '\"', ' AKSE_RELEASE_VERSION=','\"',parameters('aksEngineReleaseVersion'),'\"',' GALLERY_REPO=','\"',parameters('galleryRepository'),'\"',' GALLERY_BRANCH=','\"',parameters('galleryBranch'),'\"',' DEFINITION_TEMPLATE_NAME=','\"',parameters('clusterDefinitionFileName'),'\"',' DISCONNECTED_AKS_ENGINE_URL=','\"',parameters('localAKSeBinaryURL'),'\"')]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[toLower(variables('storageAccountName'))]",
      "apiVersion": "2015-06-15",
      "location": "[variables('location')]",
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('networkSecurityGroupName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": [
          {
            "name": "ssh",
            "properties": {
              "description": "Allow SSH",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 200,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddressName')]",
      "location": "[variables('location')]",
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[variables('dnsNameForPublicIP')]"
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[variables('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
        "[variables('networkSecurityGroupName')]"
      ],
      "properties": {
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
        },
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2016-03-30",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('vmName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "osProfile": {
          "customData": "[base64(concat('#cloud-config\n\nwrite_files:\n- path: \"/opt/azure/containers/script.sh\"\n  permissions: \"0744\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    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'))]",
          "computerName": "[variables('vmName')]",
          "adminUsername": "[parameters('linuxAdminUsername')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": "true",
            "ssh": {
              "publicKeys": [
                {
                  "keyData": "[parameters('sshPublicKey')]",
                  "path": "[variables('sshKeyPath')]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[parameters('dvmImagePublisher')]",
            "offer": "[parameters('dvmImageOffer')]",
            "sku": "[parameters('dvmImageSku')]",
            "version": "[parameters('dvmImageVersion')]"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob, variables('vmStorageAccountContainerName'),'/',variables('OSDiskName'),'.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": "true",
            "storageUri": "[reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('vmName'),'/LinuxCustomScriptExtension')]",
      "apiVersion": "2016-03-30",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "CustomScript",
        "typeHandlerVersion": "2.0",
        "autoUpgradeMinorVersion": "true",
        "protectedSettings": {
          "commandToExecute": "[concat(variables('scriptParameters'), ' PUBLICIP_FQDN=', '\"', reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn,'\"',' /bin/bash /opt/azure/containers/script.sh >> /var/log/azure/deploy-script-dvm.log 2>&1')]"
        }
      }
    }
  ],
  "outputs": {
    "dvmPublicIpFqdn": {
      "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn]",
      "type": "string"
    }
  }
}
