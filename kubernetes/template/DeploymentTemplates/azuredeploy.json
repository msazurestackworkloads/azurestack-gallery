{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "linuxAdminUsername": {
      "type": "string",
      "defaultValue": "azureuser",
      "metadata": {
        "description": "User name for the Linux virtual machines that are part of the Kubernetes cluster and DVM."
      }
    },
    "sshPublicKey": {
      "metadata": {
        "description": "SSH public key used for auth to all Linux machines created as part of the the Kubernetes cluster and DVM."
      },
      "type": "string"
    },
    "masterProfileDnsPrefix": {
      "type": "string",
      "metadata": {
        "description": "This must be a region-unique name e.g. k8s-12345. Try to chose it same as the resource group name as best practice."
      }
    },
    "agentPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes linux node pool profile count"
      },
      "type": "int"
    },
    "agentPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The virtual machine size of the Kubernetes linux agent nodes"
      },
      "type": "string"
    },
    "masterPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes master pool profile count"
      },
      "type": "int"
    },
    "masterPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The virtual machine size of the Kubernetes master nodes"
      },
      "type": "string"
    },
    "storageProfile": {
      "defaultValue": "manageddisk",
      "metadata": {
        "description": "The Storage Profile"
      },
      "type": "string"
    },
    "servicePrincipalClientId": {
      "metadata": {
        "description": "The Service Principal application ID (used by the Kubernetes Azure cloud provider). More help here: https://github.com/Azure/aks-engine/blob/master/docs/topics/service-principals.md"
      },
      "type": "securestring"
    },
    "servicePrincipalClientSecret": {
      "metadata": {
        "description": "The Service Principal Client Secret."
      },
      "type": "securestring"
    },
    "identitySystem": {
      "defaultValue": "AzureAD",
      "allowedValues": [
        "AzureAD",
        "ADFS"
      ],
      "metadata": {
        "description": "The identity system of Azure Stack. The value could be AzureAD or ADFS"
      },
      "type": "string"
    },
    "kubernetesAzureCloudProviderVersion": {
      "type": "string",
      "defaultValue": "1.14",
      "metadata": {
        "description": "This is the version for the Kubernetes Azure cloud provider. We would use a custom Kubernetes build specifically for Azure Stack for each version."
      }
    },
    "aksEngineBaseURL": {
      "type": "string",
      "defaultValue": "https://github.com/Azure/aks-engine/releases/download",
      "metadata": {
        "description": "The beginning of the URL for downloading the AKS Engine binary"
      }
    },
    "aksEngineReleaseVersion": {
      "type": "string",
      "defaultValue": "v0.43.0",
      "metadata": {
        "description": "The version of AKS Engine to download"
      }
    },
    "galleryRepository": {
      "type": "string",
      "defaultValue": "msazurestackworkloads/azurestack-gallery",
      "metadata": {
        "description": "Marketplace item repository"
      }
    },
    "galleryBranch": {
      "type": "string",
      "defaultValue": "master",
      "metadata": {
        "description": "Marketplace item branch"
      }
    },
    "clusterDefinitionFileName": {
      "type": "string",
      "defaultValue": "clusterDefinition.json",
      "metadata": {
        "description": "The name of the file containing the cluster definition"
      }
    },
    "kubernetesImageBase": {
      "type": "string",
      "defaultValue": "mcr.microsoft.com/k8s/azurestack/core/",
      "metadata": {
        "description": "The base for Kubernetes images"
      }
    },
    "customVnetName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Name of the custom vnet"
      }
    },
    "masterSubnetName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Name of the master subnet"
      }
    },
    "agentSubnetName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Name of the agent subnet"
      }
    },
    "firstConsecutiveStaticIP": {
      "type": "string",
      "defaultValue": "10.100.0.5",
      "metadata": {
        "description": "First Consective Static IP"
      }
    },
    "networkPlugin": {
      "defaultValue": "kubenet",
      "allowedValues": [
        "flannel",
        "azure",
        "kubenet"
      ],
      "metadata": {
        "description": "Network plugin which will deployed in Kubernetes cluster"
      },
      "type": "string"
    },
    "availabilityProfile": {
      "defaultValue": "AvailabilitySet",
      "allowedValues": [
        "AvailabilitySet",
        "VirtualMachineScaleSets"
      ],
      "metadata": {
        "description": "Availability profile that nodes in the Kubernetes cluster will be deployed with"
      },
      "type": "string"
    },
    "windowsAgentPoolProfileCount": {
      "defaultValue": "0",      
      "metadata": {
        "description": "Kubernetes Windows node pool profile count"
      },
      "type": "string"
    },
    "windowsAgentPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The virtual machine size of the Kubernetes Windows agent nodes"
      },
      "type": "string"
    },
    "windowsAdminUsername": {
      "defaultValue": "azureuser",
      "metadata": {
        "description": "User name for the Windows virtual machines that are part of the Kubernetes cluster."
      },
      "type": "string"
    },
    "windowsAdminPassword": {
      "defaultValue": "",
      "metadata": {
        "description": "Password for the Windows virtual machines that are part of the Kubernetes cluster."
      },
      "type": "securestring"
    },
    "customWindowsPackageURL": {
      "defaultValue": "",
      "metadata": {
        "description": "Custom Windows K8s zip location which will be used to deploy(kubelet, kubeproxy) on Windows node."
      },
      "type": "string"
    },
    "nodeDistro": {
      "defaultValue": "ubuntu",
      "allowedValues": [
        "ubuntu",
        "aks-ubuntu-16.04"
      ],
      "metadata": {
        "description": "Node distro to be used to deploy Kubernetes on Azure Stack."
      },
      "type": "string"
    },
    "enableTillerAddOn": {
      "type": "string",
      "defaultValue": "false",
      "metadata": {
        "description": "Flag to enable Tiller addon"
      }
    }
  },
  "variables": {
    "resourceGroupName": "[resourceGroup().name]",
    "dnsNameForPublicIP": "[toLower(concat('vmd-dns', parameters('masterProfileDnsPrefix')))]",
    "location": "[resourceGroup().location]",
    "imagePublisher": "Canonical",
    "imageOffer": "UbuntuServer",
    "imageSku": "16.04-LTS",
    "imageVersion": "latest",
    "vmSize": "Standard_D2_v2",
    "OSDiskName": "osdisk",
    "nicName": "[concat('vmd-vnic', uniqueString(resourceGroup().id))]",
    "addressPrefix": "10.0.0.0/24",
    "subnetName": "mySubnet",
    "subnetPrefix": "10.0.0.0/24",
    "storageAccountName": "[concat('vmdsa', uniquestring(resourceGroup().id))]",
    "storageAccountType": "Standard_LRS",
    "publicIPAddressName": "[concat('vmd-publicIP', uniqueString(resourceGroup().id))]",
    "publicIPAddressType": "Static",
    "vmStorageAccountContainerName": "vhds",
    "vmName": "[concat('vmd-', uniqueString(resourceGroup().id))]",
    "virtualNetworkName": "[concat('vmd-vnet-', uniqueString(resourceGroup().id))]",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
    "subnetRef": "[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]",
    "networkSecurityGroupName": "[tolower(concat('vmd-nsg',uniquestring(resourceGroup().id)))]",
    "sshKeyPath": "[concat('/home/',parameters('linuxAdminUsername'),'/.ssh/authorized_keys')]",
    "tenantSubscriptionId": "[subscription().subscriptionId]",
    "scriptName": "script",
    "singleQuote": "'",
    "scriptParameters": "[concat('IDENTITY_SYSTEM=','\"',parameters('identitySystem'),'\"',' ENABLE_TILLER=','\"',parameters('enableTillerAddOn'),'\"' ,' WINDOWS_CUSTOM_PACKAGE=','\"',parameters('customWindowsPackageURL'),'\"' ,' WINDOWS_AGENT_COUNT=','\"',parameters('windowsAgentPoolProfileCount'),'\"' ,' WINDOWS_AGENT_SIZE=','\"',parameters('windowsAgentPoolProfileVMSize'),'\"',' WINDOWS_ADMIN_USERNAME=','\"',parameters('windowsAdminUsername'),'\"',' WINDOWS_ADMIN_PASSWORD=','\"',parameters('windowsAdminPassword'),'\"',' NETWORK_PLUGIN=','\"',parameters('networkPlugin'),'\"',' AVAILABILITY_PROFILE=','\"',parameters('availabilityProfile'),'\"',' FIRST_CONSECUTIVE_STATIC_IP=','\"',parameters('firstConsecutiveStaticIP'),'\"',' AGENT_SUBNET_NAME=','\"',parameters('agentSubnetName'),'\"',' MASTER_SUBNET_NAME=','\"',parameters('masterSubnetName'),'\"',' CUSTOM_VNET_NAME=','\"',parameters('customVnetName'),'\"',' NODE_DISTRO=','\"',parameters('nodeDistro'),'\"',' RESOURCE_GROUP_NAME=','\"',variables('resourceGroupName'),'\"',' PUBLICIP_DNS=','\"',variables('dnsNameForPublicIP'),'\"' ,' TENANT_ID=','\"',subscription().tenantId,'\"' ,' TENANT_SUBSCRIPTION_ID=','\"',variables('tenantSubscriptionId'),'\"',' ADMIN_USERNAME=','\"',parameters('linuxAdminUsername'),'\"',' MASTER_DNS_PREFIX=','\"',parameters('masterProfileDnsPrefix'),'\"' ,' AGENT_COUNT=','\"',parameters('agentPoolProfileCount'),'\"' ,' AGENT_SIZE=','\"',parameters('agentPoolProfileVMSize'),'\"' ,' MASTER_COUNT=','\"',parameters('masterPoolProfileCount'),'\"',' MASTER_SIZE=','\"',parameters('masterPoolProfileVMSize'),'\"' ,' SPN_CLIENT_ID=','\"',parameters('servicePrincipalClientId'),'\"' ,' SPN_CLIENT_SECRET=','\"',parameters('servicePrincipalClientSecret'),'\"' ,' K8S_AZURE_CLOUDPROVIDER_VERSION=','\"',parameters('kubernetesAzureCloudProviderVersion'),'\"' ,' REGION_NAME=','\"',variables('location'),'\"' ,' SSH_PUBLICKEY=','\"',parameters('sshPublicKey'),'\"' ,' STORAGE_PROFILE=','\"',parameters('storageProfile'),'\"',' AKSE_BASE_URL=','\"',parameters('aksEngineBaseURL'), '\"', ' AKSE_RELEASE_VERSION=','\"',parameters('aksEngineReleaseVersion'),'\"',' GALLERY_REPO=','\"',parameters('galleryRepository'),'\"',' GALLERY_BRANCH=','\"',parameters('galleryBranch'),'\"',' DEFINITION_TEMPLATE_NAME=','\"',parameters('clusterDefinitionFileName'),'\"',' K8S_IMAGE_BASE=','\"',parameters('kubernetesImageBase'),'\"')]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[toLower(variables('storageAccountName'))]",
      "apiVersion": "2015-06-15",
      "location": "[variables('location')]",
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('networkSecurityGroupName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": [
          {
            "name": "ssh",
            "properties": {
              "description": "Allow SSH",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 200,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddressName')]",
      "location": "[variables('location')]",
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[variables('dnsNameForPublicIP')]"
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[variables('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
        "[variables('networkSecurityGroupName')]"
      ],
      "properties": {
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
        },
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2016-03-30",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('vmName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "osProfile": {
          "customData": "[base64(concat('#cloud-config\n\nwrite_files:\n- path: \"/opt/azure/containers/script.sh\"\n  permissions: \"0744\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    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'))]",
          "computerName": "[variables('vmName')]",
          "adminUsername": "[parameters('linuxAdminUsername')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": "true",
            "ssh": {
              "publicKeys": [
                {
                  "keyData": "[parameters('sshPublicKey')]",
                  "path": "[variables('sshKeyPath')]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[variables('imageSku')]",
            "version": "[variables('imageVersion')]"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob, variables('vmStorageAccountContainerName'),'/',variables('OSDiskName'),'.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": "true",
            "storageUri": "[reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('vmName'),'/LinuxCustomScriptExtension')]",
      "apiVersion": "2016-03-30",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "CustomScript",
        "typeHandlerVersion": "2.0",
        "autoUpgradeMinorVersion": "true",
        "protectedSettings": {
          "commandToExecute": "[concat(variables('scriptParameters'), ' PUBLICIP_FQDN=', '\"', reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn,'\"',' /bin/bash /opt/azure/containers/script.sh >> /var/log/azure/deploy-script-dvm.log 2>&1')]"
        }
      }
    }
  ],
  "outputs": {
    "dvmPublicIpFqdn": {
      "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn]",
      "type": "string"
    }
  }
}
