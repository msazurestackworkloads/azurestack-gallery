{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "linuxAdminUsername": {
      "type": "string",
      "defaultValue": "azureuser",
      "metadata": {
        "description": "User name for the Linux virtual machines that are part of the Kubernetes cluster and DVM."
      }
    },
    "sshPublicKey": {
      "metadata": {
        "description": "SSH public key used for auth to all Linux machines created as part of the the Kubernetes cluster and DVM."
      },
      "type": "string"
    },
    "masterProfileDnsPrefix": {
      "type": "string",
      "metadata": {
        "description": "This must be a region-unique name e.g. k8s-12345. Try to chose it same as the resource group name as best practice."
      }
    },
    "agentPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes Node Pool Profile Count"
      },
      "type": "int"
    },
    "agentPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The VMSize of Kubernetes node VMs"
      },
      "type": "string"
    },
    "masterPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes Master Pool Profile Count"
      },
      "type": "int"
    },
    "masterPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The VMSize of Kubernetes master VMs"
      },
      "type": "string"
    },
    "storageProfile": {
      "defaultValue": "manageddisk",
      "metadata": {
        "description": "The Storage Profile"
      },
      "type": "string"
    },
    "servicePrincipalClientId": {
      "metadata": {
        "description": "The Service Principal application ID (used by the Kubernetes Azure cloud provider). More help here: https://github.com/Azure/aks-engine/blob/master/docs/topics/service-principals.md"
      },
      "type": "securestring"
    },
    "servicePrincipalClientSecret": {
      "metadata": {
        "description": "The Service Principal Client Secret."
      },
      "type": "securestring"
    },
    "identitySystem": {
      "defaultValue": "AzureAD",
      "allowedValues": [
        "AzureAD",
        "ADFS"
      ],
      "metadata": {
        "description": "The identity system of Azure Stack. The value could be AzureAD or ADFS"
      },
      "type": "string"
    },
    "kubernetesAzureCloudProviderVersion": {
      "type": "string",
      "defaultValue": "1.12",
      "metadata": {
        "description": "This is the version for the Kubernetes Azure cloud provider. We would use a custom Kubernetes build specifically for Azure Stack for each version."
      }
    },
    "aksEngineBaseURL": {
      "type": "string",
      "defaultValue": "https://github.com/Azure/aks-engine/releases/download",
      "metadata": {
        "description": "The beginning of the URL for downloading the AKS Engine binary"
      }
    },
    "aksEngineReleaseVersion": {
      "type": "string",
      "defaultValue": "v0.38.5",
      "metadata": {
        "description": "The version of AKS Engine to download"
      }
    },
    "galleryRepository": {
      "type": "string",
      "defaultValue": "msazurestackworkloads/azurestack-gallery",
      "metadata": {
        "description": "Marketplace item repository"
      }
    },
    "galleryBranch": {
      "type": "string",
      "defaultValue": "master",
      "metadata": {
        "description": "Marketplace item branch"
      }
    },
    "clusterDefinitionFileName": {
      "type": "string",
      "defaultValue": "clusterDefinition.json",
      "metadata": {
        "description": "The name of the file containing the cluster definition"
      }
    },
    "kubernetesImageBase": {
      "type": "string",
      "defaultValue": "mcr.microsoft.com/k8s/azurestack/core/",
      "metadata": {
        "description": "The base for Kubernetes images"
      }
    },
    "customVnetName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Name of the custom vnet"
      }
    },
    "masterSubnetName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Name of the master subnet"
      }
    },
    "agentSubnetName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Name of the agent subnet"
      }
    },
    "firstConsecutiveStaticIP": {
      "type": "string",
      "defaultValue": "10.100.0.5",
      "metadata": {
        "description": "First Consective Static IP"
      }
    },
    "networkPlugin": {
      "defaultValue": "flannel",
      "allowedValues": [
        "flannel",
        "azure",
        "kubenet"
      ],
      "metadata": {
        "description": "Network plugin which will deployed in Kubernetes cluster"
      },
      "type": "string"
    },
    "availabilityProfile": {
      "defaultValue": "AvailabilitySet",
      "allowedValues": [
        "AvailabilitySet",
        "VirtualMachineScaleSets"
      ],
      "metadata": {
        "description": "Availability profile that nodes in the Kubernetes cluster will be deployed with"
      },
      "type": "string"
    },
    "windowsAgentPoolProfileCount": {
      "defaultValue": "0",      
      "metadata": {
        "description": "Kubernetes Windows node pool profile count"
      },
      "type": "string"
    },
    "windowsAgentPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The VMSize of Kubernetes Windows node VMs"
      },
      "type": "string"
    },
    "windowsAdminUsername": {
      "defaultValue": "azureuser",
      "metadata": {
        "description": "User name for the Windows virtual machines that are part of the Kubernetes cluster."
      },
      "type": "string"
    },
    "windowsAdminPassword": {
      "defaultValue": "",
      "metadata": {
        "description": "Password for the Windows virtual machines that are part of the Kubernetes cluster."
      },
      "type": "securestring"
    },
    "windowsPackageBaseURL": {
      "defaultValue": "",
      "metadata": {
        "description": "URL path from where Windows binaries will be downloaded."
      },
      "type": "string"
    },
    "windowsPackageName": {
      "defaultValue": "",
      "metadata": {
        "description": "Name of the Windows package which will be installed."
      },
      "type": "string"
    },
    "nodeDistro": {
      "defaultValue": "ubuntu",
      "allowedValues": [
        "ubuntu",
        "aks-ubuntu-16.04"
      ],
      "metadata": {
        "description": "Node distro to be used to deploy Kubernetes on Azure Stack."
      },
      "type": "string"
    }
  },
  "variables": {
    "resourceGroupName": "[resourceGroup().name]",
    "dnsNameForPublicIP": "[toLower(concat('vmd-dns', parameters('masterProfileDnsPrefix')))]",
    "location": "[resourceGroup().location]",
    "imagePublisher": "Canonical",
    "imageOffer": "UbuntuServer",
    "imageSku": "16.04-LTS",
    "imageVersion": "latest",
    "vmSize": "Standard_D2_v2",
    "OSDiskName": "osdisk",
    "nicName": "[concat('vmd-vnic', uniqueString(resourceGroup().id))]",
    "addressPrefix": "10.0.0.0/24",
    "subnetName": "mySubnet",
    "subnetPrefix": "10.0.0.0/24",
    "storageAccountName": "[concat('vmdsa', uniquestring(resourceGroup().id))]",
    "storageAccountType": "Standard_LRS",
    "publicIPAddressName": "[concat('vmd-publicIP', uniqueString(resourceGroup().id))]",
    "publicIPAddressType": "Static",
    "vmStorageAccountContainerName": "vhds",
    "vmName": "[concat('vmd-', uniqueString(resourceGroup().id))]",
    "virtualNetworkName": "[concat('vmd-vnet-', uniqueString(resourceGroup().id))]",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
    "subnetRef": "[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]",
    "networkSecurityGroupName": "[tolower(concat('vmd-nsg',uniquestring(resourceGroup().id)))]",
    "sshKeyPath": "[concat('/home/',parameters('linuxAdminUsername'),'/.ssh/authorized_keys')]",
    "tenantSubscriptionId": "[subscription().subscriptionId]",
    "scriptName": "script",
    "singleQuote": "'",
    "scriptParameters": "[concat('IDENTITY_SYSTEM=','\"',parameters('identitySystem'),'\"',' WINDOWS_PACKAGE_NAME=','\"',parameters('windowsPackageName'),'\"' ,' WINDOWS_PACKAGE_URL=','\"',parameters('windowsPackageBaseURL'),'\"' ,' WINDOWS_AGENT_COUNT=','\"',parameters('windowsAgentPoolProfileCount'),'\"' ,' WINDOWS_AGENT_SIZE=','\"',parameters('windowsAgentPoolProfileVMSize'),'\"',' WINDOWS_ADMIN_USERNAME=','\"',parameters('windowsAdminUsername'),'\"',' WINDOWS_ADMIN_PASSWORD=','\"',parameters('windowsAdminPassword'),'\"',' NETWORK_PLUGIN=','\"',parameters('networkPlugin'),'\"',' AVAILABILITY_PROFILE=','\"',parameters('availabilityProfile'),'\"',' FIRST_CONSECUTIVE_STATIC_IP=','\"',parameters('firstConsecutiveStaticIP'),'\"',' AGENT_SUBNET_NAME=','\"',parameters('agentSubnetName'),'\"',' MASTER_SUBNET_NAME=','\"',parameters('masterSubnetName'),'\"',' CUSTOM_VNET_NAME=','\"',parameters('customVnetName'),'\"',' NODE_DISTRO=','\"',parameters('nodeDistro'),'\"',' RESOURCE_GROUP_NAME=','\"',variables('resourceGroupName'),'\"',' PUBLICIP_DNS=','\"',variables('dnsNameForPublicIP'),'\"' ,' TENANT_ID=','\"',subscription().tenantId,'\"' ,' TENANT_SUBSCRIPTION_ID=','\"',variables('tenantSubscriptionId'),'\"',' ADMIN_USERNAME=','\"',parameters('linuxAdminUsername'),'\"',' MASTER_DNS_PREFIX=','\"',parameters('masterProfileDnsPrefix'),'\"' ,' AGENT_COUNT=','\"',parameters('agentPoolProfileCount'),'\"' ,' AGENT_SIZE=','\"',parameters('agentPoolProfileVMSize'),'\"' ,' MASTER_COUNT=','\"',parameters('masterPoolProfileCount'),'\"',' MASTER_SIZE=','\"',parameters('masterPoolProfileVMSize'),'\"' ,' SPN_CLIENT_ID=','\"',parameters('servicePrincipalClientId'),'\"' ,' SPN_CLIENT_SECRET=','\"',parameters('servicePrincipalClientSecret'),'\"' ,' K8S_AZURE_CLOUDPROVIDER_VERSION=','\"',parameters('kubernetesAzureCloudProviderVersion'),'\"' ,' REGION_NAME=','\"',variables('location'),'\"' ,' SSH_PUBLICKEY=','\"',parameters('sshPublicKey'),'\"' ,' STORAGE_PROFILE=','\"',parameters('storageProfile'),'\"',' AKSE_BASE_URL=','\"',parameters('aksEngineBaseURL'), '\"', ' AKSE_RELEASE_VERSION=','\"',parameters('aksEngineReleaseVersion'),'\"',' GALLERY_REPO=','\"',parameters('galleryRepository'),'\"',' GALLERY_BRANCH=','\"',parameters('galleryBranch'),'\"',' DEFINITION_TEMPLATE_NAME=','\"',parameters('clusterDefinitionFileName'),'\"',' K8S_IMAGE_BASE=','\"',parameters('kubernetesImageBase'),'\"')]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[toLower(variables('storageAccountName'))]",
      "apiVersion": "2015-06-15",
      "location": "[variables('location')]",
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('networkSecurityGroupName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": [
          {
            "name": "ssh",
            "properties": {
              "description": "Allow SSH",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 200,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddressName')]",
      "location": "[variables('location')]",
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[variables('dnsNameForPublicIP')]"
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[variables('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
        "[variables('networkSecurityGroupName')]"
      ],
      "properties": {
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
        },
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2016-03-30",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('vmName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "osProfile": {
          "customData": "[base64(concat('#cloud-config\n\nwrite_files:\n- path: \"/opt/azure/containers/script.sh\"\n  permissions: \"0744\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    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'))]",
          "computerName": "[variables('vmName')]",
          "adminUsername": "[parameters('linuxAdminUsername')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": "true",
            "ssh": {
              "publicKeys": [
                {
                  "keyData": "[parameters('sshPublicKey')]",
                  "path": "[variables('sshKeyPath')]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[variables('imageSku')]",
            "version": "[variables('imageVersion')]"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob, variables('vmStorageAccountContainerName'),'/',variables('OSDiskName'),'.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": "true",
            "storageUri": "[reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('vmName'),'/LinuxCustomScriptExtension')]",
      "apiVersion": "2016-03-30",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "CustomScript",
        "typeHandlerVersion": "2.0",
        "autoUpgradeMinorVersion": "true",
        "protectedSettings": {
          "commandToExecute": "[concat(variables('scriptParameters'), ' PUBLICIP_FQDN=', '\"', reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn,'\"',' /bin/bash /opt/azure/containers/script.sh >> /var/log/azure/deploy-script-dvm.log 2>&1')]"
        }
      }
    }
  ],
  "outputs": {
    "dvmPublicIpFqdn": {
      "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn]",
      "type": "string"
    }
  }
}
