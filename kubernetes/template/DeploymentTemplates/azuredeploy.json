{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "linuxAdminUsername": {
      "type": "string",
      "defaultValue": "azureuser",
      "metadata": {
        "description": "User name for the Linux virtual machines that are part of the Kubernetes cluster and DVM."
      }
    },
    "sshPublicKey": {
      "metadata": {
        "description": "SSH public key used for auth to all Linux machines created as part of the the Kubernetes cluster and DVM."
      },
      "type": "string"
    },
    "masterProfileDnsPrefix": {
      "type": "string",
      "metadata": {
        "description": "This must be a region-unique name e.g. k8s-12345. Try to chose it same as the resource group name as best practice."
      }
    },
    "agentPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes linux node pool profile count"
      },
      "type": "int"
    },
    "agentPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The virtual machine size of the Kubernetes linux agent nodes"
      },
      "type": "string"
    },
    "masterPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes master pool profile count"
      },
      "type": "int"
    },
    "masterPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The virtual machine size of the Kubernetes master nodes"
      },
      "type": "string"
    },
    "storageProfile": {
      "defaultValue": "manageddisk",
      "metadata": {
        "description": "The Storage Profile"
      },
      "type": "string"
    },
    "servicePrincipalClientId": {
      "metadata": {
        "description": "The Service Principal application ID (used by the Kubernetes Azure cloud provider). More help here: https://github.com/Azure/aks-engine/blob/master/docs/topics/service-principals.md"
      },
      "type": "securestring"
    },
    "servicePrincipalClientSecret": {
      "metadata": {
        "description": "The Service Principal Client Secret."
      },
      "type": "securestring"
    },
    "identitySystem": {
      "defaultValue": "AzureAD",
      "allowedValues": [
        "AzureAD",
        "ADFS"
      ],
      "metadata": {
        "description": "The identity system of Azure Stack. The value could be AzureAD or ADFS"
      },
      "type": "string"
    },
    "kubernetesAzureCloudProviderVersion": {
      "type": "string",
      "defaultValue": "1.14.7",
      "metadata": {
        "description": "This is the version for the Kubernetes Azure cloud provider. We would use a custom Kubernetes build specifically for Azure Stack for each version."
      }
    },
    "aksEngineBaseURL": {
      "type": "string",
      "defaultValue": "https://github.com/Azure/aks-engine/releases/download",
      "metadata": {
        "description": "The beginning of the URL for downloading the AKS Engine binary"
      }
    },
    "aksEngineReleaseVersion": {
      "type": "string",
      "defaultValue": "v0.48.0",
      "metadata": {
        "description": "The version of AKS Engine to download"
      }
    },
    "galleryRepository": {
      "type": "string",
      "defaultValue": "msazurestackworkloads/azurestack-gallery",
      "metadata": {
        "description": "Marketplace item repository"
      }
    },
    "galleryBranch": {
      "type": "string",
      "defaultValue": "master",
      "metadata": {
        "description": "Marketplace item branch"
      }
    },
    "clusterDefinitionFileName": {
      "type": "string",
      "defaultValue": "clusterDefinition.json",
      "metadata": {
        "description": "The name of the file containing the cluster definition"
      }
    },
    "customVnetName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Name of the custom vnet"
      }
    },
    "masterSubnetName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Name of the master subnet"
      }
    },
    "agentSubnetName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Name of the agent subnet"
      }
    },
    "firstConsecutiveStaticIP": {
      "type": "string",
      "defaultValue": "10.100.0.5",
      "metadata": {
        "description": "First Consective Static IP"
      }
    },
    "networkPlugin": {
      "defaultValue": "kubenet",
      "allowedValues": [
        "flannel",
        "azure",
        "kubenet"
      ],
      "metadata": {
        "description": "Network plugin which will deployed in Kubernetes cluster"
      },
      "type": "string"
    },
    "networkPolicy": {
      "defaultValue": "",
      "allowedValues": [
        "",
        "azure"
      ],
      "metadata": {
        "description": "Network policy which will deployed in Kubernetes cluster"
      },
      "type": "string"
    },
    "availabilityProfile": {
      "defaultValue": "AvailabilitySet",
      "allowedValues": [
        "AvailabilitySet",
        "VirtualMachineScaleSets"
      ],
      "metadata": {
        "description": "Availability profile that nodes in the Kubernetes cluster will be deployed with"
      },
      "type": "string"
    },
    "windowsAgentPoolProfileCount": {
      "defaultValue": "0",
      "metadata": {
        "description": "Kubernetes Windows node pool profile count"
      },
      "type": "string"
    },
    "windowsAgentPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The virtual machine size of the Kubernetes Windows agent nodes"
      },
      "type": "string"
    },
    "windowsAdminUsername": {
      "defaultValue": "azureuser",
      "metadata": {
        "description": "User name for the Windows virtual machines that are part of the Kubernetes cluster."
      },
      "type": "string"
    },
    "windowsAdminPassword": {
      "defaultValue": "",
      "metadata": {
        "description": "Password for the Windows virtual machines that are part of the Kubernetes cluster."
      },
      "type": "securestring"
    },
    "customWindowsPackageURL": {
      "defaultValue": "",
      "metadata": {
        "description": "Custom Windows K8s zip location which will be used to deploy(kubelet, kubeproxy) on Windows node."
      },
      "type": "string"
    },
    "nodeDistro": {
      "defaultValue": "aks-ubuntu-16.04",
      "allowedValues": [
        "ubuntu",
        "aks-ubuntu-16.04"
      ],
      "metadata": {
        "description": "Node distro to be used to deploy Kubernetes on Azure Stack."
      },
      "type": "string"
    },
    "enableTillerAddOn": {
      "type": "string",
      "defaultValue": "false",
      "metadata": {
        "description": "Flag to enable Tiller addon"
      }
    },
    "containerRuntime": {
      "type": "string",
      "defaultValue": "docker",
      "allowedValues": [
        "docker",
        "containerd"
      ],
      "metadata": {
        "description": "Container runtime to deploy on each cluster node."
      }
    },
    "localAKSeBinaryURL": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Azure Stack blob url to download AKS engine from a blob store in disconnected environment "
      }
    },
    "dvmImagePublisher": {
      "type": "string",
      "defaultValue": "microsoft-aks",
      "metadata": {
        "description": "Azure VM image publisher to be used for the DVM"
      }
    },
    "dvmImageOffer": {
      "type": "string",
      "defaultValue": "aks",
      "metadata": {
        "description": "Azure VM image offer to be used for the DVM"
      }
    },
    "dvmImageSku": {
      "type": "string",
      "defaultValue": "aks-engine-ubuntu-1604-202003",
      "metadata": {
        "description": "Azure VM image sku to be used for the DVM"
      }
    },
    "dvmImageVersion": {
      "type": "string",
      "defaultValue": "2020.03.19",
      "metadata": {
        "description": "Azure VM image version to be used for the DVM"
      }
    }
  },
  "variables": {
    "resourceGroupName": "[resourceGroup().name]",
    "dnsNameForPublicIP": "[toLower(concat('vmd-dns', parameters('masterProfileDnsPrefix')))]",
    "location": "[resourceGroup().location]",
    "vmSize": "Standard_D2_v2",
    "OSDiskName": "osdisk",
    "nicName": "[concat('vmd-vnic', uniqueString(resourceGroup().id))]",
    "addressPrefix": "10.0.0.0/24",
    "subnetName": "mySubnet",
    "subnetPrefix": "10.0.0.0/24",
    "storageAccountName": "[concat('vmdsa', uniquestring(resourceGroup().id))]",
    "storageAccountType": "Standard_LRS",
    "publicIPAddressName": "[concat('vmd-publicIP', uniqueString(resourceGroup().id))]",
    "publicIPAddressType": "Static",
    "vmStorageAccountContainerName": "vhds",
    "vmName": "[concat('vmd-', uniqueString(resourceGroup().id))]",
    "virtualNetworkName": "[concat('vmd-vnet-', uniqueString(resourceGroup().id))]",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
    "subnetRef": "[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]",
    "networkSecurityGroupName": "[tolower(concat('vmd-nsg',uniquestring(resourceGroup().id)))]",
    "sshKeyPath": "[concat('/home/',parameters('linuxAdminUsername'),'/.ssh/authorized_keys')]",
    "tenantSubscriptionId": "[subscription().subscriptionId]",
    "scriptName": "script",
    "singleQuote": "'",
    "scriptParameters": "[concat('IDENTITY_SYSTEM=','\"',parameters('identitySystem'),'\"',' ENABLE_TILLER=','\"',parameters('enableTillerAddOn'),'\"' ,' CONTAINER_RUNTIME=','\"',parameters('containerRuntime'),'\"' ,' WINDOWS_CUSTOM_PACKAGE=','\"',parameters('customWindowsPackageURL'),'\"' ,' WINDOWS_AGENT_COUNT=','\"',parameters('windowsAgentPoolProfileCount'),'\"' ,' WINDOWS_AGENT_SIZE=','\"',parameters('windowsAgentPoolProfileVMSize'),'\"',' WINDOWS_ADMIN_USERNAME=','\"',parameters('windowsAdminUsername'),'\"',' WINDOWS_ADMIN_PASSWORD=','\"',parameters('windowsAdminPassword'),'\"',' NETWORK_PLUGIN=','\"',parameters('networkPlugin'),'\"',' NETWORK_POLICY=','\"',parameters('networkPolicy'),'\"',' AVAILABILITY_PROFILE=','\"',parameters('availabilityProfile'),'\"',' FIRST_CONSECUTIVE_STATIC_IP=','\"',parameters('firstConsecutiveStaticIP'),'\"',' AGENT_SUBNET_NAME=','\"',parameters('agentSubnetName'),'\"',' MASTER_SUBNET_NAME=','\"',parameters('masterSubnetName'),'\"',' CUSTOM_VNET_NAME=','\"',parameters('customVnetName'),'\"',' NODE_DISTRO=','\"',parameters('nodeDistro'),'\"',' RESOURCE_GROUP_NAME=','\"',variables('resourceGroupName'),'\"',' PUBLICIP_DNS=','\"',variables('dnsNameForPublicIP'),'\"' ,' TENANT_ID=','\"',subscription().tenantId,'\"' ,' TENANT_SUBSCRIPTION_ID=','\"',variables('tenantSubscriptionId'),'\"',' ADMIN_USERNAME=','\"',parameters('linuxAdminUsername'),'\"',' MASTER_DNS_PREFIX=','\"',parameters('masterProfileDnsPrefix'),'\"' ,' AGENT_COUNT=','\"',parameters('agentPoolProfileCount'),'\"' ,' AGENT_SIZE=','\"',parameters('agentPoolProfileVMSize'),'\"' ,' MASTER_COUNT=','\"',parameters('masterPoolProfileCount'),'\"',' MASTER_SIZE=','\"',parameters('masterPoolProfileVMSize'),'\"' ,' SPN_CLIENT_ID=','\"',parameters('servicePrincipalClientId'),'\"' ,' SPN_CLIENT_SECRET=','\"',parameters('servicePrincipalClientSecret'),'\"' ,' K8S_AZURE_CLOUDPROVIDER_VERSION=','\"',parameters('kubernetesAzureCloudProviderVersion'),'\"' ,' REGION_NAME=','\"',variables('location'),'\"' ,' SSH_PUBLICKEY=','\"',parameters('sshPublicKey'),'\"' ,' STORAGE_PROFILE=','\"',parameters('storageProfile'),'\"',' AKSE_BASE_URL=','\"',parameters('aksEngineBaseURL'), '\"', ' AKSE_RELEASE_VERSION=','\"',parameters('aksEngineReleaseVersion'),'\"',' GALLERY_REPO=','\"',parameters('galleryRepository'),'\"',' GALLERY_BRANCH=','\"',parameters('galleryBranch'),'\"',' DEFINITION_TEMPLATE_NAME=','\"',parameters('clusterDefinitionFileName'),'\"',' DISCONNECTED_AKS_ENGINE_URL=','\"',parameters('localAKSeBinaryURL'),'\"')]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[toLower(variables('storageAccountName'))]",
      "apiVersion": "2015-06-15",
      "location": "[variables('location')]",
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('networkSecurityGroupName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": [
          {
            "name": "ssh",
            "properties": {
              "description": "Allow SSH",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 200,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddressName')]",
      "location": "[variables('location')]",
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[variables('dnsNameForPublicIP')]"
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[variables('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
        "[variables('networkSecurityGroupName')]"
      ],
      "properties": {
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
        },
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2016-03-30",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('vmName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "osProfile": {
          "customData": "[base64(concat('#cloud-config\n\nwrite_files:\n- path: \"/opt/azure/containers/script.sh\"\n  permissions: \"0744\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    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'))]",
          "computerName": "[variables('vmName')]",
          "adminUsername": "[parameters('linuxAdminUsername')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": "true",
            "ssh": {
              "publicKeys": [
                {
                  "keyData": "[parameters('sshPublicKey')]",
                  "path": "[variables('sshKeyPath')]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[parameters('dvmImagePublisher')]",
            "offer": "[parameters('dvmImageOffer')]",
            "sku": "[parameters('dvmImageSku')]",
            "version": "[parameters('dvmImageVersion')]"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob, variables('vmStorageAccountContainerName'),'/',variables('OSDiskName'),'.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": "true",
            "storageUri": "[reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('vmName'),'/LinuxCustomScriptExtension')]",
      "apiVersion": "2016-03-30",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "CustomScript",
        "typeHandlerVersion": "2.0",
        "autoUpgradeMinorVersion": "true",
        "protectedSettings": {
          "commandToExecute": "[concat(variables('scriptParameters'), ' PUBLICIP_FQDN=', '\"', reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn,'\"',' /bin/bash /opt/azure/containers/script.sh >> /var/log/azure/deploy-script-dvm.log 2>&1')]"
        }
      }
    }
  ],
  "outputs": {
    "dvmPublicIpFqdn": {
      "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn]",
      "type": "string"
    }
  }
}
