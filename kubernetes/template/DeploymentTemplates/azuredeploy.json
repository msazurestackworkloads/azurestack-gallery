{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "linuxAdminUsername": {
      "type": "string",
      "defaultValue": "azureuser",
      "metadata": {
        "description": "User name for the Linux virtual machines that are part of the Kubernetes cluster and DVM."
      }
    },
    "sshPublicKey": {
      "metadata": {
        "description": "SSH public key used for auth to all Linux machines created as part of the the Kubernetes cluster and DVM."
      },
      "type": "string"
    },
    "masterProfileDnsPrefix": {
      "type": "string",
      "metadata": {
        "description": "This must be a region-unique name e.g. k8s-12345. Try to chose it same as the resource group name as best practice."
      }
    },
    "agentPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes linux node pool profile count"
      },
      "type": "int"
    },
    "agentPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The virtual machine size of the Kubernetes linux agent nodes"
      },
      "type": "string"
    },
    "masterPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes master pool profile count"
      },
      "type": "int"
    },
    "masterPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The virtual machine size of the Kubernetes master nodes"
      },
      "type": "string"
    },
    "storageProfile": {
      "defaultValue": "manageddisk",
      "metadata": {
        "description": "The Storage Profile"
      },
      "type": "string"
    },
    "servicePrincipalClientId": {
      "metadata": {
        "description": "The Service Principal application ID (used by the Kubernetes Azure cloud provider). More help here: https://github.com/Azure/aks-engine/blob/master/docs/topics/service-principals.md"
      },
      "type": "securestring"
    },
    "servicePrincipalClientSecret": {
      "metadata": {
        "description": "The Service Principal Client Secret."
      },
      "type": "securestring"
    },
    "identitySystem": {
      "defaultValue": "AzureAD",
      "allowedValues": [
        "AzureAD",
        "ADFS"
      ],
      "metadata": {
        "description": "The identity system of Azure Stack. The value could be AzureAD or ADFS"
      },
      "type": "string"
    },
    "kubernetesAzureCloudProviderVersion": {
      "type": "string",
      "defaultValue": "1.12",
      "metadata": {
        "description": "This is the version for the Kubernetes Azure cloud provider. We would use a custom Kubernetes build specifically for Azure Stack for each version."
      }
    },
    "aksEngineBaseURL": {
      "type": "string",
      "defaultValue": "https://github.com/Azure/aks-engine/releases/download",
      "metadata": {
        "description": "The beginning of the URL for downloading the AKS Engine binary"
      }
    },
    "aksEngineReleaseVersion": {
      "type": "string",
      "defaultValue": "v0.39.1",
      "metadata": {
        "description": "The version of AKS Engine to download"
      }
    },
    "galleryRepository": {
      "type": "string",
      "defaultValue": "msazurestackworkloads/azurestack-gallery",
      "metadata": {
        "description": "Marketplace item repository"
      }
    },
    "galleryBranch": {
      "type": "string",
      "defaultValue": "master",
      "metadata": {
        "description": "Marketplace item branch"
      }
    },
    "clusterDefinitionFileName": {
      "type": "string",
      "defaultValue": "clusterDefinition.json",
      "metadata": {
        "description": "The name of the file containing the cluster definition"
      }
    },
    "kubernetesImageBase": {
      "type": "string",
      "defaultValue": "mcr.microsoft.com/k8s/azurestack/core/",
      "metadata": {
        "description": "The base for Kubernetes images"
      }
    },
    "customVnetName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Name of the custom vnet"
      }
    },
    "masterSubnetName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Name of the master subnet"
      }
    },
    "agentSubnetName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Name of the agent subnet"
      }
    },
    "firstConsecutiveStaticIP": {
      "type": "string",
      "defaultValue": "10.100.0.5",
      "metadata": {
        "description": "First Consective Static IP"
      }
    },
    "networkPlugin": {
      "defaultValue": "flannel",
      "allowedValues": [
        "flannel",
        "azure",
        "kubenet"
      ],
      "metadata": {
        "description": "Network plugin which will deployed in Kubernetes cluster"
      },
      "type": "string"
    },
    "availabilityProfile": {
      "defaultValue": "AvailabilitySet",
      "allowedValues": [
        "AvailabilitySet",
        "VirtualMachineScaleSets"
      ],
      "metadata": {
        "description": "Availability profile that nodes in the Kubernetes cluster will be deployed with"
      },
      "type": "string"
    },
    "windowsAgentPoolProfileCount": {
      "defaultValue": "0",      
      "metadata": {
        "description": "Kubernetes Windows node pool profile count"
      },
      "type": "string"
    },
    "windowsAgentPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The virtual machine size of the Kubernetes Windows agent nodes"
      },
      "type": "string"
    },
    "windowsAdminUsername": {
      "defaultValue": "azureuser",
      "metadata": {
        "description": "User name for the Windows virtual machines that are part of the Kubernetes cluster."
      },
      "type": "string"
    },
    "windowsAdminPassword": {
      "defaultValue": "",
      "metadata": {
        "description": "Password for the Windows virtual machines that are part of the Kubernetes cluster."
      },
      "type": "securestring"
    },
    "windowsPackageBaseURL": {
      "defaultValue": "",
      "metadata": {
        "description": "URL path from where Windows binaries will be downloaded."
      },
      "type": "string"
    },
    "windowsPackageName": {
      "defaultValue": "",
      "metadata": {
        "description": "Name of the Windows package which will be installed."
      },
      "type": "string"
    },
    "nodeDistro": {
      "defaultValue": "ubuntu",
      "allowedValues": [
        "ubuntu",
        "aks-ubuntu-16.04"
      ],
      "metadata": {
        "description": "Node distro to be used to deploy Kubernetes on Azure Stack."
      },
      "type": "string"
    }
  },
  "variables": {
    "resourceGroupName": "[resourceGroup().name]",
    "dnsNameForPublicIP": "[toLower(concat('vmd-dns', parameters('masterProfileDnsPrefix')))]",
    "location": "[resourceGroup().location]",
    "imagePublisher": "Canonical",
    "imageOffer": "UbuntuServer",
    "imageSku": "16.04-LTS",
    "imageVersion": "latest",
    "vmSize": "Standard_D2_v2",
    "OSDiskName": "osdisk",
    "nicName": "[concat('vmd-vnic', uniqueString(resourceGroup().id))]",
    "addressPrefix": "10.0.0.0/24",
    "subnetName": "mySubnet",
    "subnetPrefix": "10.0.0.0/24",
    "storageAccountName": "[concat('vmdsa', uniquestring(resourceGroup().id))]",
    "storageAccountType": "Standard_LRS",
    "publicIPAddressName": "[concat('vmd-publicIP', uniqueString(resourceGroup().id))]",
    "publicIPAddressType": "Static",
    "vmStorageAccountContainerName": "vhds",
    "vmName": "[concat('vmd-', uniqueString(resourceGroup().id))]",
    "virtualNetworkName": "[concat('vmd-vnet-', uniqueString(resourceGroup().id))]",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
    "subnetRef": "[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]",
    "networkSecurityGroupName": "[tolower(concat('vmd-nsg',uniquestring(resourceGroup().id)))]",
    "sshKeyPath": "[concat('/home/',parameters('linuxAdminUsername'),'/.ssh/authorized_keys')]",
    "tenantSubscriptionId": "[subscription().subscriptionId]",
    "scriptName": "script",
    "singleQuote": "'",
    "scriptParameters": "[concat('IDENTITY_SYSTEM=','\"',parameters('identitySystem'),'\"',' WINDOWS_PACKAGE_NAME=','\"',parameters('windowsPackageName'),'\"' ,' WINDOWS_PACKAGE_URL=','\"',parameters('windowsPackageBaseURL'),'\"' ,' WINDOWS_AGENT_COUNT=','\"',parameters('windowsAgentPoolProfileCount'),'\"' ,' WINDOWS_AGENT_SIZE=','\"',parameters('windowsAgentPoolProfileVMSize'),'\"',' WINDOWS_ADMIN_USERNAME=','\"',parameters('windowsAdminUsername'),'\"',' WINDOWS_ADMIN_PASSWORD=','\"',parameters('windowsAdminPassword'),'\"',' NETWORK_PLUGIN=','\"',parameters('networkPlugin'),'\"',' AVAILABILITY_PROFILE=','\"',parameters('availabilityProfile'),'\"',' FIRST_CONSECUTIVE_STATIC_IP=','\"',parameters('firstConsecutiveStaticIP'),'\"',' AGENT_SUBNET_NAME=','\"',parameters('agentSubnetName'),'\"',' MASTER_SUBNET_NAME=','\"',parameters('masterSubnetName'),'\"',' CUSTOM_VNET_NAME=','\"',parameters('customVnetName'),'\"',' NODE_DISTRO=','\"',parameters('nodeDistro'),'\"',' RESOURCE_GROUP_NAME=','\"',variables('resourceGroupName'),'\"',' PUBLICIP_DNS=','\"',variables('dnsNameForPublicIP'),'\"' ,' TENANT_ID=','\"',subscription().tenantId,'\"' ,' TENANT_SUBSCRIPTION_ID=','\"',variables('tenantSubscriptionId'),'\"',' ADMIN_USERNAME=','\"',parameters('linuxAdminUsername'),'\"',' MASTER_DNS_PREFIX=','\"',parameters('masterProfileDnsPrefix'),'\"' ,' AGENT_COUNT=','\"',parameters('agentPoolProfileCount'),'\"' ,' AGENT_SIZE=','\"',parameters('agentPoolProfileVMSize'),'\"' ,' MASTER_COUNT=','\"',parameters('masterPoolProfileCount'),'\"',' MASTER_SIZE=','\"',parameters('masterPoolProfileVMSize'),'\"' ,' SPN_CLIENT_ID=','\"',parameters('servicePrincipalClientId'),'\"' ,' SPN_CLIENT_SECRET=','\"',parameters('servicePrincipalClientSecret'),'\"' ,' K8S_AZURE_CLOUDPROVIDER_VERSION=','\"',parameters('kubernetesAzureCloudProviderVersion'),'\"' ,' REGION_NAME=','\"',variables('location'),'\"' ,' SSH_PUBLICKEY=','\"',parameters('sshPublicKey'),'\"' ,' STORAGE_PROFILE=','\"',parameters('storageProfile'),'\"',' AKSE_BASE_URL=','\"',parameters('aksEngineBaseURL'), '\"', ' AKSE_RELEASE_VERSION=','\"',parameters('aksEngineReleaseVersion'),'\"',' GALLERY_REPO=','\"',parameters('galleryRepository'),'\"',' GALLERY_BRANCH=','\"',parameters('galleryBranch'),'\"',' DEFINITION_TEMPLATE_NAME=','\"',parameters('clusterDefinitionFileName'),'\"',' K8S_IMAGE_BASE=','\"',parameters('kubernetesImageBase'),'\"')]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[toLower(variables('storageAccountName'))]",
      "apiVersion": "2015-06-15",
      "location": "[variables('location')]",
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('networkSecurityGroupName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": [
          {
            "name": "ssh",
            "properties": {
              "description": "Allow SSH",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 200,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddressName')]",
      "location": "[variables('location')]",
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[variables('dnsNameForPublicIP')]"
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[variables('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
        "[variables('networkSecurityGroupName')]"
      ],
      "properties": {
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
        },
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2016-03-30",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('vmName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "osProfile": {
          "customData": "[base64(concat('#cloud-config\n\nwrite_files:\n- path: \"/opt/azure/containers/script.sh\"\n  permissions: \"0744\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    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'))]",
          "computerName": "[variables('vmName')]",
          "adminUsername": "[parameters('linuxAdminUsername')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": "true",
            "ssh": {
              "publicKeys": [
                {
                  "keyData": "[parameters('sshPublicKey')]",
                  "path": "[variables('sshKeyPath')]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[variables('imageSku')]",
            "version": "[variables('imageVersion')]"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob, variables('vmStorageAccountContainerName'),'/',variables('OSDiskName'),'.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": "true",
            "storageUri": "[reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('vmName'),'/LinuxCustomScriptExtension')]",
      "apiVersion": "2016-03-30",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "CustomScript",
        "typeHandlerVersion": "2.0",
        "autoUpgradeMinorVersion": "true",
        "protectedSettings": {
          "commandToExecute": "[concat(variables('scriptParameters'), ' PUBLICIP_FQDN=', '\"', reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn,'\"',' /bin/bash /opt/azure/containers/script.sh >> /var/log/azure/deploy-script-dvm.log 2>&1')]"
        }
      }
    }
  ],
  "outputs": {
    "dvmPublicIpFqdn": {
      "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn]",
      "type": "string"
    }
  }
}
