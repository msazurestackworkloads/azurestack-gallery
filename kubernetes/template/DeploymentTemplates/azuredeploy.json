{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "linuxAdminUsername": {
      "type": "string",
      "defaultValue": "azureuser",
      "metadata": {
        "description": "User name for the Linux Virtual Machines that are part of the Kubernetes cluster and DVM."
      }
    },
    "sshPublicKey": {
      "metadata": {
        "description": "SSH public key used for auth to all Linux machines created as part of the the Kubernetes cluster and DVM."
      },
      "type": "string"
    },
    "masterProfileDnsPrefix": {
      "type": "string",
      "metadata": {
        "description": "This must be a region-unique name e.g. k8s-12345. Try to chose it same as the resource group name as best practice."
      }
    },
    "agentPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes Node Pool Profile Count"
      },
      "type": "int"
    },
    "agentPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The VMSize of Kubernetes node VMs"
      },
      "type": "string"
    },
    "masterPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes Master Pool Profile Count"
      },
      "type": "int"
    },
    "masterPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The VMSize of Kubernetes master VMs"
      },
      "type": "string"
    },
    "storageProfile": {
      "defaultValue": "manageddisk",
      "metadata": {
        "description": "The Storage Profile"
      },
      "type": "string"
    },
    "servicePrincipalClientId": {
      "metadata": {
        "description": "The Service Principal application ID (used by the Kubernetes Azure cloud provider). More help here: https://github.com/Azure/aks-engine/blob/master/docs/topics/service-principals.md"
      },
      "type": "securestring"
    },
    "servicePrincipalClientSecret": {
      "metadata": {
        "description": "The Service Principal Client Secret."
      },
      "type": "securestring"
    },
    "identitySystem": {
      "defaultValue": "AzureAD",
      "allowedValues": [
        "AzureAD",
        "ADFS"
      ],
      "metadata": {
        "description": "The identity system of Azure Stack. The value could be AzureAD or ADFS"
      },
      "type": "string"
    },
    "kubernetesAzureCloudProviderVersion": {
      "type": "string",
      "defaultValue": "1.12",
      "metadata": {
        "description": "This is the version for the Kubernetes Azure cloud provider. We would use a custom Kubernetes build specifically for Azure Stack for each version."
      }
    },
    "aksEngineBaseURL": {
      "type": "string",
      "defaultValue": "https://github.com/Azure/aks-engine/releases/download",
      "metadata": {
        "description": "The beginning of the URL for downloading the AKS Engine binary"
      }
    },
    "aksEngineReleaseVersion": {
      "type": "string",
      "defaultValue": "v0.37.4",
      "metadata": {
        "description": "The version of AKS Engine to download"
      }
    },
    "galleryRepository": {
      "type": "string",
      "defaultValue": "msazurestackworkloads/azurestack-gallery",
      "metadata": {
        "description": "Marketplace item repository"
      }
    },
    "galleryBranch": {
      "type": "string",
      "defaultValue": "master",
      "metadata": {
        "description": "Marketplace item branch"
      }
    },
    "clusterDefinitionFileName": {
      "type": "string",
      "defaultValue": "clusterDefinition.json",
      "metadata": {
        "description": "The name of the file containing the cluster definition"
      }
    },
    "kubernetesImageBase": {
      "type": "string",
      "defaultValue": "mcr.microsoft.com/k8s/azurestack/core/",
      "metadata": {
        "description": "The base for Kubernetes images"
      }
    },
    "customVnetName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Name of the custom vnet"
      }
    },
    "masterSubnetName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Name of the master subnet"
      }
    },
    "agentSubnetName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Name of the agent subnet"
      }
    },
    "firstConsecutiveStaticIP": {
      "type": "string",
      "defaultValue": "10.100.0.5",
      "metadata": {
        "description": "First Consective Static IP"
      }
    },
    "nodeDistro": {
      "defaultValue": "ubuntu",
      "allowedValues": [
        "ubuntu",
        "aks"
      ],
      "metadata": {
        "description": "Node distro to be used to deploy Kubernetes on Azure Stack."
      },
      "type": "string"
    }
  },
  "variables": {
    "resourceGroupName": "[resourceGroup().name]",
    "dnsNameForPublicIP": "[toLower(concat('vmd-dns', parameters('masterProfileDnsPrefix')))]",
    "location": "[resourceGroup().location]",
    "imagePublisher": "Canonical",
    "imageOffer": "UbuntuServer",
    "imageSku": "16.04-LTS",
    "imageVersion": "latest",
    "vmSize": "Standard_D2_v2",
    "OSDiskName": "osdisk",
    "nicName": "[concat('vmd-vnic', uniqueString(resourceGroup().id))]",
    "addressPrefix": "10.0.0.0/24",
    "subnetName": "mySubnet",
    "subnetPrefix": "10.0.0.0/24",
    "storageAccountName": "[concat('vmdsa', uniquestring(resourceGroup().id))]",
    "storageAccountType": "Standard_LRS",
    "publicIPAddressName": "[concat('vmd-publicIP', uniqueString(resourceGroup().id))]",
    "publicIPAddressType": "Static",
    "vmStorageAccountContainerName": "vhds",
    "vmName": "[concat('vmd-', uniqueString(resourceGroup().id))]",
    "virtualNetworkName": "[concat('vmd-vnet-', uniqueString(resourceGroup().id))]",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
    "subnetRef": "[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]",
    "networkSecurityGroupName": "[tolower(concat('vmd-nsg',uniquestring(resourceGroup().id)))]",
    "sshKeyPath": "[concat('/home/',parameters('linuxAdminUsername'),'/.ssh/authorized_keys')]",
    "tenantSubscriptionId": "[subscription().subscriptionId]",
    "scriptName": "script",
    "singleQuote": "'",
    "scriptParameters": "[concat('IDENTITY_SYSTEM=','\"',parameters('identitySystem'),'\"',' FIRST_CONSECUTIVE_STATIC_IP=','\"',parameters('firstConsecutiveStaticIP'),'\"',' AGENT_SUBNET_NAME=','\"',parameters('agentSubnetName'),'\"',' MASTER_SUBNET_NAME=','\"',parameters('masterSubnetName'),'\"',' CUSTOM_VNET_NAME=','\"',parameters('customVnetName'),'\"',' NODE_DISTRO=','\"',parameters('nodeDistro'),'\"',' RESOURCE_GROUP_NAME=','\"',variables('resourceGroupName'),'\"',' PUBLICIP_DNS=','\"',variables('dnsNameForPublicIP'),'\"' ,' TENANT_ID=','\"',subscription().tenantId,'\"' ,' TENANT_SUBSCRIPTION_ID=','\"',variables('tenantSubscriptionId'),'\"',' ADMIN_USERNAME=','\"',parameters('linuxAdminUsername'),'\"',' MASTER_DNS_PREFIX=','\"',parameters('masterProfileDnsPrefix'),'\"' ,' AGENT_COUNT=','\"',parameters('agentPoolProfileCount'),'\"' ,' AGENT_SIZE=','\"',parameters('agentPoolProfileVMSize'),'\"' ,' MASTER_COUNT=','\"',parameters('masterPoolProfileCount'),'\"',' MASTER_SIZE=','\"',parameters('masterPoolProfileVMSize'),'\"' ,' SPN_CLIENT_ID=','\"',parameters('servicePrincipalClientId'),'\"' ,' SPN_CLIENT_SECRET=','\"',parameters('servicePrincipalClientSecret'),'\"' ,' K8S_AZURE_CLOUDPROVIDER_VERSION=','\"',parameters('kubernetesAzureCloudProviderVersion'),'\"' ,' REGION_NAME=','\"',variables('location'),'\"' ,' SSH_PUBLICKEY=','\"',parameters('sshPublicKey'),'\"' ,' STORAGE_PROFILE=','\"',parameters('storageProfile'),'\"',' AKSE_BASE_URL=','\"',parameters('aksEngineBaseURL'), '\"', ' AKSE_RELEASE_VERSION=','\"',parameters('aksEngineReleaseVersion'),'\"',' GALLERY_REPO=','\"',parameters('galleryRepository'),'\"',' GALLERY_BRANCH=','\"',parameters('galleryBranch'),'\"',' DEFINITION_TEMPLATE_NAME=','\"',parameters('clusterDefinitionFileName'),'\"',' K8S_IMAGE_BASE=','\"',parameters('kubernetesImageBase'),'\"')]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[toLower(variables('storageAccountName'))]",
      "apiVersion": "2015-06-15",
      "location": "[variables('location')]",
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('networkSecurityGroupName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": [
          {
            "name": "ssh",
            "properties": {
              "description": "Allow SSH",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 200,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddressName')]",
      "location": "[variables('location')]",
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[variables('dnsNameForPublicIP')]"
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[variables('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
        "[variables('networkSecurityGroupName')]"
      ],
      "properties": {
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
        },
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2016-03-30",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('vmName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "osProfile": {
          "customData": "[base64(concat('#cloud-config\n\nwrite_files:\n- path: \"/opt/azure/containers/script.sh\"\n  permissions: \"0744\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    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'))]",
          "computerName": "[variables('vmName')]",
          "adminUsername": "[parameters('linuxAdminUsername')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": "true",
            "ssh": {
              "publicKeys": [
                {
                  "keyData": "[parameters('sshPublicKey')]",
                  "path": "[variables('sshKeyPath')]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[variables('imageSku')]",
            "version": "[variables('imageVersion')]"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob, variables('vmStorageAccountContainerName'),'/',variables('OSDiskName'),'.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": "true",
            "storageUri": "[reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('vmName'),'/LinuxCustomScriptExtension')]",
      "apiVersion": "2016-03-30",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "CustomScript",
        "typeHandlerVersion": "2.0",
        "autoUpgradeMinorVersion": "true",
        "protectedSettings": {
          "commandToExecute": "[concat(variables('scriptParameters'), ' PUBLICIP_FQDN=', '\"', reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn,'\"',' /bin/bash /opt/azure/containers/script.sh >> /var/log/azure/deploy-script-dvm.log 2>&1')]"
        }
      }
    }
  ],
  "outputs": {
    "dvmPublicIpFqdn": {
      "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn]",
      "type": "string"
    }
  }
}
