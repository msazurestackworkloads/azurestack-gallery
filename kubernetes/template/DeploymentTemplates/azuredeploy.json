{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "linuxAdminUsername": {
      "type": "string",
      "defaultValue": "azureuser",
      "metadata": {
        "description": "User name for the Linux Virtual Machines that are part of the Kubernetes cluster and DVM."
      }
    },
    "sshPublicKey": {
      "metadata": {
        "description": "SSH public key used for auth to all Linux machines created as part of the the Kubernetes cluster and DVM."
      },
      "type": "string"
    },
    "masterProfileDnsPrefix": {
      "type": "string",
      "metadata": {
        "description": "This must be a region-unique name e.g. k8s-12345. Try to chose it same as the resource group name as best practice."
      }
    },
    "agentPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes Node Pool Profile Count"
      },
      "type": "int"
    },
    "agentPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The VMSize of Kubernetes node VMs"
      },
      "type": "string"
    },
    "masterPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes Master Pool Profile Count"
      },
      "type": "int"
    },
    "masterPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The VMSize of Kubernetes master VMs"
      },
      "type": "string"
    },
    "storageProfile": {
      "defaultValue": "manageddisk",
      "metadata": {
        "description": "The Storage Profile"
      },
      "type": "string"
    },
    "servicePrincipalClientId": {
      "metadata": {
        "description": "The Service Principal application ID (used by the Kubernetes Azure cloud provider). More help here: https://github.com/Azure/aks-engine/blob/master/docs/topics/service-principals.md"
      },
      "type": "securestring"
    },
    "servicePrincipalClientSecret": {
      "metadata": {
        "description": "The Service Principal Client Secret."
      },
      "type": "securestring"
    },
    "identitySystem": {
      "defaultValue": "AzureAD",
      "allowedValues": [
        "AzureAD",
        "ADFS"
      ],
      "metadata": {
        "description": "The identity system of Azure Stack. The value could be AzureAD or ADFS"
      },
      "type": "string"
    },
    "kubernetesAzureCloudProviderVersion": {
      "type": "string",
      "defaultValue": "1.12",
      "metadata": {
        "description": "This is the version for the Kubernetes Azure cloud provider. We would use a custom Kubernetes build specifically for Azure Stack for each version."
      }
    },
    "aksEngineBaseURL": {
      "type": "string",
      "defaultValue": "https://github.com/Azure/aks-engine/releases/download",
      "metadata": {
        "description": "The beginning of the URL for downloading the AKS Engine binary"
      }
    },
    "aksEngineReleaseVersion": {
      "type": "string",
      "defaultValue": "v0.37.4",
      "metadata": {
        "description": "The version of AKS Engine to download"
      }
    },
    "galleryRepository": {
      "type": "string",
      "defaultValue": "msazurestackworkloads/azurestack-gallery",
      "metadata": {
        "description": "Marketplace item repository"
      }
    },
    "galleryBranch": {
      "type": "string",
      "defaultValue": "master",
      "metadata": {
        "description": "Marketplace item branch"
      }
    },
    "clusterDefinitionFileName": {
      "type": "string",
      "defaultValue": "clusterDefinition.json",
      "metadata": {
        "description": "The name of the file containing the cluster definition"
      }
    },
    "kubernetesImageBase": {
      "type": "string",
      "defaultValue": "mcr.microsoft.com/k8s/azurestack/core/",
      "metadata": {
        "description": "The base for Kubernetes images"
      }
    },
    "nodeDistro": {
      "defaultValue": "ubuntu",
      "allowedValues": [
        "ubuntu",
        "aks"
      ],
      "metadata": {
        "description": "Node distro to be used to deploy Kubernetes on Azure Stack. The value could be ubuntu or aks."
      },
      "type": "string"
    }
  },
  "variables": {
    "resourceGroupName": "[resourceGroup().name]",
    "dnsNameForPublicIP": "[toLower(concat('vmd-dns', parameters('masterProfileDnsPrefix')))]",
    "location": "[resourceGroup().location]",
    "imagePublisher": "Canonical",
    "imageOffer": "UbuntuServer",
    "imageSku": "16.04-LTS",
    "imageVersion": "latest",
    "vmSize": "Standard_D2_v2",
    "OSDiskName": "osdisk",
    "nicName": "[concat('vmd-vnic', uniqueString(resourceGroup().id))]",
    "addressPrefix": "10.0.0.0/24",
    "subnetName": "mySubnet",
    "subnetPrefix": "10.0.0.0/24",
    "storageAccountName": "[concat('vmdsa', uniquestring(resourceGroup().id))]",
    "storageAccountType": "Standard_LRS",
    "publicIPAddressName": "[concat('vmd-publicIP', uniqueString(resourceGroup().id))]",
    "publicIPAddressType": "Static",
    "vmStorageAccountContainerName": "vhds",
    "vmName": "[concat('vmd-', uniqueString(resourceGroup().id))]",
    "virtualNetworkName": "[concat('vmd-vnet-', uniqueString(resourceGroup().id))]",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
    "subnetRef": "[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]",
    "networkSecurityGroupName": "[tolower(concat('vmd-nsg',uniquestring(resourceGroup().id)))]",
    "sshKeyPath": "[concat('/home/',parameters('linuxAdminUsername'),'/.ssh/authorized_keys')]",
    "tenantSubscriptionId": "[subscription().subscriptionId]",
    "scriptName": "script",
    "singleQuote": "'",
    "scriptParameters": "[concat('IDENTITY_SYSTEM=','\"',parameters('identitySystem'),'\"',' NODE_DISTRO=','\"',parameters('nodeDistro'),'\"',' RESOURCE_GROUP_NAME=','\"',variables('resourceGroupName'),'\"',' PUBLICIP_DNS=','\"',variables('dnsNameForPublicIP'),'\"' ,' TENANT_ID=','\"',subscription().tenantId,'\"' ,' TENANT_SUBSCRIPTION_ID=','\"',variables('tenantSubscriptionId'),'\"',' ADMIN_USERNAME=','\"',parameters('linuxAdminUsername'),'\"',' MASTER_DNS_PREFIX=','\"',parameters('masterProfileDnsPrefix'),'\"' ,' AGENT_COUNT=','\"',parameters('agentPoolProfileCount'),'\"' ,' AGENT_SIZE=','\"',parameters('agentPoolProfileVMSize'),'\"' ,' MASTER_COUNT=','\"',parameters('masterPoolProfileCount'),'\"',' MASTER_SIZE=','\"',parameters('masterPoolProfileVMSize'),'\"' ,' SPN_CLIENT_ID=','\"',parameters('servicePrincipalClientId'),'\"' ,' SPN_CLIENT_SECRET=','\"',parameters('servicePrincipalClientSecret'),'\"' ,' K8S_AZURE_CLOUDPROVIDER_VERSION=','\"',parameters('kubernetesAzureCloudProviderVersion'),'\"' ,' REGION_NAME=','\"',variables('location'),'\"' ,' SSH_PUBLICKEY=','\"',parameters('sshPublicKey'),'\"' ,' STORAGE_PROFILE=','\"',parameters('storageProfile'),'\"',' AKSE_BASE_URL=','\"',parameters('aksEngineBaseURL'), '\"', ' AKSE_RELEASE_VERSION=','\"',parameters('aksEngineReleaseVersion'),'\"',' GALLERY_REPO=','\"',parameters('galleryRepository'),'\"',' GALLERY_BRANCH=','\"',parameters('galleryBranch'),'\"',' DEFINITION_TEMPLATE_NAME=','\"',parameters('clusterDefinitionFileName'),'\"',' K8S_IMAGE_BASE=','\"',parameters('kubernetesImageBase'),'\"')]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[toLower(variables('storageAccountName'))]",
      "apiVersion": "2015-06-15",
      "location": "[variables('location')]",
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('networkSecurityGroupName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": [
          {
            "name": "ssh",
            "properties": {
              "description": "Allow SSH",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 200,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddressName')]",
      "location": "[variables('location')]",
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[variables('dnsNameForPublicIP')]"
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[variables('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
        "[variables('networkSecurityGroupName')]"
      ],
      "properties": {
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
        },
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2016-03-30",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('vmName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "osProfile": {
          "customData": "[base64(concat('#cloud-config\n\nwrite_files:\n- path: \"/opt/azure/containers/script.sh\"\n  permissions: \"0744\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    H4sIAAAAAAAA/7w763LbttL/+RR7aE6ddErJdo875ySlW0WiXU1kSUeSm6ZxPgaiIBk1CTAAaFtp+u7fALyIN0nuxdEPj0nsHYvF7gI8+Fd7Tmh7jsQN2Ngw3MnE64xnXn84nXUGA2/Wv3RHVzPnv3AAMxJiFksgVEgUBISugOOPMeF4ASiSECH/Fq2wSIi8nrpeb/RmOBh1es7xERzAOSJBzDEs2D0NGFooAp3XU9ulK0IxzAlFnJTQ3fFg9NY5Pikg+ynnDeKhgAWOArYGFmGOJGFUk5i5l+NBZ1aU4tv9UkgcRgGSWJPodrruJDeGc1LUImR3CrXbAR9zSZbEz7Au3Vmn15l1PHfYG4/6w5nz7VGDBvIGQ4glWiCJANNFxAiV6QT0vctRzx04/y4izmMSJOKO+xCyBQ4gFuo5FpgDoVGcov869bqD0VXPm7gX/enMnTinTQKgT+AHLF4AxysiJOb57F+Ne8pw+eQXZ/8eEamwl4yrWbdXWEIcLZDEIBn4LIwCLLFxkM/ihTt0J52Z6xwf75vHFaZqBnFhJjWdy6l3Mb7wXrtv88nMhTv5botwl8TnTLClPBRwMb6AW7zOJz0VLzeUO/y5PxkNL93hzDktiimwlCVbYXpHOKMhprJKZDwZnfcHrnN6sotAxNmSBHiDPBhd9Idep9NzTov+KRkEbAWEqv86nV4z5xS5dz51Tv+9Fbt3Pm1G73S7o6vhzJtevXJOT5vE9n0WUwkLvERxIEHEc+FzEum5MYxlTH31L/gsCLAvvWQlKiYeogsvn0dh/G4AABzAVDK1ehChgB+IBJ8tsB5yf+nPvO6o5zrWD/qF/kOW8A6sfAxsiuEI3r9Uy4dqCPUL2MoL8B0OwCZgdmMhWTjVcgJ+kJgKJeMSkQAv4J7Imw3rAm1Tk1uSDfNHkeUxLXg+YbSVENIsNtSNPwzjALqJnWBjJ8VEAAru0Vp8A/gOU6WzCg4i5UQXIhEaUcCcM25IjqL9JtcWNYyDgwPjAAC+F3EYIr4+00/qN1CcWSyjWMJ8DRHHEaY6wujljOhCO1FiAbmO8DNXsf8G7hGnhK6+AUKXDBiHO8znTODnrYRTu8Tq+whxFAJFIXbMY/Nsto4yB23Bs59RQBZwh4IYC0AcvwAb6/WLE172vX7KWdpEPyvO3wAOBM6Zf9/WjBqYtlot82yUKIr9GwZCckJXrTIGxzLmVJwNGcXft7OnZAw/+Fg7fTq6ec5wQ8RvxVkXBZmPEQoChdk0ipYimQDpKcl969nzdG34SGAwrWMTyMazbfw8Edm0nqlZeQ7vXM7fA5hg/f7ji5M/csiXLzdI9zWkN4jT97uRSA2pT5dsN9LXz6GK1MPzeLUdCwvk67WwzS21Qyj/I0tQkVItJCG1NxIJN0gAZRQ+Yc5gvpZYtKC/VP6jkNR6jJAQWKj9GYuEgGRA8T0EzNcQj3LSKYu5j+Fc4Q9RiFvbvevEPOthIQlN+G9DeZx7dVEaF5MwpdZAEqeOVTDXLqJ1WjCsDCFT6zAOgnzCQIS2TOuf8NDUpliHFY6FCtyeH8QqVfAWeEkoUfRz/9Wh+l9gC7COd0VoDGY3oQIbKolWh9bxYYNqRCrFcBjJdQs6aRSEGxRFmCpdbhRuiCiJ4gDpfYtIAb8JvTFRialMY3Iel4+LsT68UxJbJzvdErosIlhA55PaH6cS+bfAGZPF9E95morcKIo4izhRr7TZml3uywYcTEWsJnAjrsinrrzRXSapbRFSaVbTKrFp59eriTuddbqvvcloNPNUytw/73dVBjkdXU26rjfuzH5yzPYd4u2AzNv3CK0wle1ugUErwuF+ej13OsuoxYK31ZIO2uIGcdz2kV2UuI0+iQKDls+luXVnZ9EaUnxYchbCofVItQ6VZXZD50IfQiKBH8Fjye8GzClvFHsE3fP+8MKdjCeqMvnAIkyFCODh9Oi/YBP6eMlsylTKbS8JXWEecULlhwbb/jmBXjyKfwHBfJzq2lJ/Q/Hc0v+E2lVh9ihdBS+onBRedsX1N+MHMMkq9Pk6DV3dQT/NTyPGJUzc/12509nU63a8V1fD3sB12lj6bSGCtiIqqgtLraSEgN73/xK+CZ9BYgw2Ag1cKE7gDNoLfNemcRAkOXMvLdogFEhpIFTsvWf8Vr0Uh6qE1Bnjrc4R1L4PHAf4DlGpdxWRhWWFo7NbwrEvGV8bWT3ooVuB82ioy9Zf+2Nv2Ll0HRPdChvrEtW29NDEHbidqev97E6m/dHQDgiNH2wULr77t1kmcDUZOGaC9EphXE0G7UYa6duMaUsi3lp9SsNFzAOwbY4lX8Np9p+9wAFaw/ER2HaIHmxJQgzfHYE9UDuwvQR7BFZREPj8OatJqv2ZjcOEtwvCwY6g1Z6nWahEHOyHJTRKmMWzVkWB9sZoBVIb4wxG3c6sPxo6erAAXcokMqYZ9J6sosBTN5PWOotYsliljiqtirAv8SJPBM0tdNwq4IuKHLuSCf0n7z1pB7iRMhIv2m2O7lsrIm/ieSwwzzITn4Vt66IzGLiTt97EHY82T68mnWH3p/ZtPMecYrWpZe2pdi+v+mbpK9G2eu55f9hXEm66X2o2/pIf5U5UVKbsRLUWm6EZNYjhmK194hUmvQFwz9RvWmKZhXSV+Dq33D/oCg3S7XWIQm7855XLAiBewH49idB9ApUr6+jX2qZa5jd/VzWVzTTpVNzTuqPhef/iaqJXz7YsrL580R0iAZoHWM1ZhOQNWOM3vUrESBWsbL91OzUQ2yZhy0x2ns4dI0lve5n0xYTaRpeECwn+Dfb1bpJ2awLm36bbDeIYEFe+ZhzAedYik+gW0yS7VPBq1zoUSW03RwIvjHtEpLdk3EOR9BS5TX6eVDhL3ejN0+hFdLtqa7b5KxTJdkCEFIX3PvJvsB5B3L8hdzgdPMu3WTg5++r4JSzYZqrV1n74ptBNVTuqKj7ZUttDi3eYw4sA4wi+1c8LRnHRfJIjKnyitnYUSTvtFWcG/VMWUoZZYeklNLZUL1dqUPcuIwla+VYhY1Ixj2DhHB/pR0UxoeYljTCnLcOonTa2U2FbLJYbCrr7pHzIeibwRzgGK6X5vGTC+mzmQ2riwLZ9RpdkpVIyG+VjWUtdxd51dtRSG02NqOYtzaSsmibwGVYcR2C7YP7fs3dv3PcvWl8///zsHXbfc976+rm1WdrvwPohba3Ce/jqK/CRbCL51Vcw5xjdqm3gOsduBs6HkxYuARt/zG1Vi3jp3MScpiFGu2EgcAki9bOj/GUaiLTP5TOUJKbuA/ZjmZxNFY1mEVB7XFsk6jfM03bnTefj73lvSiR338wlreOXiTRaS8c6eakFZbF0rG+T5pm4IUs9C+V/vrRzZmawbcoym9gc+ywMdbfaXoP1+49/VNwLf8zdq8GJ/nEvsTa2LI2Wg8hf8qRH6H9tWj9em5mzCfPlLmd7ip9xAEIiLg2jHB6n6qUKj4Wcwc/bcVlS+QLujlqnrWOzgj2JKVXI6dkEEi8ArGf3NwyF5HkVeLoWEoe6Vc/DLMV4FlMUKq96blZFs/+hX1WOzuQSdCcWS8xFdfTJuPYu+0PvaupOVI77Arb/rDJojdCFO5x5+qBuFxVNaAPaTGXa/3WnKAUqCrRGpFjJ7iFSBG2kUymBd9GpgFbJbSss6pruqEHKJMsl2M7ZK4NuI6Qqu92WLxWBVTL9njuc9Wdvvenb6cy93EHJqoBWKb3+z9TTiW9ybD2ejH7u99xJZtsCZWsPaBPl/mXnIpn3naqWQauELjvTmTt5jMtbRdAtZHrDqTeeuOf9X7bSsmqgW2g9Yv1YBdAqleGo53q9/nQ22eMLYBVAq1TGV68G/W5/rMTdY54i6FYy5//rDXfSsUqgtT3BvVDLaV+UU3QKoHUqaXP3YjK6Gu+iZjWA1rae8dDrDvoqjvV7O6VqCt0F7KnbnbjbnbARe/qTlxjstfv2z/OejSZqXaS3SXYt9ApoldLMHXb2668p5aBbaEyvXk27k/5Yx81mglYz6Bfb5LtM5WFUPuH+bhSuCSW9Yd1R12eB3YDFC6NzNfvJu3RnP416jukHqm7wBPY5lqZRCcveYPTGnTimbml7aFEzVJXZC7Cqr76YcfuUYg53iBM0D/CTmviXmcqCBjrSOKb1eyn0tNuliNYqBpSWvl+Foqj1h2mkzpjfwMt7sCGiaIVViltGtkqMTaN4IJOFm/rFPtOqMGpnN/ra2Y0+8QOKiH2HuSCMOidHx6f20bF9dFybu0dx1CvPehRodZLq/rQ1HNT9rEKqaKvdO0fFrE8c60pm2h3rNmZ6Omd+0+nP9EVFtY2Mhr2pc3JU4VbssVk1eBDYZ6qilAxQELD75GJYUldJpiq8OQnIJ9wyXxpp2Vsj8nQFZunWr/GINly59q6cSNUunlZJ9jcXj3XUtP2A6DO/hb64hqlPsChwycr0b4/gGL47OgK4NiL0ANfGbx/h2tDnIdcK2tZtnohxaes4AddGIOZ21vO8NgRbynvEsR1xFmEuCRa2qvYZhWtjQXhIVxyujZo+lWvUTzgTmwO0am2047b1WlvPr1/GyZrmwjSM/Egw670bxra+ubNpz+cHta3fBKNbMXQR1ogmw8gon8/uOsB8MsOWztWrNUHzPRm1RGsHTAKQ2FyXn691f9BsupRTVrN8Bf0plzJJzkuSm5hVVbssjGK9nBu8JUFpmYaRbULOh+SwMTlDTI8cj48euXN9KJugNm7otpyVvYez/B594mxGBuiNR5NZZ+B8qCB8ht8+wmFLLXgUuOlGfQif4QHxlfhQz8RK5HQiVnpjGkbSvqzkeOA4YHZ651Oz1MmsbILpVWt9S1tE2FeO0GTmTexJDzS2ZZSLpTCLd0BmnISQvAYRL5fkIblwnSnR6c76P6tic+J2Z6PJ201+s8VwKFa6SJLepwzYitCaGeEzCLwAG8OhaCvmX1vtdsHIedv2ieX4YCzJ1hndyrI4yVuBzC+wHleY1lq4qcckn0sEe33F0Ac020IwfE42RNtGfAUVz665ulo2G9q+vhKva59x8l1DuqiuJgNwasiHJVaF9LvUGYDDVhY1FY3CyGFZ1lrTpqGPU5Y3RMpQmagLKsYcL8mDYlPDrDAr9GNKzZmdDIiQnCnqBYScbglR34gcMxakuOLd0fuW/vbi0Cm2dctCbTq1xa7tIyjfhVPyCTsFpL+kbiPtRGtnv85lY2XKFjt6jfOdqFt82EE1U7QAXtG03HyvNuPLtPVNr4w0WoSEXgnM9YGGU8WssCl1hcC0fi+9+MPcwUiIm1YUzwPiv8ZrbeJbvO4hiRTTEpmqapt2BFjFh32LuBxYL7G8YQunSKGqXLHdBlb5scRMYH5HfDzmhPokQkE++7pZ0l9olYro2zklrbkSePrqURyTvkyFX0KgwrNxn61t9unrfaYlC2VYuU4Ox5xmKhUBXv9nmp+S7GvKlwVg3L/BQnIkWb4kiu8mSYnjWAUWDcwLXf1K634/u83tta4+Uy686IdohV/l/DdUD+HaONu+ZemqwXjsBwp76OzaGcv1XPpVZr3CooWPM+ubcesp04TNnSlVjyK6qKXuyU3B5DvRtAgEN7s5ZVTvX2bf0l4b9qqx065GbBQRO0lPthtPw8Xyxg51+CgHID2oa3hM7+oNJz2eJwGl5ECNJMHCJotqqCkMpsu7IToooGwV2mkvZctiVqDFTx41y+ZGd1N1qr9frs7HznP3/APalmn8fwAAAP//z1WRNJw9AAA='))]",
          "computerName": "[variables('vmName')]",
          "adminUsername": "[parameters('linuxAdminUsername')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": "true",
            "ssh": {
              "publicKeys": [
                {
                  "keyData": "[parameters('sshPublicKey')]",
                  "path": "[variables('sshKeyPath')]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[variables('imageSku')]",
            "version": "[variables('imageVersion')]"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob, variables('vmStorageAccountContainerName'),'/',variables('OSDiskName'),'.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": "true",
            "storageUri": "[reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('vmName'),'/LinuxCustomScriptExtension')]",
      "apiVersion": "2016-03-30",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "CustomScript",
        "typeHandlerVersion": "2.0",
        "autoUpgradeMinorVersion": "true",
        "protectedSettings": {
          "commandToExecute": "[concat(variables('scriptParameters'), ' PUBLICIP_FQDN=', '\"', reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn,'\"',' /bin/bash /opt/azure/containers/script.sh >> /var/log/azure/deploy-script-dvm.log 2>&1')]"
        }
      }
    }
  ],
  "outputs": {
    "dvmPublicIpFqdn": {
      "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn]",
      "type": "string"
    }
  }
}
