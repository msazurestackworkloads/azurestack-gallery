{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "linuxAdminUsername": {
      "type": "string",
      "defaultValue": "azureuser",
      "metadata": {
        "description": "User name for the Linux Virtual Machines that are part of the Kubernetes cluster and DVM."
      }
    },
    "sshPublicKey": {
      "metadata": {
        "description": "SSH public key used for auth to all Linux machines created as part of the the Kubernetes cluster and DVM."
      },
      "type": "string"
    },
    "masterProfileDnsPrefix": {
      "type": "string",
      "metadata": {
        "description": "This must be a region-unique name e.g. k8s-12345. Try to chose it same as the resource group name as best practice."
      }
    },
    "agentPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes Node Pool Profile Count"
      },
      "type": "int"
    },
    "agentPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The VMSize of Kubernetes node VMs"
      },
      "type": "string"
    },
    "masterPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes Master Pool Profile Count"
      },
      "type": "int"
    },
    "masterPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The VMSize of Kubernetes master VMs"
      },
      "type": "string"
    },
    "storageProfile": {
      "defaultValue": "blobdisk",
      "metadata": {
        "description": "The Storage Profile"
      },
      "type": "string"
    },
    "servicePrincipalClientId": {
      "metadata": {
        "description": "The Service Principal application ID (used by the Kubernetes Azure cloud provider). More help here: https://github.com/Azure/acs-engine/blob/master/docs/serviceprincipal.md"
      },
      "type": "securestring"
    },
    "servicePrincipalClientSecret": {
      "metadata": {
        "description": "The Service Principal Client Secret."
      },
      "type": "securestring"
    },
    "servicePrincipalCertificateKeyVaultId": {
      "defaultValue": "servicePrincipalCertificateKeyVaultId",
      "metadata": {
        "description": "the service Principal Certificate KeyVault Id"
      },
      "type": "string"
    },
    "servicePrincipalCertificateKeyVaultSecretName": {
      "defaultValue": "servicePrincipalCertificateKeyVaultSecretName",
      "metadata": {
        "description": "The service Principal Certificate KeyVault SecretName"
      },
      "type": "string"
    },
    "identitySystem": {
      "defaultValue": "AzureAD",
      "allowedValues": [
        "AzureAD",
        "ADFS"
      ],
      "metadata": {
        "description": "The identity system of azure stack. The value could be AzureAD or ADFS"
      },
      "type": "string"
    },
    "kubernetesAzureCloudProviderVersion": {
      "type": "string",
      "defaultValue": "1.11",
      "metadata": {
        "description": "This is the version for the kubernetes Azure cloud provider. We would use a custom kubernetes build specifically for AzureStack for each version."
      }
    }
  },
  "variables": {
    "resourceGroupName": "[resourceGroup().name]",
    "dnsNameForPublicIP": "[toLower(concat('vmd-dns', parameters('masterProfileDnsPrefix')))]",
    "location": "[resourceGroup().location]",
    "imagePublisher": "Canonical",
    "imageOffer": "UbuntuServer",
    "imageSku": "16.04-LTS",
    "imageVersion": "latest",
    "vmSize": "Standard_D2_v2",
    "OSDiskName": "osdisk",
    "nicName": "[concat('vmd-vnic', uniqueString(resourceGroup().id))]",
    "addressPrefix": "10.0.0.0/24",
    "subnetName": "mySubnet",
    "subnetPrefix": "10.0.0.0/24",
    "storageAccountName": "[concat('vmdsa', uniquestring(resourceGroup().id))]",
    "storageAccountType": "Standard_LRS",
    "publicIPAddressName": "[concat('vmd-publicIP', uniqueString(resourceGroup().id))]",
    "publicIPAddressType": "Static",
    "vmStorageAccountContainerName": "vhds",
    "vmName": "[concat('vmd-', uniqueString(resourceGroup().id))]",
    "virtualNetworkName": "[concat('vmd-vnet-', uniqueString(resourceGroup().id))]",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
    "subnetRef": "[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]",
    "networkSecurityGroupName": "[tolower(concat('vmd-nsg',uniquestring(resourceGroup().id)))]",
    "sshKeyPath": "[concat('/home/',parameters('linuxAdminUsername'),'/.ssh/authorized_keys')]",
    "tenantSubscriptionId": "[subscription().subscriptionId]",
    "scriptName": "script",
    "singleQuote": "'",
    "scriptParameters": "[concat('IDENTITY_SYSTEM=','\"',parameters('identitySystem'),'\"',' RESOURCE_GROUP_NAME=','\"',variables('resourceGroupName'),'\"',' PUBLICIP_DNS=','\"',variables('dnsNameForPublicIP'),'\"' ,' TENANT_ID=','\"',subscription().tenantId,'\"' ,' TENANT_SUBSCRIPTION_ID=','\"',variables('tenantSubscriptionId'),'\"',' ADMIN_USERNAME=','\"',parameters('linuxAdminUsername'),'\"',' MASTER_DNS_PREFIX=','\"',parameters('masterProfileDnsPrefix'),'\"' ,' AGENT_COUNT=','\"',parameters('agentPoolProfileCount'),'\"' ,' AGENT_SIZE=','\"',parameters('agentPoolProfileVMSize'),'\"' ,' MASTER_COUNT=','\"',parameters('masterPoolProfileCount'),'\"',' MASTER_SIZE=','\"',parameters('masterPoolProfileVMSize'),'\"' ,' SPN_CLIENT_ID=','\"',parameters('servicePrincipalClientId'),'\"' ,' SPN_CLIENT_SECRET=','\"',parameters('servicePrincipalClientSecret'),'\"' ,' SPN_CLIENT_SECRET_KEYVAULT_ID=','\"',parameters('servicePrincipalCertificateKeyVaultId'),'\"' ,' SPN_CLIENT_SECRET_KEYVAULT_SECRET_NAME=','\"',parameters('servicePrincipalCertificateKeyVaultSecretName'),'\"' ,' K8S_AZURE_CLOUDPROVIDER_VERSION=','\"',parameters('kubernetesAzureCloudProviderVersion'),'\"' ,' REGION_NAME=','\"',variables('location'),'\"' ,' SSH_PUBLICKEY=','\"',parameters('sshPublicKey'),'\"' ,' STORAGE_PROFILE=','\"',parameters('storageProfile'),'\"')]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[toLower(variables('storageAccountName'))]",
      "apiVersion": "2015-06-15",
      "location": "[variables('location')]",
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('networkSecurityGroupName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": [
          {
            "name": "ssh",
            "properties": {
              "description": "Allow SSH",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 200,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddressName')]",
      "location": "[variables('location')]",
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[variables('dnsNameForPublicIP')]"
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[variables('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
        "[variables('networkSecurityGroupName')]"
      ],
      "properties": {
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
        },
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2016-03-30",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('vmName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "osProfile": {
          "customData": "[base64(concat('#cloud-config\n\nwrite_files:\n- path: \"/opt/azure/containers/script.sh\"\n  permissions: \"0744\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    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'))]",

          "computerName": "[variables('vmName')]",
          "adminUsername": "[parameters('linuxAdminUsername')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": "true",
            "ssh": {
              "publicKeys": [
                {
                  "keyData": "[parameters('sshPublicKey')]",
                  "path": "[variables('sshKeyPath')]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[variables('imageSku')]",
            "version": "[variables('imageVersion')]"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob, variables('vmStorageAccountContainerName'),'/',variables('OSDiskName'),'.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": "true",
            "storageUri": "[reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('vmName'),'/LinuxCustomScriptExtension')]",
      "apiVersion": "2016-03-30",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "CustomScript",
        "typeHandlerVersion": "2.0",
        "autoUpgradeMinorVersion": "true",
        "protectedSettings": {
          "commandToExecute": "[concat(variables('scriptParameters'), ' PUBLICIP_FQDN=', '\"', reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn,'\"',' /bin/bash /opt/azure/containers/script.sh >> /var/log/azure/acsengine-kubernetes-dvm.log 2>&1')]"
        }
      }
    }
  ],
  "outputs": {
    "dvmPublicIpFqdn": {
      "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn]",
      "type": "string"
    }
  }
}