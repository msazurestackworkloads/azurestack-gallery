{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "linuxAdminUsername": {
      "type": "string",
      "defaultValue": "azureuser",
      "metadata": {
        "description": "User name for the Linux virtual machines that are part of the Kubernetes cluster and DVM."
      }
    },
    "sshPublicKey": {
      "metadata": {
        "description": "SSH public key used for auth to all Linux machines created as part of the the Kubernetes cluster and DVM."
      },
      "type": "string"
    },
    "masterProfileDnsPrefix": {
      "type": "string",
      "metadata": {
        "description": "This must be a region-unique name e.g. k8s-12345. Try to chose it same as the resource group name as best practice."
      }
    },
    "agentPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes linux node pool profile count"
      },
      "type": "int"
    },
    "agentPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The virtual machine size of the Kubernetes linux agent nodes"
      },
      "type": "string"
    },
    "masterPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes master pool profile count"
      },
      "type": "int"
    },
    "masterPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The virtual machine size of the Kubernetes master nodes"
      },
      "type": "string"
    },
    "storageProfile": {
      "defaultValue": "manageddisk",
      "metadata": {
        "description": "The Storage Profile"
      },
      "type": "string"
    },
    "servicePrincipalClientId": {
      "metadata": {
        "description": "The Service Principal application ID (used by the Kubernetes Azure cloud provider). More help here: https://github.com/Azure/aks-engine/blob/master/docs/topics/service-principals.md"
      },
      "type": "securestring"
    },
    "servicePrincipalClientSecret": {
      "metadata": {
        "description": "The Service Principal Client Secret."
      },
      "type": "securestring"
    },
    "identitySystem": {
      "defaultValue": "AzureAD",
      "allowedValues": [
        "AzureAD",
        "ADFS"
      ],
      "metadata": {
        "description": "The identity system of Azure Stack. The value could be AzureAD or ADFS"
      },
      "type": "string"
    },
    "kubernetesAzureCloudProviderVersion": {
      "type": "string",
      "defaultValue": "1.13",
      "metadata": {
        "description": "This is the version for the Kubernetes Azure cloud provider. We would use a custom Kubernetes build specifically for Azure Stack for each version."
      }
    },
    "aksEngineBaseURL": {
      "type": "string",
      "defaultValue": "https://github.com/Azure/aks-engine/releases/download",
      "metadata": {
        "description": "The beginning of the URL for downloading the AKS Engine binary"
      }
    },
    "aksEngineReleaseVersion": {
      "type": "string",
      "defaultValue": "v0.41.0",
      "metadata": {
        "description": "The version of AKS Engine to download"
      }
    },
    "galleryRepository": {
      "type": "string",
      "defaultValue": "msazurestackworkloads/azurestack-gallery",
      "metadata": {
        "description": "Marketplace item repository"
      }
    },
    "galleryBranch": {
      "type": "string",
      "defaultValue": "master",
      "metadata": {
        "description": "Marketplace item branch"
      }
    },
    "clusterDefinitionFileName": {
      "type": "string",
      "defaultValue": "clusterDefinition.json",
      "metadata": {
        "description": "The name of the file containing the cluster definition"
      }
    },
    "kubernetesImageBase": {
      "type": "string",
      "defaultValue": "mcr.microsoft.com/k8s/azurestack/core/",
      "metadata": {
        "description": "The base for Kubernetes images"
      }
    },
    "customVnetName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Name of the custom vnet"
      }
    },
    "masterSubnetName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Name of the master subnet"
      }
    },
    "agentSubnetName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Name of the agent subnet"
      }
    },
    "firstConsecutiveStaticIP": {
      "type": "string",
      "defaultValue": "10.100.0.5",
      "metadata": {
        "description": "First Consective Static IP"
      }
    },
    "networkPlugin": {
      "defaultValue": "kubenet",
      "allowedValues": [
        "flannel",
        "azure",
        "kubenet"
      ],
      "metadata": {
        "description": "Network plugin which will deployed in Kubernetes cluster"
      },
      "type": "string"
    },
    "availabilityProfile": {
      "defaultValue": "AvailabilitySet",
      "allowedValues": [
        "AvailabilitySet",
        "VirtualMachineScaleSets"
      ],
      "metadata": {
        "description": "Availability profile that nodes in the Kubernetes cluster will be deployed with"
      },
      "type": "string"
    },
    "windowsAgentPoolProfileCount": {
      "defaultValue": "0",      
      "metadata": {
        "description": "Kubernetes Windows node pool profile count"
      },
      "type": "string"
    },
    "windowsAgentPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The virtual machine size of the Kubernetes Windows agent nodes"
      },
      "type": "string"
    },
    "windowsAdminUsername": {
      "defaultValue": "azureuser",
      "metadata": {
        "description": "User name for the Windows virtual machines that are part of the Kubernetes cluster."
      },
      "type": "string"
    },
    "windowsAdminPassword": {
      "defaultValue": "",
      "metadata": {
        "description": "Password for the Windows virtual machines that are part of the Kubernetes cluster."
      },
      "type": "securestring"
    },
    "nodeDistro": {
      "defaultValue": "ubuntu",
      "allowedValues": [
        "ubuntu",
        "aks-ubuntu-16.04"
      ],
      "metadata": {
        "description": "Node distro to be used to deploy Kubernetes on Azure Stack."
      },
      "type": "string"
    }
  },
  "variables": {
    "resourceGroupName": "[resourceGroup().name]",
    "dnsNameForPublicIP": "[toLower(concat('vmd-dns', parameters('masterProfileDnsPrefix')))]",
    "location": "[resourceGroup().location]",
    "imagePublisher": "Canonical",
    "imageOffer": "UbuntuServer",
    "imageSku": "16.04-LTS",
    "imageVersion": "latest",
    "vmSize": "Standard_D2_v2",
    "OSDiskName": "osdisk",
    "nicName": "[concat('vmd-vnic', uniqueString(resourceGroup().id))]",
    "addressPrefix": "10.0.0.0/24",
    "subnetName": "mySubnet",
    "subnetPrefix": "10.0.0.0/24",
    "storageAccountName": "[concat('vmdsa', uniquestring(resourceGroup().id))]",
    "storageAccountType": "Standard_LRS",
    "publicIPAddressName": "[concat('vmd-publicIP', uniqueString(resourceGroup().id))]",
    "publicIPAddressType": "Static",
    "vmStorageAccountContainerName": "vhds",
    "vmName": "[concat('vmd-', uniqueString(resourceGroup().id))]",
    "virtualNetworkName": "[concat('vmd-vnet-', uniqueString(resourceGroup().id))]",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
    "subnetRef": "[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]",
    "networkSecurityGroupName": "[tolower(concat('vmd-nsg',uniquestring(resourceGroup().id)))]",
    "sshKeyPath": "[concat('/home/',parameters('linuxAdminUsername'),'/.ssh/authorized_keys')]",
    "tenantSubscriptionId": "[subscription().subscriptionId]",
    "scriptName": "script",
    "singleQuote": "'",
    "scriptParameters": "[concat('IDENTITY_SYSTEM=','\"',parameters('identitySystem'),'\"',' WINDOWS_AGENT_COUNT=','\"',parameters('windowsAgentPoolProfileCount'),'\"' ,' WINDOWS_AGENT_SIZE=','\"',parameters('windowsAgentPoolProfileVMSize'),'\"',' WINDOWS_ADMIN_USERNAME=','\"',parameters('windowsAdminUsername'),'\"',' WINDOWS_ADMIN_PASSWORD=','\"',parameters('windowsAdminPassword'),'\"',' NETWORK_PLUGIN=','\"',parameters('networkPlugin'),'\"',' AVAILABILITY_PROFILE=','\"',parameters('availabilityProfile'),'\"',' FIRST_CONSECUTIVE_STATIC_IP=','\"',parameters('firstConsecutiveStaticIP'),'\"',' AGENT_SUBNET_NAME=','\"',parameters('agentSubnetName'),'\"',' MASTER_SUBNET_NAME=','\"',parameters('masterSubnetName'),'\"',' CUSTOM_VNET_NAME=','\"',parameters('customVnetName'),'\"',' NODE_DISTRO=','\"',parameters('nodeDistro'),'\"',' RESOURCE_GROUP_NAME=','\"',variables('resourceGroupName'),'\"',' PUBLICIP_DNS=','\"',variables('dnsNameForPublicIP'),'\"' ,' TENANT_ID=','\"',subscription().tenantId,'\"' ,' TENANT_SUBSCRIPTION_ID=','\"',variables('tenantSubscriptionId'),'\"',' ADMIN_USERNAME=','\"',parameters('linuxAdminUsername'),'\"',' MASTER_DNS_PREFIX=','\"',parameters('masterProfileDnsPrefix'),'\"' ,' AGENT_COUNT=','\"',parameters('agentPoolProfileCount'),'\"' ,' AGENT_SIZE=','\"',parameters('agentPoolProfileVMSize'),'\"' ,' MASTER_COUNT=','\"',parameters('masterPoolProfileCount'),'\"',' MASTER_SIZE=','\"',parameters('masterPoolProfileVMSize'),'\"' ,' SPN_CLIENT_ID=','\"',parameters('servicePrincipalClientId'),'\"' ,' SPN_CLIENT_SECRET=','\"',parameters('servicePrincipalClientSecret'),'\"' ,' K8S_AZURE_CLOUDPROVIDER_VERSION=','\"',parameters('kubernetesAzureCloudProviderVersion'),'\"' ,' REGION_NAME=','\"',variables('location'),'\"' ,' SSH_PUBLICKEY=','\"',parameters('sshPublicKey'),'\"' ,' STORAGE_PROFILE=','\"',parameters('storageProfile'),'\"',' AKSE_BASE_URL=','\"',parameters('aksEngineBaseURL'), '\"', ' AKSE_RELEASE_VERSION=','\"',parameters('aksEngineReleaseVersion'),'\"',' GALLERY_REPO=','\"',parameters('galleryRepository'),'\"',' GALLERY_BRANCH=','\"',parameters('galleryBranch'),'\"',' DEFINITION_TEMPLATE_NAME=','\"',parameters('clusterDefinitionFileName'),'\"',' K8S_IMAGE_BASE=','\"',parameters('kubernetesImageBase'),'\"')]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[toLower(variables('storageAccountName'))]",
      "apiVersion": "2015-06-15",
      "location": "[variables('location')]",
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('networkSecurityGroupName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": [
          {
            "name": "ssh",
            "properties": {
              "description": "Allow SSH",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 200,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddressName')]",
      "location": "[variables('location')]",
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[variables('dnsNameForPublicIP')]"
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[variables('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
        "[variables('networkSecurityGroupName')]"
      ],
      "properties": {
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
        },
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2016-03-30",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('vmName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "osProfile": {
          "customData": "[base64(concat('#cloud-config\n\nwrite_files:\n- path: \"/opt/azure/containers/script.sh\"\n  permissions: \"0744\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    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'))]",
          "computerName": "[variables('vmName')]",
          "adminUsername": "[parameters('linuxAdminUsername')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": "true",
            "ssh": {
              "publicKeys": [
                {
                  "keyData": "[parameters('sshPublicKey')]",
                  "path": "[variables('sshKeyPath')]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[variables('imageSku')]",
            "version": "[variables('imageVersion')]"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob, variables('vmStorageAccountContainerName'),'/',variables('OSDiskName'),'.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": "true",
            "storageUri": "[reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('vmName'),'/LinuxCustomScriptExtension')]",
      "apiVersion": "2016-03-30",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "CustomScript",
        "typeHandlerVersion": "2.0",
        "autoUpgradeMinorVersion": "true",
        "protectedSettings": {
          "commandToExecute": "[concat(variables('scriptParameters'), ' PUBLICIP_FQDN=', '\"', reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn,'\"',' /bin/bash /opt/azure/containers/script.sh >> /var/log/azure/deploy-script-dvm.log 2>&1')]"
        }
      }
    }
  ],
  "outputs": {
    "dvmPublicIpFqdn": {
      "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn]",
      "type": "string"
    }
  }
}
