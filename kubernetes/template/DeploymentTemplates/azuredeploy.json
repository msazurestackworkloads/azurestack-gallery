{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "linuxAdminUsername": {
      "type": "string",
      "defaultValue": "azureuser",
      "metadata": {
        "description": "User name for the Linux Virtual Machines that are part of the Kubernetes cluster and DVM."
      }
    },
    "sshPublicKey": {
      "metadata": {
        "description": "SSH public key used for auth to all Linux machines created as part of the the Kubernetes cluster and DVM."
      },
      "type": "string"
    },
    "masterProfileDnsPrefix": {
      "type": "string",
      "metadata": {
        "description": "This must be a region-unique name e.g. k8s-12345. Try to chose it same as the resource group name as best practice."
      }
    },
    "agentPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes Node Pool Profile Count"
      },
      "type": "int"
    },
    "agentPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The VMSize of Kubernetes node VMs"
      },
      "type": "string"
    },
    "masterPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes Master Pool Profile Count"
      },
      "type": "int"
    },
    "masterPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The VMSize of Kubernetes master VMs"
      },
      "type": "string"
    },
    "storageProfile": {
      "defaultValue": "blobdisk",
      "metadata": {
        "description": "The Storage Profile"
      },
      "type": "string"
    },
    "servicePrincipalClientId": {
      "metadata": {
        "description": "The Service Principal application ID (used by the Kubernetes Azure cloud provider). More help here: https://github.com/Azure/acs-engine/blob/master/docs/serviceprincipal.md"
      },
      "type": "securestring"
    },
    "servicePrincipalClientSecret": {
      "metadata": {
        "description": "The Service Principal Client Secret."
      },
      "type": "securestring"
    },
    "servicePrincipalCertificateKeyVaultId": {
      "defaultValue": "servicePrincipalCertificateKeyVaultId",
      "metadata": {
        "description": "the service Principal Certificate KeyVault Id"
      },
      "type": "string"
    },
    "servicePrincipalCertificateKeyVaultSecretName": {
      "defaultValue": "servicePrincipalCertificateKeyVaultSecretName",
      "metadata": {
        "description": "The service Principal Certificate KeyVault SecretName"
      },
      "type": "string"
    },
    "identitySystem": {
      "defaultValue": "AzureAD",
      "allowedValues": [
        "AzureAD",
        "ADFS"
      ],
      "metadata": {
        "description": "The identity system of azure stack. The value could be AzureAD or ADFS"
      },
      "type": "string"
    },
    "kubernetesAzureCloudProviderVersion": {
      "type": "string",
      "defaultValue": "1.11",
      "metadata": {
        "description": "This is the version for the kubernetes Azure cloud provider. We would use a custom kubernetes build specifically for AzureStack for each version."
      }
    }
  },
  "variables": {
    "resourceGroupName": "[resourceGroup().name]",
    "dnsNameForPublicIP": "[toLower(concat('vmd-dns', parameters('masterProfileDnsPrefix')))]",
    "location": "[resourceGroup().location]",
    "imagePublisher": "Canonical",
    "imageOffer": "UbuntuServer",
    "imageSku": "16.04-LTS",
    "imageVersion": "latest",
    "vmSize": "Standard_D2_v2",
    "OSDiskName": "osdisk",
    "nicName": "[concat('vmd-vnic', uniqueString(resourceGroup().id))]",
    "addressPrefix": "10.0.0.0/24",
    "subnetName": "mySubnet",
    "subnetPrefix": "10.0.0.0/24",
    "storageAccountName": "[concat('vmdsa', uniquestring(resourceGroup().id))]",
    "storageAccountType": "Standard_LRS",
    "publicIPAddressName": "[concat('vmd-publicIP', uniqueString(resourceGroup().id))]",
    "publicIPAddressType": "Static",
    "vmStorageAccountContainerName": "vhds",
    "vmName": "[concat('vmd-', uniqueString(resourceGroup().id))]",
    "virtualNetworkName": "[concat('vmd-vnet-', uniqueString(resourceGroup().id))]",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
    "subnetRef": "[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]",
    "networkSecurityGroupName": "[tolower(concat('vmd-nsg',uniquestring(resourceGroup().id)))]",
    "sshKeyPath": "[concat('/home/',parameters('linuxAdminUsername'),'/.ssh/authorized_keys')]",
    "tenantSubscriptionId": "[subscription().subscriptionId]",
    "scriptName": "script",
    "singleQuote": "'",
    "scriptParameters": "[concat('IDENTITY_SYSTEM=','\"',parameters('identitySystem'),'\"',' RESOURCE_GROUP_NAME=','\"',variables('resourceGroupName'),'\"',' PUBLICIP_DNS=','\"',variables('dnsNameForPublicIP'),'\"' ,' TENANT_ID=','\"',subscription().tenantId,'\"' ,' TENANT_SUBSCRIPTION_ID=','\"',variables('tenantSubscriptionId'),'\"',' ADMIN_USERNAME=','\"',parameters('linuxAdminUsername'),'\"',' MASTER_DNS_PREFIX=','\"',parameters('masterProfileDnsPrefix'),'\"' ,' AGENT_COUNT=','\"',parameters('agentPoolProfileCount'),'\"' ,' AGENT_SIZE=','\"',parameters('agentPoolProfileVMSize'),'\"' ,' MASTER_COUNT=','\"',parameters('masterPoolProfileCount'),'\"',' MASTER_SIZE=','\"',parameters('masterPoolProfileVMSize'),'\"' ,' SPN_CLIENT_ID=','\"',parameters('servicePrincipalClientId'),'\"' ,' SPN_CLIENT_SECRET=','\"',parameters('servicePrincipalClientSecret'),'\"' ,' SPN_CLIENT_SECRET_KEYVAULT_ID=','\"',parameters('servicePrincipalCertificateKeyVaultId'),'\"' ,' SPN_CLIENT_SECRET_KEYVAULT_SECRET_NAME=','\"',parameters('servicePrincipalCertificateKeyVaultSecretName'),'\"' ,' K8S_AZURE_CLOUDPROVIDER_VERSION=','\"',parameters('kubernetesAzureCloudProviderVersion'),'\"' ,' REGION_NAME=','\"',variables('location'),'\"' ,' SSH_PUBLICKEY=','\"',parameters('sshPublicKey'),'\"' ,' STORAGE_PROFILE=','\"',parameters('storageProfile'),'\"')]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[toLower(variables('storageAccountName'))]",
      "apiVersion": "2015-06-15",
      "location": "[variables('location')]",
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('networkSecurityGroupName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": [
          {
            "name": "ssh",
            "properties": {
              "description": "Allow SSH",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 200,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddressName')]",
      "location": "[variables('location')]",
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[variables('dnsNameForPublicIP')]"
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[variables('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
        "[variables('networkSecurityGroupName')]"
      ],
      "properties": {
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
        },
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2016-03-30",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('vmName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "osProfile": {
        "customData": "[base64(concat('#cloud-config\n\nwrite_files:\n- path: \"/opt/azure/containers/script.sh\"\n  permissions: \"0744\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    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'))]",
          "computerName": "[variables('vmName')]",
          "adminUsername": "[parameters('linuxAdminUsername')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": "true",
            "ssh": {
              "publicKeys": [
                {
                  "keyData": "[parameters('sshPublicKey')]",
                  "path": "[variables('sshKeyPath')]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[variables('imageSku')]",
            "version": "[variables('imageVersion')]"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob, variables('vmStorageAccountContainerName'),'/',variables('OSDiskName'),'.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": "true",
            "storageUri": "[reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('vmName'),'/LinuxCustomScriptExtension')]",
      "apiVersion": "2016-03-30",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "CustomScript",
        "typeHandlerVersion": "2.0",
        "autoUpgradeMinorVersion": "true",
        "protectedSettings": {
          "commandToExecute": "[concat(variables('scriptParameters'), ' PUBLICIP_FQDN=', '\"', reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn,'\"',' /bin/bash /opt/azure/containers/script.sh >> /var/log/azure/acsengine-kubernetes-dvm.log 2>&1')]"
        }
      }
    }
  ],
  "outputs": {
    "dvmPublicIpFqdn": {
      "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn]",
      "type": "string"
    }
  }
}