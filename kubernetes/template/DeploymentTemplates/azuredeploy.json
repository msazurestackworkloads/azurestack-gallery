{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "linuxAdminUsername": {
      "type": "string",
      "defaultValue": "azureuser",
      "metadata": {
        "description": "User name for the Linux virtual machines that are part of the Kubernetes cluster and DVM."
      }
    },
    "sshPublicKey": {
      "metadata": {
        "description": "SSH public key used for auth to all Linux machines created as part of the the Kubernetes cluster and DVM."
      },
      "type": "string"
    },
    "masterProfileDnsPrefix": {
      "type": "string",
      "metadata": {
        "description": "This must be a region-unique name e.g. k8s-12345. Try to chose it same as the resource group name as best practice."
      }
    },
    "agentPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes linux node pool profile count"
      },
      "type": "int"
    },
    "agentPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The virtual machine size of the Kubernetes linux agent nodes"
      },
      "type": "string"
    },
    "masterPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes master pool profile count"
      },
      "type": "int"
    },
    "masterPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The virtual machine size of the Kubernetes master nodes"
      },
      "type": "string"
    },
    "storageProfile": {
      "defaultValue": "manageddisk",
      "metadata": {
        "description": "The Storage Profile"
      },
      "type": "string"
    },
    "servicePrincipalClientId": {
      "metadata": {
        "description": "The Service Principal application ID (used by the Kubernetes Azure cloud provider). More help here: https://github.com/Azure/aks-engine/blob/master/docs/topics/service-principals.md"
      },
      "type": "securestring"
    },
    "servicePrincipalClientSecret": {
      "metadata": {
        "description": "The Service Principal Client Secret."
      },
      "type": "securestring"
    },
    "identitySystem": {
      "defaultValue": "AzureAD",
      "allowedValues": [
        "AzureAD",
        "ADFS"
      ],
      "metadata": {
        "description": "The identity system of Azure Stack. The value could be AzureAD or ADFS"
      },
      "type": "string"
    },
    "kubernetesAzureCloudProviderVersion": {
      "type": "string",
      "defaultValue": "1.14",
      "metadata": {
        "description": "This is the version for the Kubernetes Azure cloud provider. We would use a custom Kubernetes build specifically for Azure Stack for each version."
      }
    },
    "aksEngineBaseURL": {
      "type": "string",
      "defaultValue": "https://github.com/Azure/aks-engine/releases/download",
      "metadata": {
        "description": "The beginning of the URL for downloading the AKS Engine binary"
      }
    },
    "aksEngineReleaseVersion": {
      "type": "string",
      "defaultValue": "v0.43.0",
      "metadata": {
        "description": "The version of AKS Engine to download"
      }
    },
    "galleryRepository": {
      "type": "string",
      "defaultValue": "msazurestackworkloads/azurestack-gallery",
      "metadata": {
        "description": "Marketplace item repository"
      }
    },
    "galleryBranch": {
      "type": "string",
      "defaultValue": "master",
      "metadata": {
        "description": "Marketplace item branch"
      }
    },
    "clusterDefinitionFileName": {
      "type": "string",
      "defaultValue": "clusterDefinition.json",
      "metadata": {
        "description": "The name of the file containing the cluster definition"
      }
    },
    "kubernetesImageBase": {
      "type": "string",
      "defaultValue": "mcr.microsoft.com/k8s/azurestack/core/",
      "metadata": {
        "description": "The base for Kubernetes images"
      }
    },
    "customVnetName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Name of the custom vnet"
      }
    },
    "masterSubnetName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Name of the master subnet"
      }
    },
    "agentSubnetName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Name of the agent subnet"
      }
    },
    "firstConsecutiveStaticIP": {
      "type": "string",
      "defaultValue": "10.100.0.5",
      "metadata": {
        "description": "First Consective Static IP"
      }
    },
    "networkPlugin": {
      "defaultValue": "kubenet",
      "allowedValues": [
        "flannel",
        "azure",
        "kubenet"
      ],
      "metadata": {
        "description": "Network plugin which will deployed in Kubernetes cluster"
      },
      "type": "string"
    },
    "networkPolicy": {
      "defaultValue": "",
      "allowedValues": [
        "",
        "azure"
      ],
      "metadata": {
        "description": "Network policy which will deployed in Kubernetes cluster"
      },
      "type": "string"
    },
    "availabilityProfile": {
      "defaultValue": "AvailabilitySet",
      "allowedValues": [
        "AvailabilitySet",
        "VirtualMachineScaleSets"
      ],
      "metadata": {
        "description": "Availability profile that nodes in the Kubernetes cluster will be deployed with"
      },
      "type": "string"
    },
    "windowsAgentPoolProfileCount": {
      "defaultValue": "0",      
      "metadata": {
        "description": "Kubernetes Windows node pool profile count"
      },
      "type": "string"
    },
    "windowsAgentPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The virtual machine size of the Kubernetes Windows agent nodes"
      },
      "type": "string"
    },
    "windowsAdminUsername": {
      "defaultValue": "azureuser",
      "metadata": {
        "description": "User name for the Windows virtual machines that are part of the Kubernetes cluster."
      },
      "type": "string"
    },
    "windowsAdminPassword": {
      "defaultValue": "",
      "metadata": {
        "description": "Password for the Windows virtual machines that are part of the Kubernetes cluster."
      },
      "type": "securestring"
    },
    "customWindowsPackageURL": {
      "defaultValue": "",
      "metadata": {
        "description": "Custom Windows K8s zip location which will be used to deploy(kubelet, kubeproxy) on Windows node."
      },
      "type": "string"
    },
    "nodeDistro": {
      "defaultValue": "ubuntu",
      "allowedValues": [
        "ubuntu",
        "aks-ubuntu-16.04"
      ],
      "metadata": {
        "description": "Node distro to be used to deploy Kubernetes on Azure Stack."
      },
      "type": "string"
    },
    "enableTillerAddOn": {
      "type": "string",
      "defaultValue": "false",
      "metadata": {
        "description": "Flag to enable Tiller addon"
      }
    },
    "containerRuntime": {
      "type": "string",
      "defaultValue": "docker",
      "allowedValues": [
        "docker",
        "containerd"
      ],
      "metadata": {
        "description": "Container runtime to deploy on each cluster node."
      }
    },
    "localAKSeBinaryURL": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Azure Stack blob url to download AKS engine from a blob store in disconnected environment "
      }
    },
    "dvmImagePublisher": {
      "type": "string",
      "defaultValue": "microsoft-aks",
      "metadata": {
        "description": "Azure VM image publisher to be used for the DVM"
      }
    },
    "dvmImageOffer": {
      "type": "string",
      "defaultValue": "aks",
      "metadata": {
        "description": "Azure VM image offer to be used for the DVM"
      }
    },
    "dvmImageSku": {
      "type": "string",
      "defaultValue": "aks-ubuntu-1604-201910",
      "metadata": {
        "description": "Azure VM image sku to be used for the DVM"
      }
    },
    "dvmImageVersion": {
      "type": "string",
      "defaultValue": "2019.10.24",
      "metadata": {
        "description": "Azure VM image version to be used for the DVM"
      }
    }
  },
  "variables": {
    "resourceGroupName": "[resourceGroup().name]",
    "dnsNameForPublicIP": "[toLower(concat('vmd-dns', parameters('masterProfileDnsPrefix')))]",
    "location": "[resourceGroup().location]",
    "vmSize": "Standard_D2_v2",
    "OSDiskName": "osdisk",
    "nicName": "[concat('vmd-vnic', uniqueString(resourceGroup().id))]",
    "addressPrefix": "10.0.0.0/24",
    "subnetName": "mySubnet",
    "subnetPrefix": "10.0.0.0/24",
    "storageAccountName": "[concat('vmdsa', uniquestring(resourceGroup().id))]",
    "storageAccountType": "Standard_LRS",
    "publicIPAddressName": "[concat('vmd-publicIP', uniqueString(resourceGroup().id))]",
    "publicIPAddressType": "Static",
    "vmStorageAccountContainerName": "vhds",
    "vmName": "[concat('vmd-', uniqueString(resourceGroup().id))]",
    "virtualNetworkName": "[concat('vmd-vnet-', uniqueString(resourceGroup().id))]",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
    "subnetRef": "[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]",
    "networkSecurityGroupName": "[tolower(concat('vmd-nsg',uniquestring(resourceGroup().id)))]",
    "sshKeyPath": "[concat('/home/',parameters('linuxAdminUsername'),'/.ssh/authorized_keys')]",
    "tenantSubscriptionId": "[subscription().subscriptionId]",
    "scriptName": "script",
    "singleQuote": "'",
    "scriptParameters": "[concat('IDENTITY_SYSTEM=','\"',parameters('identitySystem'),'\"',' ENABLE_TILLER=','\"',parameters('enableTillerAddOn'),'\"' ,' CONTAINER_RUNTIME=','\"',parameters('containerRuntime'),'\"' ,' WINDOWS_CUSTOM_PACKAGE=','\"',parameters('customWindowsPackageURL'),'\"' ,' WINDOWS_AGENT_COUNT=','\"',parameters('windowsAgentPoolProfileCount'),'\"' ,' WINDOWS_AGENT_SIZE=','\"',parameters('windowsAgentPoolProfileVMSize'),'\"',' WINDOWS_ADMIN_USERNAME=','\"',parameters('windowsAdminUsername'),'\"',' WINDOWS_ADMIN_PASSWORD=','\"',parameters('windowsAdminPassword'),'\"',' NETWORK_PLUGIN=','\"',parameters('networkPlugin'),'\"',' NETWORK_POLICY=','\"',parameters('networkPolicy'),'\"',' AVAILABILITY_PROFILE=','\"',parameters('availabilityProfile'),'\"',' FIRST_CONSECUTIVE_STATIC_IP=','\"',parameters('firstConsecutiveStaticIP'),'\"',' AGENT_SUBNET_NAME=','\"',parameters('agentSubnetName'),'\"',' MASTER_SUBNET_NAME=','\"',parameters('masterSubnetName'),'\"',' CUSTOM_VNET_NAME=','\"',parameters('customVnetName'),'\"',' NODE_DISTRO=','\"',parameters('nodeDistro'),'\"',' RESOURCE_GROUP_NAME=','\"',variables('resourceGroupName'),'\"',' PUBLICIP_DNS=','\"',variables('dnsNameForPublicIP'),'\"' ,' TENANT_ID=','\"',subscription().tenantId,'\"' ,' TENANT_SUBSCRIPTION_ID=','\"',variables('tenantSubscriptionId'),'\"',' ADMIN_USERNAME=','\"',parameters('linuxAdminUsername'),'\"',' MASTER_DNS_PREFIX=','\"',parameters('masterProfileDnsPrefix'),'\"' ,' AGENT_COUNT=','\"',parameters('agentPoolProfileCount'),'\"' ,' AGENT_SIZE=','\"',parameters('agentPoolProfileVMSize'),'\"' ,' MASTER_COUNT=','\"',parameters('masterPoolProfileCount'),'\"',' MASTER_SIZE=','\"',parameters('masterPoolProfileVMSize'),'\"' ,' SPN_CLIENT_ID=','\"',parameters('servicePrincipalClientId'),'\"' ,' SPN_CLIENT_SECRET=','\"',parameters('servicePrincipalClientSecret'),'\"' ,' K8S_AZURE_CLOUDPROVIDER_VERSION=','\"',parameters('kubernetesAzureCloudProviderVersion'),'\"' ,' REGION_NAME=','\"',variables('location'),'\"' ,' SSH_PUBLICKEY=','\"',parameters('sshPublicKey'),'\"' ,' STORAGE_PROFILE=','\"',parameters('storageProfile'),'\"',' AKSE_BASE_URL=','\"',parameters('aksEngineBaseURL'), '\"', ' AKSE_RELEASE_VERSION=','\"',parameters('aksEngineReleaseVersion'),'\"',' GALLERY_REPO=','\"',parameters('galleryRepository'),'\"',' GALLERY_BRANCH=','\"',parameters('galleryBranch'),'\"',' DEFINITION_TEMPLATE_NAME=','\"',parameters('clusterDefinitionFileName'),'\"',' K8S_IMAGE_BASE=','\"',parameters('kubernetesImageBase'),'\"',' DISCONNECTED_AKS_ENGINE_URL=','\"',parameters('localAKSeBinaryURL'),'\"')]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[toLower(variables('storageAccountName'))]",
      "apiVersion": "2015-06-15",
      "location": "[variables('location')]",
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('networkSecurityGroupName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": [
          {
            "name": "ssh",
            "properties": {
              "description": "Allow SSH",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 200,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddressName')]",
      "location": "[variables('location')]",
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[variables('dnsNameForPublicIP')]"
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[variables('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
        "[variables('networkSecurityGroupName')]"
      ],
      "properties": {
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
        },
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2016-03-30",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('vmName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "osProfile": {
          "customData": "[base64(concat('#cloud-config\n\nwrite_files:\n- path: \"/opt/azure/containers/script.sh\"\n  permissions: \"0744\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    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'))]",
          "computerName": "[variables('vmName')]",
          "adminUsername": "[parameters('linuxAdminUsername')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": "true",
            "ssh": {
              "publicKeys": [
                {
                  "keyData": "[parameters('sshPublicKey')]",
                  "path": "[variables('sshKeyPath')]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[parameters('dvmImagePublisher')]",
            "offer": "[parameters('dvmImageOffer')]",
            "sku": "[parameters('dvmImageSku')]",
            "version": "[parameters('dvmImageVersion')]"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob, variables('vmStorageAccountContainerName'),'/',variables('OSDiskName'),'.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": "true",
            "storageUri": "[reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('vmName'),'/LinuxCustomScriptExtension')]",
      "apiVersion": "2016-03-30",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "CustomScript",
        "typeHandlerVersion": "2.0",
        "autoUpgradeMinorVersion": "true",
        "protectedSettings": {
          "commandToExecute": "[concat(variables('scriptParameters'), ' PUBLICIP_FQDN=', '\"', reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn,'\"',' /bin/bash /opt/azure/containers/script.sh >> /var/log/azure/deploy-script-dvm.log 2>&1')]"
        }
      }
    }
  ],
  "outputs": {
    "dvmPublicIpFqdn": {
      "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn]",
      "type": "string"
    }
  }
}
