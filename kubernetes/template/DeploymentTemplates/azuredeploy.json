{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "linuxAdminUsername": {
      "type": "string",
      "defaultValue": "azureuser",
      "metadata": {
        "description": "User name for the Linux Virtual Machines that are part of the Kubernetes cluster and DVM."
      }
    },
    "sshPublicKey": {
      "metadata": {
        "description": "SSH public key used for auth to all Linux machines created as part of the the Kubernetes cluster and DVM."
      },
      "type": "string"
    },
    "masterProfileDnsPrefix": {
      "type": "string",
      "metadata": {
        "description": "This must be a region-unique name e.g. k8s-12345. Try to chose it same as the resource group name as best practice."
      }
    },
    "agentPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes Node Pool Profile Count"
      },
      "type": "int"
    },
    "agentPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The VMSize of Kubernetes node VMs"
      },
      "type": "string"
    },
    "masterPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes Master Pool Profile Count"
      },
      "type": "int"
    },
    "masterPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The VMSize of Kubernetes master VMs"
      },
      "type": "string"
    },
    "storageProfile": {
      "defaultValue": "manageddisk",
      "metadata": {
        "description": "The Storage Profile"
      },
      "type": "string"
    },
    "servicePrincipalClientId": {
      "metadata": {
        "description": "The Service Principal application ID (used by the Kubernetes Azure cloud provider). More help here: https://github.com/Azure/aks-engine/blob/master/docs/topics/service-principals.md"
      },
      "type": "securestring"
    },
    "servicePrincipalClientSecret": {
      "metadata": {
        "description": "The Service Principal Client Secret."
      },
      "type": "securestring"
    },
    "identitySystem": {
      "defaultValue": "AzureAD",
      "allowedValues": [
        "AzureAD",
        "ADFS"
      ],
      "metadata": {
        "description": "The identity system of Azure Stack. The value could be AzureAD or ADFS"
      },
      "type": "string"
    },
    "kubernetesAzureCloudProviderVersion": {
      "type": "string",
      "defaultValue": "1.12",
      "metadata": {
        "description": "This is the version for the Kubernetes Azure cloud provider. We would use a custom Kubernetes build specifically for Azure Stack for each version."
      }
    },
    "aksEngineBaseURL": {
      "type": "string",
      "defaultValue": "https://github.com/Azure/aks-engine/releases/download",
      "metadata": {
        "description": "The beginning of the URL for downloading the AKS Engine binary"
      }
    },
    "aksEngineReleaseVersion": {
      "type": "string",
      "defaultValue": "v0.37.4",
      "metadata": {
        "description": "The version of AKS Engine to download"
      }
    },
    "galleryRepository": {
      "type": "string",
      "defaultValue": "msazurestackworkloads/azurestack-gallery",
      "metadata": {
        "description": "Marketplace item repository"
      }
    },
    "galleryBranch": {
      "type": "string",
      "defaultValue": "master",
      "metadata": {
        "description": "Marketplace item branch"
      }
    },
    "clusterDefinitionFileName": {
      "type": "string",
      "defaultValue": "clusterDefinition.json",
      "metadata": {
        "description": "The name of the file containing the cluster definition"
      }
    },
    "kubernetesImageBase": {
      "type": "string",
      "defaultValue": "mcr.microsoft.com/k8s/azurestack/core/",
      "metadata": {
        "description": "The base for Kubernetes images"
      }
    },
    "customVnetName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Name of the custom vnet"
      }
    },
    "masterSubnetName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Name of the master subnet"
      }
    },
    "agentSubnetName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Name of the agent subnet"
      }
    },
    "firstConsecutiveStaticIP": {
      "type": "string",
      "defaultValue": "10.100.0.5",
      "metadata": {
        "description": "First Consective Static IP"
      }
    },
    "nodeDistro": {
      "defaultValue": "ubuntu",
      "allowedValues": [
        "ubuntu",
        "aks"
      ],
      "metadata": {
        "description": "Node distro to be used to deploy Kubernetes on Azure Stack."
      },
      "type": "string"
    }
  },
  "variables": {
    "resourceGroupName": "[resourceGroup().name]",
    "dnsNameForPublicIP": "[toLower(concat('vmd-dns', parameters('masterProfileDnsPrefix')))]",
    "location": "[resourceGroup().location]",
    "imagePublisher": "Canonical",
    "imageOffer": "UbuntuServer",
    "imageSku": "16.04-LTS",
    "imageVersion": "latest",
    "vmSize": "Standard_D2_v2",
    "OSDiskName": "osdisk",
    "nicName": "[concat('vmd-vnic', uniqueString(resourceGroup().id))]",
    "addressPrefix": "10.0.0.0/24",
    "subnetName": "mySubnet",
    "subnetPrefix": "10.0.0.0/24",
    "storageAccountName": "[concat('vmdsa', uniquestring(resourceGroup().id))]",
    "storageAccountType": "Standard_LRS",
    "publicIPAddressName": "[concat('vmd-publicIP', uniqueString(resourceGroup().id))]",
    "publicIPAddressType": "Static",
    "vmStorageAccountContainerName": "vhds",
    "vmName": "[concat('vmd-', uniqueString(resourceGroup().id))]",
    "virtualNetworkName": "[concat('vmd-vnet-', uniqueString(resourceGroup().id))]",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
    "subnetRef": "[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]",
    "networkSecurityGroupName": "[tolower(concat('vmd-nsg',uniquestring(resourceGroup().id)))]",
    "sshKeyPath": "[concat('/home/',parameters('linuxAdminUsername'),'/.ssh/authorized_keys')]",
    "tenantSubscriptionId": "[subscription().subscriptionId]",
    "scriptName": "script",
    "singleQuote": "'",
    "scriptParameters": "[concat('IDENTITY_SYSTEM=','\"',parameters('identitySystem'),'\"',' FIRST_CONSECUTIVE_STATIC_IP=','\"',parameters('firstConsecutiveStaticIP'),'\"',' AGENT_SUBNET_NAME=','\"',parameters('agentSubnetName'),'\"',' MASTER_SUBNET_NAME=','\"',parameters('masterSubnetName'),'\"',' CUSTOM_VNET_NAME=','\"',parameters('customVnetName'),'\"',' NODE_DISTRO=','\"',parameters('nodeDistro'),'\"',' RESOURCE_GROUP_NAME=','\"',variables('resourceGroupName'),'\"',' PUBLICIP_DNS=','\"',variables('dnsNameForPublicIP'),'\"' ,' TENANT_ID=','\"',subscription().tenantId,'\"' ,' TENANT_SUBSCRIPTION_ID=','\"',variables('tenantSubscriptionId'),'\"',' ADMIN_USERNAME=','\"',parameters('linuxAdminUsername'),'\"',' MASTER_DNS_PREFIX=','\"',parameters('masterProfileDnsPrefix'),'\"' ,' AGENT_COUNT=','\"',parameters('agentPoolProfileCount'),'\"' ,' AGENT_SIZE=','\"',parameters('agentPoolProfileVMSize'),'\"' ,' MASTER_COUNT=','\"',parameters('masterPoolProfileCount'),'\"',' MASTER_SIZE=','\"',parameters('masterPoolProfileVMSize'),'\"' ,' SPN_CLIENT_ID=','\"',parameters('servicePrincipalClientId'),'\"' ,' SPN_CLIENT_SECRET=','\"',parameters('servicePrincipalClientSecret'),'\"' ,' K8S_AZURE_CLOUDPROVIDER_VERSION=','\"',parameters('kubernetesAzureCloudProviderVersion'),'\"' ,' REGION_NAME=','\"',variables('location'),'\"' ,' SSH_PUBLICKEY=','\"',parameters('sshPublicKey'),'\"' ,' STORAGE_PROFILE=','\"',parameters('storageProfile'),'\"',' AKSE_BASE_URL=','\"',parameters('aksEngineBaseURL'), '\"', ' AKSE_RELEASE_VERSION=','\"',parameters('aksEngineReleaseVersion'),'\"',' GALLERY_REPO=','\"',parameters('galleryRepository'),'\"',' GALLERY_BRANCH=','\"',parameters('galleryBranch'),'\"',' DEFINITION_TEMPLATE_NAME=','\"',parameters('clusterDefinitionFileName'),'\"',' K8S_IMAGE_BASE=','\"',parameters('kubernetesImageBase'),'\"')]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[toLower(variables('storageAccountName'))]",
      "apiVersion": "2015-06-15",
      "location": "[variables('location')]",
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('networkSecurityGroupName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": [
          {
            "name": "ssh",
            "properties": {
              "description": "Allow SSH",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 200,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddressName')]",
      "location": "[variables('location')]",
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[variables('dnsNameForPublicIP')]"
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[variables('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
        "[variables('networkSecurityGroupName')]"
      ],
      "properties": {
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
        },
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2016-03-30",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('vmName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "osProfile": {
          "customData": "[base64(concat('#cloud-config\n\nwrite_files:\n- path: \"/opt/azure/containers/script.sh\"\n  permissions: \"0744\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    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'))]",
          "computerName": "[variables('vmName')]",
          "adminUsername": "[parameters('linuxAdminUsername')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": "true",
            "ssh": {
              "publicKeys": [
                {
                  "keyData": "[parameters('sshPublicKey')]",
                  "path": "[variables('sshKeyPath')]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[variables('imageSku')]",
            "version": "[variables('imageVersion')]"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob, variables('vmStorageAccountContainerName'),'/',variables('OSDiskName'),'.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": "true",
            "storageUri": "[reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('vmName'),'/LinuxCustomScriptExtension')]",
      "apiVersion": "2016-03-30",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "CustomScript",
        "typeHandlerVersion": "2.0",
        "autoUpgradeMinorVersion": "true",
        "protectedSettings": {
          "commandToExecute": "[concat(variables('scriptParameters'), ' PUBLICIP_FQDN=', '\"', reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn,'\"',' /bin/bash /opt/azure/containers/script.sh >> /var/log/azure/deploy-script-dvm.log 2>&1')]"
        }
      }
    }
  ],
  "outputs": {
    "dvmPublicIpFqdn": {
      "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn]",
      "type": "string"
    }
  }
}
