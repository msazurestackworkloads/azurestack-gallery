{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "linuxAdminUsername": {
      "type": "string",
      "defaultValue": "azureuser",
      "metadata": {
        "description": "User name for the Linux virtual machines that are part of the Kubernetes cluster and DVM."
      }
    },
    "sshPublicKey": {
      "metadata": {
        "description": "SSH public key used for auth to all Linux machines created as part of the the Kubernetes cluster and DVM."
      },
      "type": "string"
    },
    "masterProfileDnsPrefix": {
      "type": "string",
      "metadata": {
        "description": "This must be a region-unique name e.g. k8s-12345. Try to chose it same as the resource group name as best practice."
      }
    },
    "agentPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes linux node pool profile count"
      },
      "type": "int"
    },
    "agentPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The virtual machine size of the Kubernetes linux agent nodes"
      },
      "type": "string"
    },
    "masterPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes master pool profile count"
      },
      "type": "int"
    },
    "masterPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The virtual machine size of the Kubernetes master nodes"
      },
      "type": "string"
    },
    "storageProfile": {
      "defaultValue": "manageddisk",
      "metadata": {
        "description": "The Storage Profile"
      },
      "type": "string"
    },
    "servicePrincipalClientId": {
      "metadata": {
        "description": "The Service Principal application ID (used by the Kubernetes Azure cloud provider). More help here: https://github.com/Azure/aks-engine/blob/master/docs/topics/service-principals.md"
      },
      "type": "securestring"
    },
    "servicePrincipalClientSecret": {
      "metadata": {
        "description": "The Service Principal Client Secret."
      },
      "type": "securestring"
    },
    "identitySystem": {
      "defaultValue": "AzureAD",
      "allowedValues": [
        "AzureAD",
        "ADFS"
      ],
      "metadata": {
        "description": "The identity system of Azure Stack. The value could be AzureAD or ADFS"
      },
      "type": "string"
    },
    "kubernetesAzureCloudProviderVersion": {
      "type": "string",
      "defaultValue": "1.14",
      "metadata": {
        "description": "This is the version for the Kubernetes Azure cloud provider. We would use a custom Kubernetes build specifically for Azure Stack for each version."
      }
    },
    "aksEngineBaseURL": {
      "type": "string",
      "defaultValue": "https://github.com/Azure/aks-engine/releases/download",
      "metadata": {
        "description": "The beginning of the URL for downloading the AKS Engine binary"
      }
    },
    "aksEngineReleaseVersion": {
      "type": "string",
      "defaultValue": "v0.43.0",
      "metadata": {
        "description": "The version of AKS Engine to download"
      }
    },
    "galleryRepository": {
      "type": "string",
      "defaultValue": "msazurestackworkloads/azurestack-gallery",
      "metadata": {
        "description": "Marketplace item repository"
      }
    },
    "galleryBranch": {
      "type": "string",
      "defaultValue": "master",
      "metadata": {
        "description": "Marketplace item branch"
      }
    },
    "clusterDefinitionFileName": {
      "type": "string",
      "defaultValue": "clusterDefinition.json",
      "metadata": {
        "description": "The name of the file containing the cluster definition"
      }
    },
    "kubernetesImageBase": {
      "type": "string",
      "defaultValue": "mcr.microsoft.com/k8s/azurestack/core/",
      "metadata": {
        "description": "The base for Kubernetes images"
      }
    },
    "customVnetName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Name of the custom vnet"
      }
    },
    "masterSubnetName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Name of the master subnet"
      }
    },
    "agentSubnetName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Name of the agent subnet"
      }
    },
    "firstConsecutiveStaticIP": {
      "type": "string",
      "defaultValue": "10.100.0.5",
      "metadata": {
        "description": "First Consective Static IP"
      }
    },
    "networkPlugin": {
      "defaultValue": "kubenet",
      "allowedValues": [
        "flannel",
        "azure",
        "kubenet"
      ],
      "metadata": {
        "description": "Network plugin which will deployed in Kubernetes cluster"
      },
      "type": "string"
    },
    "availabilityProfile": {
      "defaultValue": "AvailabilitySet",
      "allowedValues": [
        "AvailabilitySet",
        "VirtualMachineScaleSets"
      ],
      "metadata": {
        "description": "Availability profile that nodes in the Kubernetes cluster will be deployed with"
      },
      "type": "string"
    },
    "windowsAgentPoolProfileCount": {
      "defaultValue": "0",      
      "metadata": {
        "description": "Kubernetes Windows node pool profile count"
      },
      "type": "string"
    },
    "windowsAgentPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The virtual machine size of the Kubernetes Windows agent nodes"
      },
      "type": "string"
    },
    "windowsAdminUsername": {
      "defaultValue": "azureuser",
      "metadata": {
        "description": "User name for the Windows virtual machines that are part of the Kubernetes cluster."
      },
      "type": "string"
    },
    "windowsAdminPassword": {
      "defaultValue": "",
      "metadata": {
        "description": "Password for the Windows virtual machines that are part of the Kubernetes cluster."
      },
      "type": "securestring"
    },
    "customWindowsPackageURL": {
      "defaultValue": "",
      "metadata": {
        "description": "Custom Windows K8s zip location which will be used to deploy(kubelet, kubeproxy) on Windows node."
      },
      "type": "string"
    },
    "nodeDistro": {
      "defaultValue": "ubuntu",
      "allowedValues": [
        "ubuntu",
        "aks-ubuntu-16.04"
      ],
      "metadata": {
        "description": "Node distro to be used to deploy Kubernetes on Azure Stack."
      },
      "type": "string"
    }
  },
  "variables": {
    "resourceGroupName": "[resourceGroup().name]",
    "dnsNameForPublicIP": "[toLower(concat('vmd-dns', parameters('masterProfileDnsPrefix')))]",
    "location": "[resourceGroup().location]",
    "imagePublisher": "Canonical",
    "imageOffer": "UbuntuServer",
    "imageSku": "16.04-LTS",
    "imageVersion": "latest",
    "vmSize": "Standard_D2_v2",
    "OSDiskName": "osdisk",
    "nicName": "[concat('vmd-vnic', uniqueString(resourceGroup().id))]",
    "addressPrefix": "10.0.0.0/24",
    "subnetName": "mySubnet",
    "subnetPrefix": "10.0.0.0/24",
    "storageAccountName": "[concat('vmdsa', uniquestring(resourceGroup().id))]",
    "storageAccountType": "Standard_LRS",
    "publicIPAddressName": "[concat('vmd-publicIP', uniqueString(resourceGroup().id))]",
    "publicIPAddressType": "Static",
    "vmStorageAccountContainerName": "vhds",
    "vmName": "[concat('vmd-', uniqueString(resourceGroup().id))]",
    "virtualNetworkName": "[concat('vmd-vnet-', uniqueString(resourceGroup().id))]",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
    "subnetRef": "[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]",
    "networkSecurityGroupName": "[tolower(concat('vmd-nsg',uniquestring(resourceGroup().id)))]",
    "sshKeyPath": "[concat('/home/',parameters('linuxAdminUsername'),'/.ssh/authorized_keys')]",
    "tenantSubscriptionId": "[subscription().subscriptionId]",
    "scriptName": "script",
    "singleQuote": "'",
    "scriptParameters": "[concat('IDENTITY_SYSTEM=','\"',parameters('identitySystem'),'\"',' WINDOWS_CUSTOM_PACKAGE=','\"',parameters('customWindowsPackageURL'),'\"' ,' WINDOWS_AGENT_COUNT=','\"',parameters('windowsAgentPoolProfileCount'),'\"' ,' WINDOWS_AGENT_SIZE=','\"',parameters('windowsAgentPoolProfileVMSize'),'\"',' WINDOWS_ADMIN_USERNAME=','\"',parameters('windowsAdminUsername'),'\"',' WINDOWS_ADMIN_PASSWORD=','\"',parameters('windowsAdminPassword'),'\"',' NETWORK_PLUGIN=','\"',parameters('networkPlugin'),'\"',' AVAILABILITY_PROFILE=','\"',parameters('availabilityProfile'),'\"',' FIRST_CONSECUTIVE_STATIC_IP=','\"',parameters('firstConsecutiveStaticIP'),'\"',' AGENT_SUBNET_NAME=','\"',parameters('agentSubnetName'),'\"',' MASTER_SUBNET_NAME=','\"',parameters('masterSubnetName'),'\"',' CUSTOM_VNET_NAME=','\"',parameters('customVnetName'),'\"',' NODE_DISTRO=','\"',parameters('nodeDistro'),'\"',' RESOURCE_GROUP_NAME=','\"',variables('resourceGroupName'),'\"',' PUBLICIP_DNS=','\"',variables('dnsNameForPublicIP'),'\"' ,' TENANT_ID=','\"',subscription().tenantId,'\"' ,' TENANT_SUBSCRIPTION_ID=','\"',variables('tenantSubscriptionId'),'\"',' ADMIN_USERNAME=','\"',parameters('linuxAdminUsername'),'\"',' MASTER_DNS_PREFIX=','\"',parameters('masterProfileDnsPrefix'),'\"' ,' AGENT_COUNT=','\"',parameters('agentPoolProfileCount'),'\"' ,' AGENT_SIZE=','\"',parameters('agentPoolProfileVMSize'),'\"' ,' MASTER_COUNT=','\"',parameters('masterPoolProfileCount'),'\"',' MASTER_SIZE=','\"',parameters('masterPoolProfileVMSize'),'\"' ,' SPN_CLIENT_ID=','\"',parameters('servicePrincipalClientId'),'\"' ,' SPN_CLIENT_SECRET=','\"',parameters('servicePrincipalClientSecret'),'\"' ,' K8S_AZURE_CLOUDPROVIDER_VERSION=','\"',parameters('kubernetesAzureCloudProviderVersion'),'\"' ,' REGION_NAME=','\"',variables('location'),'\"' ,' SSH_PUBLICKEY=','\"',parameters('sshPublicKey'),'\"' ,' STORAGE_PROFILE=','\"',parameters('storageProfile'),'\"',' AKSE_BASE_URL=','\"',parameters('aksEngineBaseURL'), '\"', ' AKSE_RELEASE_VERSION=','\"',parameters('aksEngineReleaseVersion'),'\"',' GALLERY_REPO=','\"',parameters('galleryRepository'),'\"',' GALLERY_BRANCH=','\"',parameters('galleryBranch'),'\"',' DEFINITION_TEMPLATE_NAME=','\"',parameters('clusterDefinitionFileName'),'\"',' K8S_IMAGE_BASE=','\"',parameters('kubernetesImageBase'),'\"')]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[toLower(variables('storageAccountName'))]",
      "apiVersion": "2015-06-15",
      "location": "[variables('location')]",
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('networkSecurityGroupName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": [
          {
            "name": "ssh",
            "properties": {
              "description": "Allow SSH",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 200,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddressName')]",
      "location": "[variables('location')]",
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[variables('dnsNameForPublicIP')]"
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[variables('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
        "[variables('networkSecurityGroupName')]"
      ],
      "properties": {
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
        },
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2016-03-30",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('vmName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "osProfile": {
          "customData": "[base64(concat('#cloud-config\n\nwrite_files:\n- path: \"/opt/azure/containers/script.sh\"\n  permissions: \"0744\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    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'))]",
          "computerName": "[variables('vmName')]",
          "adminUsername": "[parameters('linuxAdminUsername')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": "true",
            "ssh": {
              "publicKeys": [
                {
                  "keyData": "[parameters('sshPublicKey')]",
                  "path": "[variables('sshKeyPath')]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[variables('imageSku')]",
            "version": "[variables('imageVersion')]"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob, variables('vmStorageAccountContainerName'),'/',variables('OSDiskName'),'.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": "true",
            "storageUri": "[reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('vmName'),'/LinuxCustomScriptExtension')]",
      "apiVersion": "2016-03-30",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "CustomScript",
        "typeHandlerVersion": "2.0",
        "autoUpgradeMinorVersion": "true",
        "protectedSettings": {
          "commandToExecute": "[concat(variables('scriptParameters'), ' PUBLICIP_FQDN=', '\"', reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn,'\"',' /bin/bash /opt/azure/containers/script.sh >> /var/log/azure/deploy-script-dvm.log 2>&1')]"
        }
      }
    }
  ],
  "outputs": {
    "dvmPublicIpFqdn": {
      "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn]",
      "type": "string"
    }
  }
}
