{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "linuxAdminUsername": {
      "type": "string",
      "defaultValue": "azureuser",
      "metadata": {
        "description": "User name for the Linux Virtual Machines that are part of the Kubernetes cluster and DVM."
      }
    },
    "sshPublicKey": {
      "metadata": {
        "description": "SSH public key used for auth to all Linux machines created as part of the the Kubernetes cluster and DVM."
      },
      "type": "string"
    },
    "masterProfileDnsPrefix": {
      "type": "string",
      "metadata": {
        "description": "This must be a region-unique name e.g. k8s-12345. Try to chose it same as the resource group name as best practice."
      }
    },
    "agentPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes Node Pool Profile Count"
      },
      "type": "int"
    },
    "agentPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The VMSize of Kubernetes node VMs"
      },
      "type": "string"
    },
    "masterPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes Master Pool Profile Count"
      },
      "type": "int"
    },
    "masterPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The VMSize of Kubernetes master VMs"
      },
      "type": "string"
    },
    "storageProfile": {
      "defaultValue": "manageddisk",
      "metadata": {
        "description": "The Storage Profile"
      },
      "type": "string"
    },
    "servicePrincipalClientId": {
      "metadata": {
        "description": "The Service Principal application ID (used by the Kubernetes Azure cloud provider). More help here: https://github.com/Azure/aks-engine/blob/master/docs/topics/service-principals.md"
      },
      "type": "securestring"
    },
    "servicePrincipalClientSecret": {
      "metadata": {
        "description": "The Service Principal Client Secret."
      },
      "type": "securestring"
    },
    "identitySystem": {
      "defaultValue": "AzureAD",
      "allowedValues": [
        "AzureAD",
        "ADFS"
      ],
      "metadata": {
        "description": "The identity system of Azure Stack. The value could be AzureAD or ADFS"
      },
      "type": "string"
    },
    "kubernetesAzureCloudProviderVersion": {
      "type": "string",
      "defaultValue": "1.11",
      "metadata": {
        "description": "This is the version for the Kubernetes Azure cloud provider. We would use a custom Kubernetes build specifically for Azure Stack for each version."
      }
    }
  },
  "variables": {
    "resourceGroupName": "[resourceGroup().name]",
    "dnsNameForPublicIP": "[toLower(concat('vmd-dns', parameters('masterProfileDnsPrefix')))]",
    "location": "[resourceGroup().location]",
    "imagePublisher": "Canonical",
    "imageOffer": "UbuntuServer",
    "imageSku": "16.04-LTS",
    "imageVersion": "latest",
    "vmSize": "Standard_D2_v2",
    "OSDiskName": "osdisk",
    "nicName": "[concat('vmd-vnic', uniqueString(resourceGroup().id))]",
    "addressPrefix": "10.0.0.0/24",
    "subnetName": "mySubnet",
    "subnetPrefix": "10.0.0.0/24",
    "storageAccountName": "[concat('vmdsa', uniquestring(resourceGroup().id))]",
    "storageAccountType": "Standard_LRS",
    "publicIPAddressName": "[concat('vmd-publicIP', uniqueString(resourceGroup().id))]",
    "publicIPAddressType": "Static",
    "vmStorageAccountContainerName": "vhds",
    "vmName": "[concat('vmd-', uniqueString(resourceGroup().id))]",
    "virtualNetworkName": "[concat('vmd-vnet-', uniqueString(resourceGroup().id))]",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
    "subnetRef": "[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]",
    "networkSecurityGroupName": "[tolower(concat('vmd-nsg',uniquestring(resourceGroup().id)))]",
    "sshKeyPath": "[concat('/home/',parameters('linuxAdminUsername'),'/.ssh/authorized_keys')]",
    "tenantSubscriptionId": "[subscription().subscriptionId]",
    "scriptName": "script",
    "singleQuote": "'",
    "scriptParameters": "[concat('IDENTITY_SYSTEM=','\"',parameters('identitySystem'),'\"',' RESOURCE_GROUP_NAME=','\"',variables('resourceGroupName'),'\"',' PUBLICIP_DNS=','\"',variables('dnsNameForPublicIP'),'\"' ,' TENANT_ID=','\"',subscription().tenantId,'\"' ,' TENANT_SUBSCRIPTION_ID=','\"',variables('tenantSubscriptionId'),'\"',' ADMIN_USERNAME=','\"',parameters('linuxAdminUsername'),'\"',' MASTER_DNS_PREFIX=','\"',parameters('masterProfileDnsPrefix'),'\"' ,' AGENT_COUNT=','\"',parameters('agentPoolProfileCount'),'\"' ,' AGENT_SIZE=','\"',parameters('agentPoolProfileVMSize'),'\"' ,' MASTER_COUNT=','\"',parameters('masterPoolProfileCount'),'\"',' MASTER_SIZE=','\"',parameters('masterPoolProfileVMSize'),'\"' ,' SPN_CLIENT_ID=','\"',parameters('servicePrincipalClientId'),'\"' ,' SPN_CLIENT_SECRET=','\"',parameters('servicePrincipalClientSecret'),'\"' ,' K8S_AZURE_CLOUDPROVIDER_VERSION=','\"',parameters('kubernetesAzureCloudProviderVersion'),'\"' ,' REGION_NAME=','\"',variables('location'),'\"' ,' SSH_PUBLICKEY=','\"',parameters('sshPublicKey'),'\"' ,' STORAGE_PROFILE=','\"',parameters('storageProfile'),'\"')]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[toLower(variables('storageAccountName'))]",
      "apiVersion": "2015-06-15",
      "location": "[variables('location')]",
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('networkSecurityGroupName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": [
          {
            "name": "ssh",
            "properties": {
              "description": "Allow SSH",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 200,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddressName')]",
      "location": "[variables('location')]",
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[variables('dnsNameForPublicIP')]"
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[variables('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
        "[variables('networkSecurityGroupName')]"
      ],
      "properties": {
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
        },
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2016-03-30",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('vmName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "osProfile": {
          "customData": "[base64(concat('#cloud-config\n\nwrite_files:\n- path: \"/opt/azure/containers/script.sh\"\n  permissions: \"0744\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    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'))]",
          "computerName": "[variables('vmName')]",
          "adminUsername": "[parameters('linuxAdminUsername')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": "true",
            "ssh": {
              "publicKeys": [
                {
                  "keyData": "[parameters('sshPublicKey')]",
                  "path": "[variables('sshKeyPath')]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[variables('imageSku')]",
            "version": "[variables('imageVersion')]"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob, variables('vmStorageAccountContainerName'),'/',variables('OSDiskName'),'.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": "true",
            "storageUri": "[reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('vmName'),'/LinuxCustomScriptExtension')]",
      "apiVersion": "2016-03-30",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "CustomScript",
        "typeHandlerVersion": "2.0",
        "autoUpgradeMinorVersion": "true",
        "protectedSettings": {
          "commandToExecute": "[concat(variables('scriptParameters'), ' PUBLICIP_FQDN=', '\"', reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn,'\"',' /bin/bash /opt/azure/containers/script.sh >> /var/log/azure/deploy-script-dvm.log 2>&1')]"
        }
      }
    }
  ],
  "outputs": {
    "dvmPublicIpFqdn": {
      "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn]",
      "type": "string"
    }
  }
}
